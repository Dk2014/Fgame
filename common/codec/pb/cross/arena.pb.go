// Code generated by protoc-gen-go. DO NOT EDIT.
// source: arena.proto

package cross

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ArenaPlayer struct {
	PlayerId           *int64        `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	Force              *int64        `protobuf:"varint,2,req,name=force" json:"force,omitempty"`
	Online             *bool         `protobuf:"varint,3,req,name=online" json:"online,omitempty"`
	Name               *string       `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
	Level              *int32        `protobuf:"varint,5,req,name=level" json:"level,omitempty"`
	Role               *int32        `protobuf:"varint,6,req,name=role" json:"role,omitempty"`
	Sex                *int32        `protobuf:"varint,7,req,name=sex" json:"sex,omitempty"`
	FashionId          *int32        `protobuf:"varint,8,req,name=fashionId" json:"fashionId,omitempty"`
	ServerId           *int32        `protobuf:"varint,9,req,name=serverId" json:"serverId,omitempty"`
	BattlePropertyData *PropertyData `protobuf:"bytes,10,req,name=battlePropertyData" json:"battlePropertyData,omitempty"`
	SkillList          []*SkillData  `protobuf:"bytes,11,rep,name=skillList" json:"skillList,omitempty"`
	WinCount           *int32        `protobuf:"varint,12,req,name=winCount" json:"winCount,omitempty"`
	XXX_unrecognized   []byte        `json:"-"`
}

func (m *ArenaPlayer) Reset()                    { *m = ArenaPlayer{} }
func (m *ArenaPlayer) String() string            { return proto.CompactTextString(m) }
func (*ArenaPlayer) ProtoMessage()               {}
func (*ArenaPlayer) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ArenaPlayer) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *ArenaPlayer) GetForce() int64 {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return 0
}

func (m *ArenaPlayer) GetOnline() bool {
	if m != nil && m.Online != nil {
		return *m.Online
	}
	return false
}

func (m *ArenaPlayer) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ArenaPlayer) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *ArenaPlayer) GetRole() int32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *ArenaPlayer) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *ArenaPlayer) GetFashionId() int32 {
	if m != nil && m.FashionId != nil {
		return *m.FashionId
	}
	return 0
}

func (m *ArenaPlayer) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *ArenaPlayer) GetBattlePropertyData() *PropertyData {
	if m != nil {
		return m.BattlePropertyData
	}
	return nil
}

func (m *ArenaPlayer) GetSkillList() []*SkillData {
	if m != nil {
		return m.SkillList
	}
	return nil
}

func (m *ArenaPlayer) GetWinCount() int32 {
	if m != nil && m.WinCount != nil {
		return *m.WinCount
	}
	return 0
}

type SIArenaMatch struct {
	PlayerList       []*ArenaPlayer `protobuf:"bytes,1,rep,name=playerList" json:"playerList,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SIArenaMatch) Reset()                    { *m = SIArenaMatch{} }
func (m *SIArenaMatch) String() string            { return proto.CompactTextString(m) }
func (*SIArenaMatch) ProtoMessage()               {}
func (*SIArenaMatch) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *SIArenaMatch) GetPlayerList() []*ArenaPlayer {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

type ISArenaMatch struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ISArenaMatch) Reset()                    { *m = ISArenaMatch{} }
func (m *ISArenaMatch) String() string            { return proto.CompactTextString(m) }
func (*ISArenaMatch) ProtoMessage()               {}
func (*ISArenaMatch) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

type ISArenaMatchResult struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ISArenaMatchResult) Reset()                    { *m = ISArenaMatchResult{} }
func (m *ISArenaMatchResult) String() string            { return proto.CompactTextString(m) }
func (*ISArenaMatchResult) ProtoMessage()               {}
func (*ISArenaMatchResult) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *ISArenaMatchResult) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type SIArenaStopMatch struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SIArenaStopMatch) Reset()                    { *m = SIArenaStopMatch{} }
func (m *SIArenaStopMatch) String() string            { return proto.CompactTextString(m) }
func (*SIArenaStopMatch) ProtoMessage()               {}
func (*SIArenaStopMatch) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

type ISArenaStopMatch struct {
	Success          *bool  `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ISArenaStopMatch) Reset()                    { *m = ISArenaStopMatch{} }
func (m *ISArenaStopMatch) String() string            { return proto.CompactTextString(m) }
func (*ISArenaStopMatch) ProtoMessage()               {}
func (*ISArenaStopMatch) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *ISArenaStopMatch) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type ISArenaWin struct {
	Level            *int32 `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	Extra            *bool  `protobuf:"varint,2,req,name=extra" json:"extra,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ISArenaWin) Reset()                    { *m = ISArenaWin{} }
func (m *ISArenaWin) String() string            { return proto.CompactTextString(m) }
func (*ISArenaWin) ProtoMessage()               {}
func (*ISArenaWin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *ISArenaWin) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *ISArenaWin) GetExtra() bool {
	if m != nil && m.Extra != nil {
		return *m.Extra
	}
	return false
}

type SIArenaWin struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SIArenaWin) Reset()                    { *m = SIArenaWin{} }
func (m *SIArenaWin) String() string            { return proto.CompactTextString(m) }
func (*SIArenaWin) ProtoMessage()               {}
func (*SIArenaWin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

type PlayerArenaData struct {
	ReliveTime       *int32 `protobuf:"varint,1,opt,name=reliveTime" json:"reliveTime,omitempty"`
	WinTime          *int32 `protobuf:"varint,2,opt,name=winTime" json:"winTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PlayerArenaData) Reset()                    { *m = PlayerArenaData{} }
func (m *PlayerArenaData) String() string            { return proto.CompactTextString(m) }
func (*PlayerArenaData) ProtoMessage()               {}
func (*PlayerArenaData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *PlayerArenaData) GetReliveTime() int32 {
	if m != nil && m.ReliveTime != nil {
		return *m.ReliveTime
	}
	return 0
}

func (m *PlayerArenaData) GetWinTime() int32 {
	if m != nil && m.WinTime != nil {
		return *m.WinTime
	}
	return 0
}

type SIPlayerArenaDataChanged struct {
	PlayerArenaData  *PlayerArenaData `protobuf:"bytes,1,req,name=playerArenaData" json:"playerArenaData,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SIPlayerArenaDataChanged) Reset()                    { *m = SIPlayerArenaDataChanged{} }
func (m *SIPlayerArenaDataChanged) String() string            { return proto.CompactTextString(m) }
func (*SIPlayerArenaDataChanged) ProtoMessage()               {}
func (*SIPlayerArenaDataChanged) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *SIPlayerArenaDataChanged) GetPlayerArenaData() *PlayerArenaData {
	if m != nil {
		return m.PlayerArenaData
	}
	return nil
}

type ISArenaRelive struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ISArenaRelive) Reset()                    { *m = ISArenaRelive{} }
func (m *ISArenaRelive) String() string            { return proto.CompactTextString(m) }
func (*ISArenaRelive) ProtoMessage()               {}
func (*ISArenaRelive) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

type SIArenaRelive struct {
	Success          *bool  `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SIArenaRelive) Reset()                    { *m = SIArenaRelive{} }
func (m *SIArenaRelive) String() string            { return proto.CompactTextString(m) }
func (*SIArenaRelive) ProtoMessage()               {}
func (*SIArenaRelive) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *SIArenaRelive) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type ISArenaCollectExpTree struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ISArenaCollectExpTree) Reset()                    { *m = ISArenaCollectExpTree{} }
func (m *ISArenaCollectExpTree) String() string            { return proto.CompactTextString(m) }
func (*ISArenaCollectExpTree) ProtoMessage()               {}
func (*ISArenaCollectExpTree) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

type SIArenaCollectExpTree struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SIArenaCollectExpTree) Reset()                    { *m = SIArenaCollectExpTree{} }
func (m *SIArenaCollectExpTree) String() string            { return proto.CompactTextString(m) }
func (*SIArenaCollectExpTree) ProtoMessage()               {}
func (*SIArenaCollectExpTree) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

type ISArenaCollectBox struct {
	BoxId            *int32 `protobuf:"varint,1,req,name=boxId" json:"boxId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ISArenaCollectBox) Reset()                    { *m = ISArenaCollectBox{} }
func (m *ISArenaCollectBox) String() string            { return proto.CompactTextString(m) }
func (*ISArenaCollectBox) ProtoMessage()               {}
func (*ISArenaCollectBox) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *ISArenaCollectBox) GetBoxId() int32 {
	if m != nil && m.BoxId != nil {
		return *m.BoxId
	}
	return 0
}

type SIArenaCollectBox struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SIArenaCollectBox) Reset()                    { *m = SIArenaCollectBox{} }
func (m *SIArenaCollectBox) String() string            { return proto.CompactTextString(m) }
func (*SIArenaCollectBox) ProtoMessage()               {}
func (*SIArenaCollectBox) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

type ISArenaGiveUp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ISArenaGiveUp) Reset()                    { *m = ISArenaGiveUp{} }
func (m *ISArenaGiveUp) String() string            { return proto.CompactTextString(m) }
func (*ISArenaGiveUp) ProtoMessage()               {}
func (*ISArenaGiveUp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

type SIArenaGiveUp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SIArenaGiveUp) Reset()                    { *m = SIArenaGiveUp{} }
func (m *SIArenaGiveUp) String() string            { return proto.CompactTextString(m) }
func (*SIArenaGiveUp) ProtoMessage()               {}
func (*SIArenaGiveUp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

type ISArenaResetReliveTimes struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ISArenaResetReliveTimes) Reset()                    { *m = ISArenaResetReliveTimes{} }
func (m *ISArenaResetReliveTimes) String() string            { return proto.CompactTextString(m) }
func (*ISArenaResetReliveTimes) ProtoMessage()               {}
func (*ISArenaResetReliveTimes) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func init() {
	proto.RegisterType((*ArenaPlayer)(nil), "cross.ArenaPlayer")
	proto.RegisterType((*SIArenaMatch)(nil), "cross.SIArenaMatch")
	proto.RegisterType((*ISArenaMatch)(nil), "cross.ISArenaMatch")
	proto.RegisterType((*ISArenaMatchResult)(nil), "cross.ISArenaMatchResult")
	proto.RegisterType((*SIArenaStopMatch)(nil), "cross.SIArenaStopMatch")
	proto.RegisterType((*ISArenaStopMatch)(nil), "cross.ISArenaStopMatch")
	proto.RegisterType((*ISArenaWin)(nil), "cross.ISArenaWin")
	proto.RegisterType((*SIArenaWin)(nil), "cross.SIArenaWin")
	proto.RegisterType((*PlayerArenaData)(nil), "cross.PlayerArenaData")
	proto.RegisterType((*SIPlayerArenaDataChanged)(nil), "cross.SIPlayerArenaDataChanged")
	proto.RegisterType((*ISArenaRelive)(nil), "cross.ISArenaRelive")
	proto.RegisterType((*SIArenaRelive)(nil), "cross.SIArenaRelive")
	proto.RegisterType((*ISArenaCollectExpTree)(nil), "cross.ISArenaCollectExpTree")
	proto.RegisterType((*SIArenaCollectExpTree)(nil), "cross.SIArenaCollectExpTree")
	proto.RegisterType((*ISArenaCollectBox)(nil), "cross.ISArenaCollectBox")
	proto.RegisterType((*SIArenaCollectBox)(nil), "cross.SIArenaCollectBox")
	proto.RegisterType((*ISArenaGiveUp)(nil), "cross.ISArenaGiveUp")
	proto.RegisterType((*SIArenaGiveUp)(nil), "cross.SIArenaGiveUp")
	proto.RegisterType((*ISArenaResetReliveTimes)(nil), "cross.ISArenaResetReliveTimes")
}

func init() { proto.RegisterFile("arena.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 492 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xcf, 0x6f, 0xd3, 0x30,
	0x18, 0x55, 0xd3, 0x65, 0x4b, 0xbf, 0xf4, 0x47, 0xea, 0x09, 0x66, 0x76, 0x8a, 0x3c, 0x84, 0x22,
	0x0e, 0x9d, 0xd4, 0xc3, 0xee, 0xac, 0x20, 0x54, 0x01, 0xd2, 0xd4, 0x0e, 0xed, 0x9c, 0xa5, 0xdf,
	0x68, 0x84, 0x17, 0x47, 0xb6, 0xdb, 0x65, 0x67, 0xfe, 0x71, 0xe4, 0x2f, 0xa6, 0x6b, 0xc7, 0x2d,
	0xdf, 0x7b, 0xdf, 0xf3, 0x7b, 0x7e, 0x0e, 0xc4, 0xb9, 0xc6, 0x2a, 0x9f, 0xd4, 0x5a, 0x59, 0xc5,
	0xc2, 0x42, 0x2b, 0x63, 0xce, 0x63, 0xf3, 0xbb, 0x94, 0xb2, 0xc5, 0xce, 0x87, 0xb5, 0x56, 0x35,
	0x6a, 0xfb, 0xdc, 0xce, 0xe2, 0x4f, 0x00, 0xf1, 0x27, 0xa7, 0xb9, 0x91, 0xf9, 0x33, 0x6a, 0x96,
	0x40, 0x54, 0xd3, 0xd7, 0x7c, 0xc5, 0x3b, 0x69, 0x90, 0x75, 0xd9, 0x00, 0xc2, 0x07, 0xa5, 0x0b,
	0xe4, 0x01, 0x8d, 0x43, 0x38, 0x56, 0x95, 0x2c, 0x2b, 0xe4, 0xdd, 0x34, 0xc8, 0x22, 0xd6, 0x87,
	0xa3, 0x2a, 0x7f, 0x44, 0x7e, 0x94, 0x06, 0x59, 0xcf, 0x2d, 0x4b, 0xdc, 0xa2, 0xe4, 0x61, 0x1a,
	0x64, 0xa1, 0x23, 0xb5, 0x92, 0xc8, 0x8f, 0x69, 0x8a, 0xa1, 0x6b, 0xb0, 0xe1, 0x27, 0x34, 0x8c,
	0xa1, 0xf7, 0x90, 0x9b, 0x75, 0xa9, 0xaa, 0xf9, 0x8a, 0x47, 0x04, 0x25, 0x10, 0x19, 0xd4, 0x5b,
	0xf2, 0xee, 0x11, 0x72, 0x09, 0xec, 0x3e, 0xb7, 0x56, 0xe2, 0x8d, 0x4f, 0xfd, 0x39, 0xb7, 0x39,
	0x87, 0x34, 0xc8, 0xe2, 0xe9, 0xe9, 0x84, 0xae, 0x37, 0xd9, 0xa7, 0xd8, 0x05, 0xf4, 0xe8, 0xb6,
	0xdf, 0x4b, 0x63, 0x79, 0x9c, 0x76, 0xb3, 0x78, 0x9a, 0xf8, 0xbd, 0xa5, 0xc3, 0x69, 0x29, 0x81,
	0xe8, 0xa9, 0xac, 0x66, 0x6a, 0x53, 0x59, 0xde, 0x77, 0x3e, 0xe2, 0x0a, 0xfa, 0xcb, 0x39, 0xd5,
	0xf0, 0x23, 0xb7, 0xc5, 0x9a, 0x7d, 0x00, 0x68, 0x5b, 0xa0, 0x73, 0x3a, 0x74, 0x0e, 0xf3, 0xe7,
	0xec, 0xb5, 0x25, 0x86, 0xd0, 0x9f, 0x2f, 0x5f, 0x74, 0xe2, 0x3d, 0xb0, 0xfd, 0x79, 0x81, 0x66,
	0x23, 0xad, 0xab, 0x4c, 0xd3, 0x17, 0x35, 0x1a, 0x09, 0x06, 0x89, 0x77, 0x5b, 0x5a, 0x55, 0xb7,
	0xca, 0x0b, 0x48, 0xbc, 0x72, 0x87, 0xb1, 0x11, 0x9c, 0x98, 0x4d, 0x51, 0xa0, 0x31, 0x5e, 0xf8,
	0x11, 0xc0, 0x2f, 0xdd, 0x95, 0xd5, 0x4b, 0xd7, 0x1d, 0xea, 0x6a, 0x00, 0x21, 0x36, 0x56, 0xe7,
	0xf4, 0x4e, 0x91, 0xe8, 0x03, 0x78, 0x93, 0xbb, 0xb2, 0x12, 0x57, 0x30, 0x6a, 0x23, 0x13, 0x42,
	0x2d, 0x30, 0x00, 0x8d, 0xb2, 0xdc, 0xe2, 0x6d, 0xf9, 0x88, 0xbc, 0x93, 0x76, 0xb2, 0xd0, 0x39,
	0x3e, 0x95, 0x15, 0x01, 0x81, 0x03, 0xc4, 0x37, 0xe0, 0xcb, 0xf9, 0x2b, 0xe5, 0x6c, 0x9d, 0x57,
	0xbf, 0x70, 0xc5, 0x2e, 0x61, 0x54, 0x1f, 0x32, 0x94, 0x24, 0x9e, 0xbe, 0xfd, 0xf7, 0x32, 0x87,
	0xac, 0x18, 0xc1, 0xc0, 0xc7, 0x5f, 0x90, 0xb1, 0x48, 0x61, 0xe0, 0x33, 0xb6, 0xc0, 0xff, 0x37,
	0x3e, 0x83, 0x37, 0x5e, 0x32, 0x53, 0x52, 0x62, 0x61, 0xbf, 0x34, 0xf5, 0xad, 0x46, 0x74, 0x84,
	0x97, 0xbe, 0x22, 0x04, 0x8c, 0x0f, 0x15, 0xd7, 0xaa, 0x71, 0xdd, 0xdc, 0xab, 0xc6, 0xff, 0xd2,
	0xa1, 0x38, 0x85, 0xf1, 0xa1, 0xf8, 0x5a, 0x35, 0x7b, 0xe9, 0xbe, 0x96, 0x5b, 0xfc, 0x59, 0x3b,
	0xc0, 0x6f, 0x79, 0xe0, 0x1d, 0x9c, 0xed, 0xf2, 0x1b, 0xb4, 0x8b, 0x5d, 0x7b, 0xe6, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x5e, 0xd7, 0xf0, 0x05, 0x78, 0x03, 0x00, 0x00,
}
