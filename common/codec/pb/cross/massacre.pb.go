// Code generated by protoc-gen-go. DO NOT EDIT.
// source: massacre.proto

package cross

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ISMassacreDrop struct {
	AttackerId       *int64  `protobuf:"varint,1,req,name=attackerId" json:"attackerId,omitempty"`
	AttackerName     *string `protobuf:"bytes,2,req,name=attackerName" json:"attackerName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ISMassacreDrop) Reset()                    { *m = ISMassacreDrop{} }
func (m *ISMassacreDrop) String() string            { return proto.CompactTextString(m) }
func (*ISMassacreDrop) ProtoMessage()               {}
func (*ISMassacreDrop) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{0} }

func (m *ISMassacreDrop) GetAttackerId() int64 {
	if m != nil && m.AttackerId != nil {
		return *m.AttackerId
	}
	return 0
}

func (m *ISMassacreDrop) GetAttackerName() string {
	if m != nil && m.AttackerName != nil {
		return *m.AttackerName
	}
	return ""
}

type SIMassacreDrop struct {
	ItemId           *int32 `protobuf:"varint,1,req,name=itemId" json:"itemId,omitempty"`
	ItemNum          *int64 `protobuf:"varint,2,req,name=itemNum" json:"itemNum,omitempty"`
	AttackerId       *int64 `protobuf:"varint,3,req,name=attackerId" json:"attackerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SIMassacreDrop) Reset()                    { *m = SIMassacreDrop{} }
func (m *SIMassacreDrop) String() string            { return proto.CompactTextString(m) }
func (*SIMassacreDrop) ProtoMessage()               {}
func (*SIMassacreDrop) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{1} }

func (m *SIMassacreDrop) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *SIMassacreDrop) GetItemNum() int64 {
	if m != nil && m.ItemNum != nil {
		return *m.ItemNum
	}
	return 0
}

func (m *SIMassacreDrop) GetAttackerId() int64 {
	if m != nil && m.AttackerId != nil {
		return *m.AttackerId
	}
	return 0
}

func init() {
	proto.RegisterType((*ISMassacreDrop)(nil), "cross.ISMassacreDrop")
	proto.RegisterType((*SIMassacreDrop)(nil), "cross.SIMassacreDrop")
}

func init() { proto.RegisterFile("massacre.proto", fileDescriptor18) }

var fileDescriptor18 = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x4d, 0x2c, 0x2e,
	0x4e, 0x4c, 0x2e, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0x2e, 0xca, 0x2f,
	0x2e, 0x56, 0xb2, 0xe2, 0xe2, 0xf3, 0x0c, 0xf6, 0x85, 0x4a, 0xb9, 0x14, 0xe5, 0x17, 0x08, 0x09,
	0x71, 0x71, 0x25, 0x96, 0x94, 0x24, 0x26, 0x67, 0xa7, 0x16, 0x79, 0xa6, 0x48, 0x30, 0x2a, 0x30,
	0x69, 0x30, 0x0b, 0x89, 0x70, 0xf1, 0xc0, 0xc4, 0xfc, 0x12, 0x73, 0x53, 0x25, 0x98, 0x14, 0x98,
	0x34, 0x38, 0x95, 0x5c, 0xb9, 0xf8, 0x82, 0x3d, 0x51, 0xf4, 0xf2, 0x71, 0xb1, 0x65, 0x96, 0xa4,
	0xe6, 0x42, 0xf5, 0xb1, 0x0a, 0xf1, 0x73, 0xb1, 0x83, 0xf8, 0x7e, 0xa5, 0xb9, 0x60, 0x2d, 0xcc,
	0x68, 0x86, 0x33, 0x83, 0xc4, 0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 0x73, 0x5b, 0x27, 0x9e, 0x9a,
	0x00, 0x00, 0x00,
}
