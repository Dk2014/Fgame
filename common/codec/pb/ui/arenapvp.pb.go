// Code generated by protoc-gen-go. DO NOT EDIT.
// source: arenapvp.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BattlePlayerBasicInfo struct {
	PlayerId         *int64  `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	PlayerName       *string `protobuf:"bytes,2,req,name=playerName" json:"playerName,omitempty"`
	Platform         *int32  `protobuf:"varint,3,req,name=platform" json:"platform,omitempty"`
	ServerId         *int32  `protobuf:"varint,4,req,name=serverId" json:"serverId,omitempty"`
	Sex              *int32  `protobuf:"varint,5,req,name=sex" json:"sex,omitempty"`
	Role             *int32  `protobuf:"varint,6,req,name=role" json:"role,omitempty"`
	WeaponId         *int32  `protobuf:"varint,7,opt,name=weaponId" json:"weaponId,omitempty"`
	WingId           *int32  `protobuf:"varint,8,opt,name=wingId" json:"wingId,omitempty"`
	FashionId        *int32  `protobuf:"varint,9,opt,name=fashionId" json:"fashionId,omitempty"`
	WeaponState      *int32  `protobuf:"varint,10,opt,name=weaponState" json:"weaponState,omitempty"`
	XianTiId         *int32  `protobuf:"varint,11,opt,name=xianTiId" json:"xianTiId,omitempty"`
	LingYuId         *int32  `protobuf:"varint,12,opt,name=lingYuId" json:"lingYuId,omitempty"`
	FaBaoId          *int32  `protobuf:"varint,13,opt,name=faBaoId" json:"faBaoId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BattlePlayerBasicInfo) Reset()                    { *m = BattlePlayerBasicInfo{} }
func (m *BattlePlayerBasicInfo) String() string            { return proto.CompactTextString(m) }
func (*BattlePlayerBasicInfo) ProtoMessage()               {}
func (*BattlePlayerBasicInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *BattlePlayerBasicInfo) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *BattlePlayerBasicInfo) GetPlatform() int32 {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetRole() int32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetWeaponId() int32 {
	if m != nil && m.WeaponId != nil {
		return *m.WeaponId
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetWingId() int32 {
	if m != nil && m.WingId != nil {
		return *m.WingId
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetFashionId() int32 {
	if m != nil && m.FashionId != nil {
		return *m.FashionId
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetWeaponState() int32 {
	if m != nil && m.WeaponState != nil {
		return *m.WeaponState
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetXianTiId() int32 {
	if m != nil && m.XianTiId != nil {
		return *m.XianTiId
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetLingYuId() int32 {
	if m != nil && m.LingYuId != nil {
		return *m.LingYuId
	}
	return 0
}

func (m *BattlePlayerBasicInfo) GetFaBaoId() int32 {
	if m != nil && m.FaBaoId != nil {
		return *m.FaBaoId
	}
	return 0
}

type ArenapvpBaZhu struct {
	RaceNumber       *int32                 `protobuf:"varint,1,req,name=raceNumber" json:"raceNumber,omitempty"`
	BasicInfo        *BattlePlayerBasicInfo `protobuf:"bytes,2,req,name=basicInfo" json:"basicInfo,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ArenapvpBaZhu) Reset()                    { *m = ArenapvpBaZhu{} }
func (m *ArenapvpBaZhu) String() string            { return proto.CompactTextString(m) }
func (*ArenapvpBaZhu) ProtoMessage()               {}
func (*ArenapvpBaZhu) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *ArenapvpBaZhu) GetRaceNumber() int32 {
	if m != nil && m.RaceNumber != nil {
		return *m.RaceNumber
	}
	return 0
}

func (m *ArenapvpBaZhu) GetBasicInfo() *BattlePlayerBasicInfo {
	if m != nil {
		return m.BasicInfo
	}
	return nil
}

type CSArenapvpInfo struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSArenapvpInfo) Reset()                    { *m = CSArenapvpInfo{} }
func (m *CSArenapvpInfo) String() string            { return proto.CompactTextString(m) }
func (*CSArenapvpInfo) ProtoMessage()               {}
func (*CSArenapvpInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

type SCArenapvpInfo struct {
	IsOut            *int32         `protobuf:"varint,1,req,name=isOut" json:"isOut,omitempty"`
	BaZhu            *ArenapvpBaZhu `protobuf:"bytes,2,opt,name=baZhu" json:"baZhu,omitempty"`
	JiFen            *int32         `protobuf:"varint,3,req,name=jiFen" json:"jiFen,omitempty"`
	NoticeSetting    *int32         `protobuf:"varint,4,req,name=noticeSetting" json:"noticeSetting,omitempty"`
	IsTicket         *int32         `protobuf:"varint,5,req,name=isTicket" json:"isTicket,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SCArenapvpInfo) Reset()                    { *m = SCArenapvpInfo{} }
func (m *SCArenapvpInfo) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpInfo) ProtoMessage()               {}
func (*SCArenapvpInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *SCArenapvpInfo) GetIsOut() int32 {
	if m != nil && m.IsOut != nil {
		return *m.IsOut
	}
	return 0
}

func (m *SCArenapvpInfo) GetBaZhu() *ArenapvpBaZhu {
	if m != nil {
		return m.BaZhu
	}
	return nil
}

func (m *SCArenapvpInfo) GetJiFen() int32 {
	if m != nil && m.JiFen != nil {
		return *m.JiFen
	}
	return 0
}

func (m *SCArenapvpInfo) GetNoticeSetting() int32 {
	if m != nil && m.NoticeSetting != nil {
		return *m.NoticeSetting
	}
	return 0
}

func (m *SCArenapvpInfo) GetIsTicket() int32 {
	if m != nil && m.IsTicket != nil {
		return *m.IsTicket
	}
	return 0
}

type SCArenapvpJiFenChanged struct {
	JiFen            *int32 `protobuf:"varint,1,req,name=jiFen" json:"jiFen,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCArenapvpJiFenChanged) Reset()                    { *m = SCArenapvpJiFenChanged{} }
func (m *SCArenapvpJiFenChanged) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpJiFenChanged) ProtoMessage()               {}
func (*SCArenapvpJiFenChanged) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *SCArenapvpJiFenChanged) GetJiFen() int32 {
	if m != nil && m.JiFen != nil {
		return *m.JiFen
	}
	return 0
}

type CSArenapvpBaZhuInfo struct {
	Page             *int32 `protobuf:"varint,1,req,name=page" json:"page,omitempty"`
	PageNum          *int32 `protobuf:"varint,2,req,name=pageNum" json:"pageNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSArenapvpBaZhuInfo) Reset()                    { *m = CSArenapvpBaZhuInfo{} }
func (m *CSArenapvpBaZhuInfo) String() string            { return proto.CompactTextString(m) }
func (*CSArenapvpBaZhuInfo) ProtoMessage()               {}
func (*CSArenapvpBaZhuInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *CSArenapvpBaZhuInfo) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *CSArenapvpBaZhuInfo) GetPageNum() int32 {
	if m != nil && m.PageNum != nil {
		return *m.PageNum
	}
	return 0
}

type SCArenapvpBaZhuInfo struct {
	Page             *int32           `protobuf:"varint,1,req,name=page" json:"page,omitempty"`
	BaZhuList        []*ArenapvpBaZhu `protobuf:"bytes,2,rep,name=baZhuList" json:"baZhuList,omitempty"`
	TotalPage        *int32           `protobuf:"varint,3,req,name=totalPage" json:"totalPage,omitempty"`
	PageNum          *int32           `protobuf:"varint,4,req,name=pageNum" json:"pageNum,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SCArenapvpBaZhuInfo) Reset()                    { *m = SCArenapvpBaZhuInfo{} }
func (m *SCArenapvpBaZhuInfo) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpBaZhuInfo) ProtoMessage()               {}
func (*SCArenapvpBaZhuInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *SCArenapvpBaZhuInfo) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *SCArenapvpBaZhuInfo) GetBaZhuList() []*ArenapvpBaZhu {
	if m != nil {
		return m.BaZhuList
	}
	return nil
}

func (m *SCArenapvpBaZhuInfo) GetTotalPage() int32 {
	if m != nil && m.TotalPage != nil {
		return *m.TotalPage
	}
	return 0
}

func (m *SCArenapvpBaZhuInfo) GetPageNum() int32 {
	if m != nil && m.PageNum != nil {
		return *m.PageNum
	}
	return 0
}

type ArenapvpBattlePlayer struct {
	BasicInfo        *BattlePlayerBasicInfo `protobuf:"bytes,1,req,name=basicInfo" json:"basicInfo,omitempty"`
	Index            *int32                 `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	WinnerId         *int64                 `protobuf:"varint,3,req,name=winnerId" json:"winnerId,omitempty"`
	Type             *int32                 `protobuf:"varint,4,req,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ArenapvpBattlePlayer) Reset()                    { *m = ArenapvpBattlePlayer{} }
func (m *ArenapvpBattlePlayer) String() string            { return proto.CompactTextString(m) }
func (*ArenapvpBattlePlayer) ProtoMessage()               {}
func (*ArenapvpBattlePlayer) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

func (m *ArenapvpBattlePlayer) GetBasicInfo() *BattlePlayerBasicInfo {
	if m != nil {
		return m.BasicInfo
	}
	return nil
}

func (m *ArenapvpBattlePlayer) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetWinnerId() int64 {
	if m != nil && m.WinnerId != nil {
		return *m.WinnerId
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type CSArenapvpRaceInfo struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSArenapvpRaceInfo) Reset()                    { *m = CSArenapvpRaceInfo{} }
func (m *CSArenapvpRaceInfo) String() string            { return proto.CompactTextString(m) }
func (*CSArenapvpRaceInfo) ProtoMessage()               {}
func (*CSArenapvpRaceInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

func (m *CSArenapvpRaceInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type SCArenapvpRaceInfo struct {
	Type             *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	PlayerList       []*ArenapvpBattlePlayer `protobuf:"bytes,2,rep,name=playerList" json:"playerList,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *SCArenapvpRaceInfo) Reset()                    { *m = SCArenapvpRaceInfo{} }
func (m *SCArenapvpRaceInfo) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpRaceInfo) ProtoMessage()               {}
func (*SCArenapvpRaceInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{9} }

func (m *SCArenapvpRaceInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *SCArenapvpRaceInfo) GetPlayerList() []*ArenapvpBattlePlayer {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

type ElectionRaceInfo struct {
	ElectionIndex    *int32 `protobuf:"varint,1,req,name=electionIndex" json:"electionIndex,omitempty"`
	PlayerCount      *int32 `protobuf:"varint,2,req,name=playerCount" json:"playerCount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ElectionRaceInfo) Reset()                    { *m = ElectionRaceInfo{} }
func (m *ElectionRaceInfo) String() string            { return proto.CompactTextString(m) }
func (*ElectionRaceInfo) ProtoMessage()               {}
func (*ElectionRaceInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{10} }

func (m *ElectionRaceInfo) GetElectionIndex() int32 {
	if m != nil && m.ElectionIndex != nil {
		return *m.ElectionIndex
	}
	return 0
}

func (m *ElectionRaceInfo) GetPlayerCount() int32 {
	if m != nil && m.PlayerCount != nil {
		return *m.PlayerCount
	}
	return 0
}

type CSArenapvpElectionRaceInfo struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSArenapvpElectionRaceInfo) Reset()                    { *m = CSArenapvpElectionRaceInfo{} }
func (m *CSArenapvpElectionRaceInfo) String() string            { return proto.CompactTextString(m) }
func (*CSArenapvpElectionRaceInfo) ProtoMessage()               {}
func (*CSArenapvpElectionRaceInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{11} }

type SCArenapvpElectionRaceInfo struct {
	ElectionList     []*ElectionRaceInfo `protobuf:"bytes,1,rep,name=electionList" json:"electionList,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *SCArenapvpElectionRaceInfo) Reset()                    { *m = SCArenapvpElectionRaceInfo{} }
func (m *SCArenapvpElectionRaceInfo) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpElectionRaceInfo) ProtoMessage()               {}
func (*SCArenapvpElectionRaceInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{12} }

func (m *SCArenapvpElectionRaceInfo) GetElectionList() []*ElectionRaceInfo {
	if m != nil {
		return m.ElectionList
	}
	return nil
}

type SCArenapvpGuessBeginNotice struct {
	PlayerList       []*ArenapvpBattlePlayer `protobuf:"bytes,1,rep,name=playerList" json:"playerList,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *SCArenapvpGuessBeginNotice) Reset()                    { *m = SCArenapvpGuessBeginNotice{} }
func (m *SCArenapvpGuessBeginNotice) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpGuessBeginNotice) ProtoMessage()               {}
func (*SCArenapvpGuessBeginNotice) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{13} }

func (m *SCArenapvpGuessBeginNotice) GetPlayerList() []*ArenapvpBattlePlayer {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

type ArenapvpGuessLog struct {
	GuessId          *int64 `protobuf:"varint,1,req,name=guessId" json:"guessId,omitempty"`
	WinnerId         *int64 `protobuf:"varint,2,req,name=winnerId" json:"winnerId,omitempty"`
	GuessType        *int32 `protobuf:"varint,3,req,name=guessType" json:"guessType,omitempty"`
	CreateTime       *int64 `protobuf:"varint,4,req,name=createTime" json:"createTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenapvpGuessLog) Reset()                    { *m = ArenapvpGuessLog{} }
func (m *ArenapvpGuessLog) String() string            { return proto.CompactTextString(m) }
func (*ArenapvpGuessLog) ProtoMessage()               {}
func (*ArenapvpGuessLog) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{14} }

func (m *ArenapvpGuessLog) GetGuessId() int64 {
	if m != nil && m.GuessId != nil {
		return *m.GuessId
	}
	return 0
}

func (m *ArenapvpGuessLog) GetWinnerId() int64 {
	if m != nil && m.WinnerId != nil {
		return *m.WinnerId
	}
	return 0
}

func (m *ArenapvpGuessLog) GetGuessType() int32 {
	if m != nil && m.GuessType != nil {
		return *m.GuessType
	}
	return 0
}

func (m *ArenapvpGuessLog) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

type CSArenapvpGuessInfo struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSArenapvpGuessInfo) Reset()                    { *m = CSArenapvpGuessInfo{} }
func (m *CSArenapvpGuessInfo) String() string            { return proto.CompactTextString(m) }
func (*CSArenapvpGuessInfo) ProtoMessage()               {}
func (*CSArenapvpGuessInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{15} }

type SCArenapvpGuessInfo struct {
	GuessId          *int64                  `protobuf:"varint,1,req,name=guessId" json:"guessId,omitempty"`
	LogList          []*ArenapvpGuessLog     `protobuf:"bytes,2,rep,name=logList" json:"logList,omitempty"`
	PlayerList       []*ArenapvpBattlePlayer `protobuf:"bytes,3,rep,name=playerList" json:"playerList,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *SCArenapvpGuessInfo) Reset()                    { *m = SCArenapvpGuessInfo{} }
func (m *SCArenapvpGuessInfo) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpGuessInfo) ProtoMessage()               {}
func (*SCArenapvpGuessInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{16} }

func (m *SCArenapvpGuessInfo) GetGuessId() int64 {
	if m != nil && m.GuessId != nil {
		return *m.GuessId
	}
	return 0
}

func (m *SCArenapvpGuessInfo) GetLogList() []*ArenapvpGuessLog {
	if m != nil {
		return m.LogList
	}
	return nil
}

func (m *SCArenapvpGuessInfo) GetPlayerList() []*ArenapvpBattlePlayer {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

type CSArenapvpGuess struct {
	GuessId          *int64 `protobuf:"varint,1,req,name=guessId" json:"guessId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSArenapvpGuess) Reset()                    { *m = CSArenapvpGuess{} }
func (m *CSArenapvpGuess) String() string            { return proto.CompactTextString(m) }
func (*CSArenapvpGuess) ProtoMessage()               {}
func (*CSArenapvpGuess) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{17} }

func (m *CSArenapvpGuess) GetGuessId() int64 {
	if m != nil && m.GuessId != nil {
		return *m.GuessId
	}
	return 0
}

type SCArenapvpGuess struct {
	GuessId          *int64 `protobuf:"varint,1,req,name=guessId" json:"guessId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCArenapvpGuess) Reset()                    { *m = SCArenapvpGuess{} }
func (m *SCArenapvpGuess) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpGuess) ProtoMessage()               {}
func (*SCArenapvpGuess) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{18} }

func (m *SCArenapvpGuess) GetGuessId() int64 {
	if m != nil && m.GuessId != nil {
		return *m.GuessId
	}
	return 0
}

type CSArenapvpGuessNoticeSetting struct {
	Notice           *int32 `protobuf:"varint,1,req,name=notice" json:"notice,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSArenapvpGuessNoticeSetting) Reset()                    { *m = CSArenapvpGuessNoticeSetting{} }
func (m *CSArenapvpGuessNoticeSetting) String() string            { return proto.CompactTextString(m) }
func (*CSArenapvpGuessNoticeSetting) ProtoMessage()               {}
func (*CSArenapvpGuessNoticeSetting) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{19} }

func (m *CSArenapvpGuessNoticeSetting) GetNotice() int32 {
	if m != nil && m.Notice != nil {
		return *m.Notice
	}
	return 0
}

type SCArenapvpGuessNoticeSetting struct {
	Notice           *int32 `protobuf:"varint,1,req,name=notice" json:"notice,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCArenapvpGuessNoticeSetting) Reset()                    { *m = SCArenapvpGuessNoticeSetting{} }
func (m *SCArenapvpGuessNoticeSetting) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpGuessNoticeSetting) ProtoMessage()               {}
func (*SCArenapvpGuessNoticeSetting) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{20} }

func (m *SCArenapvpGuessNoticeSetting) GetNotice() int32 {
	if m != nil && m.Notice != nil {
		return *m.Notice
	}
	return 0
}

type SCArenapvpElectionFailedNotice struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCArenapvpElectionFailedNotice) Reset()                    { *m = SCArenapvpElectionFailedNotice{} }
func (m *SCArenapvpElectionFailedNotice) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpElectionFailedNotice) ProtoMessage()               {}
func (*SCArenapvpElectionFailedNotice) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{21} }

type SCArenapvpElectionSceneData struct {
	RankInfoList     []*SceneRankInfo `protobuf:"bytes,1,rep,name=rankInfoList" json:"rankInfoList,omitempty"`
	ReliveTimes      *int32           `protobuf:"varint,2,req,name=reliveTimes" json:"reliveTimes,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SCArenapvpElectionSceneData) Reset()                    { *m = SCArenapvpElectionSceneData{} }
func (m *SCArenapvpElectionSceneData) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpElectionSceneData) ProtoMessage()               {}
func (*SCArenapvpElectionSceneData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{22} }

func (m *SCArenapvpElectionSceneData) GetRankInfoList() []*SceneRankInfo {
	if m != nil {
		return m.RankInfoList
	}
	return nil
}

func (m *SCArenapvpElectionSceneData) GetReliveTimes() int32 {
	if m != nil && m.ReliveTimes != nil {
		return *m.ReliveTimes
	}
	return 0
}

type SCArenapvpElectionSceneDataChanged struct {
	ReliveTimes      *int32 `protobuf:"varint,1,req,name=reliveTimes" json:"reliveTimes,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCArenapvpElectionSceneDataChanged) Reset()         { *m = SCArenapvpElectionSceneDataChanged{} }
func (m *SCArenapvpElectionSceneDataChanged) String() string { return proto.CompactTextString(m) }
func (*SCArenapvpElectionSceneDataChanged) ProtoMessage()    {}
func (*SCArenapvpElectionSceneDataChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{23}
}

func (m *SCArenapvpElectionSceneDataChanged) GetReliveTimes() int32 {
	if m != nil && m.ReliveTimes != nil {
		return *m.ReliveTimes
	}
	return 0
}

type SCArenapvpElectionEnd struct {
	IsWin            *bool  `protobuf:"varint,1,req,name=isWin" json:"isWin,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCArenapvpElectionEnd) Reset()                    { *m = SCArenapvpElectionEnd{} }
func (m *SCArenapvpElectionEnd) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpElectionEnd) ProtoMessage()               {}
func (*SCArenapvpElectionEnd) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{24} }

func (m *SCArenapvpElectionEnd) GetIsWin() bool {
	if m != nil && m.IsWin != nil {
		return *m.IsWin
	}
	return false
}

type ArenapvpPlayerShowData struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	MaxHp            *int64 `protobuf:"varint,2,opt,name=maxHp,def=-1" json:"maxHp,omitempty"`
	Hp               *int64 `protobuf:"varint,3,opt,name=hp,def=-1" json:"hp,omitempty"`
	Online           *int32 `protobuf:"varint,4,opt,name=online,def=-1" json:"online,omitempty"`
	RemainReliveTime *int32 `protobuf:"varint,5,opt,name=remainReliveTime,def=-1" json:"remainReliveTime,omitempty"`
	IsDead           *int32 `protobuf:"varint,6,opt,name=isDead,def=-1" json:"isDead,omitempty"`
	DeadTime         *int64 `protobuf:"varint,7,opt,name=deadTime,def=-1" json:"deadTime,omitempty"`
	State            *int32 `protobuf:"varint,8,opt,name=state,def=-1" json:"state,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenapvpPlayerShowData) Reset()                    { *m = ArenapvpPlayerShowData{} }
func (m *ArenapvpPlayerShowData) String() string            { return proto.CompactTextString(m) }
func (*ArenapvpPlayerShowData) ProtoMessage()               {}
func (*ArenapvpPlayerShowData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{25} }

const Default_ArenapvpPlayerShowData_MaxHp int64 = -1
const Default_ArenapvpPlayerShowData_Hp int64 = -1
const Default_ArenapvpPlayerShowData_Online int32 = -1
const Default_ArenapvpPlayerShowData_RemainReliveTime int32 = -1
const Default_ArenapvpPlayerShowData_IsDead int32 = -1
const Default_ArenapvpPlayerShowData_DeadTime int64 = -1
const Default_ArenapvpPlayerShowData_State int32 = -1

func (m *ArenapvpPlayerShowData) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *ArenapvpPlayerShowData) GetMaxHp() int64 {
	if m != nil && m.MaxHp != nil {
		return *m.MaxHp
	}
	return Default_ArenapvpPlayerShowData_MaxHp
}

func (m *ArenapvpPlayerShowData) GetHp() int64 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return Default_ArenapvpPlayerShowData_Hp
}

func (m *ArenapvpPlayerShowData) GetOnline() int32 {
	if m != nil && m.Online != nil {
		return *m.Online
	}
	return Default_ArenapvpPlayerShowData_Online
}

func (m *ArenapvpPlayerShowData) GetRemainReliveTime() int32 {
	if m != nil && m.RemainReliveTime != nil {
		return *m.RemainReliveTime
	}
	return Default_ArenapvpPlayerShowData_RemainReliveTime
}

func (m *ArenapvpPlayerShowData) GetIsDead() int32 {
	if m != nil && m.IsDead != nil {
		return *m.IsDead
	}
	return Default_ArenapvpPlayerShowData_IsDead
}

func (m *ArenapvpPlayerShowData) GetDeadTime() int64 {
	if m != nil && m.DeadTime != nil {
		return *m.DeadTime
	}
	return Default_ArenapvpPlayerShowData_DeadTime
}

func (m *ArenapvpPlayerShowData) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_ArenapvpPlayerShowData_State
}

type ArenapvpPlayerAllData struct {
	BasicInfo        *BattlePlayerBasicInfo  `protobuf:"bytes,1,req,name=basicInfo" json:"basicInfo,omitempty"`
	ShowData         *ArenapvpPlayerShowData `protobuf:"bytes,2,req,name=showData" json:"showData,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ArenapvpPlayerAllData) Reset()                    { *m = ArenapvpPlayerAllData{} }
func (m *ArenapvpPlayerAllData) String() string            { return proto.CompactTextString(m) }
func (*ArenapvpPlayerAllData) ProtoMessage()               {}
func (*ArenapvpPlayerAllData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{26} }

func (m *ArenapvpPlayerAllData) GetBasicInfo() *BattlePlayerBasicInfo {
	if m != nil {
		return m.BasicInfo
	}
	return nil
}

func (m *ArenapvpPlayerAllData) GetShowData() *ArenapvpPlayerShowData {
	if m != nil {
		return m.ShowData
	}
	return nil
}

type SCArenapvpSceneData struct {
	BattleList       []*ArenapvpPlayerAllData `protobuf:"bytes,2,rep,name=battleList" json:"battleList,omitempty"`
	PvpType          *int32                   `protobuf:"varint,3,req,name=pvpType" json:"pvpType,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *SCArenapvpSceneData) Reset()                    { *m = SCArenapvpSceneData{} }
func (m *SCArenapvpSceneData) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpSceneData) ProtoMessage()               {}
func (*SCArenapvpSceneData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{27} }

func (m *SCArenapvpSceneData) GetBattleList() []*ArenapvpPlayerAllData {
	if m != nil {
		return m.BattleList
	}
	return nil
}

func (m *SCArenapvpSceneData) GetPvpType() int32 {
	if m != nil && m.PvpType != nil {
		return *m.PvpType
	}
	return 0
}

type SCArenapvpPlayerShowDataChanged struct {
	PlayerShowData   *ArenapvpPlayerShowData `protobuf:"bytes,1,req,name=playerShowData" json:"playerShowData,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *SCArenapvpPlayerShowDataChanged) Reset()         { *m = SCArenapvpPlayerShowDataChanged{} }
func (m *SCArenapvpPlayerShowDataChanged) String() string { return proto.CompactTextString(m) }
func (*SCArenapvpPlayerShowDataChanged) ProtoMessage()    {}
func (*SCArenapvpPlayerShowDataChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{28}
}

func (m *SCArenapvpPlayerShowDataChanged) GetPlayerShowData() *ArenapvpPlayerShowData {
	if m != nil {
		return m.PlayerShowData
	}
	return nil
}

type SCArenapvpBattleStart struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCArenapvpBattleStart) Reset()                    { *m = SCArenapvpBattleStart{} }
func (m *SCArenapvpBattleStart) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpBattleStart) ProtoMessage()               {}
func (*SCArenapvpBattleStart) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{29} }

type SCArenapvpBattleEnd struct {
	WinnerPlayerId   *int64 `protobuf:"varint,1,req,name=winnerPlayerId" json:"winnerPlayerId,omitempty"`
	PvpType          *int32 `protobuf:"varint,2,req,name=pvpType" json:"pvpType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCArenapvpBattleEnd) Reset()                    { *m = SCArenapvpBattleEnd{} }
func (m *SCArenapvpBattleEnd) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpBattleEnd) ProtoMessage()               {}
func (*SCArenapvpBattleEnd) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{30} }

func (m *SCArenapvpBattleEnd) GetWinnerPlayerId() int64 {
	if m != nil && m.WinnerPlayerId != nil {
		return *m.WinnerPlayerId
	}
	return 0
}

func (m *SCArenapvpBattleEnd) GetPvpType() int32 {
	if m != nil && m.PvpType != nil {
		return *m.PvpType
	}
	return 0
}

type SCArenapvpGuessInfoPush struct {
	Log              *ArenapvpGuessLog `protobuf:"bytes,1,req,name=log" json:"log,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCArenapvpGuessInfoPush) Reset()                    { *m = SCArenapvpGuessInfoPush{} }
func (m *SCArenapvpGuessInfoPush) String() string            { return proto.CompactTextString(m) }
func (*SCArenapvpGuessInfoPush) ProtoMessage()               {}
func (*SCArenapvpGuessInfoPush) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{31} }

func (m *SCArenapvpGuessInfoPush) GetLog() *ArenapvpGuessLog {
	if m != nil {
		return m.Log
	}
	return nil
}

func init() {
	proto.RegisterType((*BattlePlayerBasicInfo)(nil), "ui.BattlePlayerBasicInfo")
	proto.RegisterType((*ArenapvpBaZhu)(nil), "ui.ArenapvpBaZhu")
	proto.RegisterType((*CSArenapvpInfo)(nil), "ui.CSArenapvpInfo")
	proto.RegisterType((*SCArenapvpInfo)(nil), "ui.SCArenapvpInfo")
	proto.RegisterType((*SCArenapvpJiFenChanged)(nil), "ui.SCArenapvpJiFenChanged")
	proto.RegisterType((*CSArenapvpBaZhuInfo)(nil), "ui.CSArenapvpBaZhuInfo")
	proto.RegisterType((*SCArenapvpBaZhuInfo)(nil), "ui.SCArenapvpBaZhuInfo")
	proto.RegisterType((*ArenapvpBattlePlayer)(nil), "ui.ArenapvpBattlePlayer")
	proto.RegisterType((*CSArenapvpRaceInfo)(nil), "ui.CSArenapvpRaceInfo")
	proto.RegisterType((*SCArenapvpRaceInfo)(nil), "ui.SCArenapvpRaceInfo")
	proto.RegisterType((*ElectionRaceInfo)(nil), "ui.ElectionRaceInfo")
	proto.RegisterType((*CSArenapvpElectionRaceInfo)(nil), "ui.CSArenapvpElectionRaceInfo")
	proto.RegisterType((*SCArenapvpElectionRaceInfo)(nil), "ui.SCArenapvpElectionRaceInfo")
	proto.RegisterType((*SCArenapvpGuessBeginNotice)(nil), "ui.SCArenapvpGuessBeginNotice")
	proto.RegisterType((*ArenapvpGuessLog)(nil), "ui.ArenapvpGuessLog")
	proto.RegisterType((*CSArenapvpGuessInfo)(nil), "ui.CSArenapvpGuessInfo")
	proto.RegisterType((*SCArenapvpGuessInfo)(nil), "ui.SCArenapvpGuessInfo")
	proto.RegisterType((*CSArenapvpGuess)(nil), "ui.CSArenapvpGuess")
	proto.RegisterType((*SCArenapvpGuess)(nil), "ui.SCArenapvpGuess")
	proto.RegisterType((*CSArenapvpGuessNoticeSetting)(nil), "ui.CSArenapvpGuessNoticeSetting")
	proto.RegisterType((*SCArenapvpGuessNoticeSetting)(nil), "ui.SCArenapvpGuessNoticeSetting")
	proto.RegisterType((*SCArenapvpElectionFailedNotice)(nil), "ui.SCArenapvpElectionFailedNotice")
	proto.RegisterType((*SCArenapvpElectionSceneData)(nil), "ui.SCArenapvpElectionSceneData")
	proto.RegisterType((*SCArenapvpElectionSceneDataChanged)(nil), "ui.SCArenapvpElectionSceneDataChanged")
	proto.RegisterType((*SCArenapvpElectionEnd)(nil), "ui.SCArenapvpElectionEnd")
	proto.RegisterType((*ArenapvpPlayerShowData)(nil), "ui.ArenapvpPlayerShowData")
	proto.RegisterType((*ArenapvpPlayerAllData)(nil), "ui.ArenapvpPlayerAllData")
	proto.RegisterType((*SCArenapvpSceneData)(nil), "ui.SCArenapvpSceneData")
	proto.RegisterType((*SCArenapvpPlayerShowDataChanged)(nil), "ui.SCArenapvpPlayerShowDataChanged")
	proto.RegisterType((*SCArenapvpBattleStart)(nil), "ui.SCArenapvpBattleStart")
	proto.RegisterType((*SCArenapvpBattleEnd)(nil), "ui.SCArenapvpBattleEnd")
	proto.RegisterType((*SCArenapvpGuessInfoPush)(nil), "ui.SCArenapvpGuessInfoPush")
}

func init() { proto.RegisterFile("arenapvp.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 984 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x6e, 0xdb, 0x46,
	0x13, 0x85, 0x48, 0xd3, 0x96, 0x46, 0x3f, 0x96, 0x68, 0xcb, 0x61, 0xfc, 0x19, 0x5f, 0xd5, 0x45,
	0xdb, 0x08, 0x85, 0x23, 0xa0, 0x46, 0x6f, 0x5a, 0x14, 0x01, 0x22, 0x27, 0x69, 0x14, 0x04, 0xaa,
	0x6a, 0x39, 0x28, 0x9a, 0xf6, 0x66, 0x2d, 0xae, 0xa9, 0x6d, 0xa8, 0x25, 0x41, 0x2e, 0xfd, 0x83,
	0xbe, 0x5a, 0xdf, 0xac, 0x37, 0xc5, 0xce, 0x92, 0x22, 0x29, 0xaa, 0x36, 0x7a, 0x47, 0x0e, 0x67,
	0xcf, 0x9c, 0x39, 0x73, 0x38, 0x0b, 0x1d, 0x1a, 0x31, 0x41, 0xc3, 0x9b, 0x70, 0x14, 0x46, 0x81,
	0x0c, 0x6c, 0x23, 0xe1, 0xc7, 0xcd, 0x78, 0xc1, 0x04, 0xd3, 0x01, 0xf2, 0x77, 0x0d, 0xfa, 0x63,
	0x2a, 0xa5, 0xcf, 0x66, 0x3e, 0xbd, 0x67, 0xd1, 0x98, 0xc6, 0x7c, 0x31, 0x11, 0xd7, 0x81, 0xdd,
	0x85, 0x7a, 0x88, 0xa1, 0x89, 0xeb, 0xd4, 0x06, 0xc6, 0xd0, 0xb4, 0x6d, 0x00, 0x1d, 0x99, 0xd2,
	0x15, 0x73, 0x8c, 0x81, 0x31, 0x6c, 0xa4, 0x59, 0xf2, 0x3a, 0x88, 0x56, 0x8e, 0x39, 0x30, 0x86,
	0x96, 0x8a, 0xc4, 0x2c, 0xba, 0xc1, 0x73, 0x3b, 0x18, 0x69, 0x82, 0x19, 0xb3, 0x3b, 0xc7, 0xc2,
	0x97, 0x16, 0xec, 0x44, 0x81, 0xcf, 0x9c, 0xdd, 0x2c, 0xf9, 0x96, 0xd1, 0x30, 0x10, 0x13, 0xd7,
	0xd9, 0x1b, 0xd4, 0x86, 0x96, 0xdd, 0x81, 0xdd, 0x5b, 0x2e, 0xbc, 0x89, 0xeb, 0xd4, 0xf1, 0xbd,
	0x07, 0x8d, 0x6b, 0x1a, 0x2f, 0x39, 0xa6, 0x34, 0x30, 0x74, 0x00, 0x4d, 0x7d, 0x68, 0x2e, 0xa9,
	0x64, 0x0e, 0x60, 0xb0, 0x0b, 0xf5, 0x3b, 0x4e, 0xc5, 0x25, 0x9f, 0xb8, 0x4e, 0x33, 0x8b, 0xf8,
	0x5c, 0x78, 0xbf, 0x26, 0x13, 0xd7, 0x69, 0x61, 0x64, 0x1f, 0xf6, 0xae, 0xe9, 0x98, 0x06, 0x13,
	0xd7, 0x69, 0xab, 0x00, 0xf9, 0x19, 0xda, 0x2f, 0x53, 0x81, 0xc6, 0xf4, 0xe3, 0x32, 0x51, 0x2d,
	0x46, 0x74, 0xc1, 0xa6, 0xc9, 0xea, 0x8a, 0x45, 0xd8, 0xb6, 0x65, 0x9f, 0x42, 0xe3, 0x2a, 0x53,
	0x05, 0xbb, 0x6e, 0x9e, 0x3d, 0x1d, 0x25, 0x7c, 0xb4, 0x55, 0x36, 0xd2, 0x85, 0xce, 0xf9, 0x3c,
	0x03, 0xc5, 0xc8, 0x3d, 0x74, 0xe6, 0xe7, 0xc5, 0x88, 0xdd, 0x06, 0x8b, 0xc7, 0x3f, 0x25, 0x32,
	0x2d, 0x30, 0x00, 0xeb, 0x4a, 0x55, 0x77, 0x8c, 0x41, 0x6d, 0xd8, 0x3c, 0xeb, 0x29, 0xf0, 0x32,
	0xad, 0x36, 0x58, 0x7f, 0xf0, 0x37, 0x4c, 0xa4, 0x12, 0xf7, 0xa1, 0x2d, 0x02, 0xc9, 0x17, 0x6c,
	0xce, 0xa4, 0xe4, 0xc2, 0x4b, 0x75, 0xee, 0x42, 0x9d, 0xc7, 0x97, 0x7c, 0xf1, 0x89, 0x49, 0x2d,
	0x36, 0x79, 0x06, 0x47, 0x79, 0xe9, 0x77, 0x0a, 0xe1, 0x7c, 0x49, 0x85, 0xc7, 0xdc, 0x1c, 0x11,
	0x29, 0x90, 0x6f, 0xe1, 0x20, 0x67, 0x8d, 0x35, 0x91, 0x68, 0x0b, 0x76, 0x42, 0xea, 0xb1, 0x94,
	0xe7, 0x3e, 0xec, 0xa9, 0xb7, 0x69, 0xb2, 0x42, 0x19, 0x2c, 0xb2, 0x82, 0x83, 0x1c, 0xfe, 0xdf,
	0x4e, 0x7d, 0xa1, 0xe4, 0xfb, 0xb8, 0x4c, 0xde, 0xf3, 0x58, 0x3a, 0xc6, 0xc0, 0xdc, 0xde, 0x61,
	0x0f, 0x1a, 0x32, 0x90, 0xd4, 0x9f, 0xa9, 0x83, 0xe6, 0x66, 0x39, 0xec, 0x8f, 0xc4, 0x70, 0x98,
	0x1f, 0xca, 0xb5, 0x2f, 0x0f, 0xa8, 0xf6, 0xc8, 0x80, 0x50, 0x7c, 0xe1, 0xb2, 0x3b, 0xdd, 0x03,
	0x3a, 0x90, 0x0b, 0x81, 0x76, 0x35, 0xd1, 0xe6, 0x2d, 0xd8, 0x91, 0xf7, 0x21, 0x4b, 0x8b, 0x12,
	0xb0, 0x73, 0x65, 0x2e, 0xe8, 0x82, 0x65, 0x2d, 0x62, 0x8e, 0x56, 0x6f, 0x06, 0x76, 0xae, 0xc3,
	0xf6, 0x1c, 0xfb, 0x34, 0xfb, 0x79, 0x0a, 0x3a, 0x38, 0x65, 0x1d, 0x72, 0xb6, 0xe4, 0x05, 0x74,
	0x5f, 0xfb, 0x6c, 0x21, 0x79, 0x20, 0xd6, 0x78, 0x7d, 0x68, 0xb3, 0x34, 0x36, 0xc1, 0x06, 0x34,
	0xf0, 0x01, 0x34, 0x35, 0xf0, 0x79, 0x90, 0x08, 0x99, 0x4e, 0xe6, 0x04, 0x8e, 0x73, 0xd6, 0x9b,
	0x48, 0xe4, 0x2d, 0x1c, 0xe7, 0x7c, 0x2b, 0x75, 0xbe, 0x86, 0x56, 0x56, 0x07, 0xb9, 0xd6, 0x90,
	0xeb, 0xa1, 0xe2, 0x5a, 0x41, 0x7a, 0x57, 0x44, 0xfa, 0x31, 0x61, 0x71, 0x3c, 0x66, 0x1e, 0x17,
	0x53, 0x74, 0xe7, 0x46, 0xcf, 0xb5, 0x47, 0x7a, 0xfe, 0x1d, 0xba, 0x25, 0xa4, 0xf7, 0x81, 0xa7,
	0x3c, 0xe0, 0xa9, 0xe7, 0xf5, 0x0e, 0x2a, 0x8e, 0xcb, 0xc0, 0x48, 0x0f, 0x1a, 0x98, 0x72, 0xa9,
	0xb4, 0xd6, 0xce, 0xb1, 0x01, 0x16, 0x11, 0xa3, 0x92, 0x5d, 0xf2, 0x95, 0x9e, 0xa3, 0x49, 0xfa,
	0x45, 0x87, 0x23, 0x3e, 0x36, 0xf0, 0x67, 0xd1, 0xc2, 0xeb, 0x70, 0xb5, 0xee, 0x97, 0xb0, 0xe7,
	0x07, 0x5e, 0x61, 0x76, 0x87, 0xc5, 0x3e, 0xd6, 0x7c, 0xcb, 0x1d, 0x9b, 0x8f, 0x74, 0x4c, 0x60,
	0x7f, 0x83, 0x53, 0xa5, 0xb0, 0xca, 0xd9, 0x20, 0x58, 0xcd, 0x19, 0xc1, 0xc9, 0x06, 0xce, 0xb4,
	0xb8, 0x1e, 0xd4, 0x4e, 0xd5, 0xfb, 0x22, 0xf5, 0xeb, 0x08, 0x4e, 0x36, 0x30, 0x1f, 0xce, 0x1f,
	0xc0, 0xff, 0xab, 0x7e, 0x79, 0x43, 0xb9, 0xcf, 0x5c, 0x7d, 0x90, 0xfc, 0x06, 0xff, 0xab, 0x66,
	0xcc, 0xd5, 0x3d, 0xf3, 0x8a, 0x4a, 0x6a, 0x3f, 0x83, 0x56, 0x44, 0xc5, 0x27, 0x25, 0x6d, 0xc1,
	0x0a, 0xb8, 0x06, 0x30, 0xe9, 0x22, 0xfd, 0xa8, 0xcc, 0x1c, 0x31, 0x9f, 0xdf, 0xe0, 0xe4, 0xe2,
	0xd4, 0xcc, 0xdf, 0x01, 0x79, 0x00, 0x3c, 0xdb, 0x68, 0x1b, 0x47, 0x35, 0xf3, 0xaf, 0xa0, 0x5f,
	0x3d, 0xfa, 0x5a, 0xb8, 0x7a, 0x05, 0xff, 0xc2, 0xf5, 0xfe, 0xab, 0x93, 0xbf, 0x6a, 0x70, 0x94,
	0xa5, 0xe9, 0xe1, 0xcc, 0x97, 0xc1, 0x2d, 0x72, 0xaf, 0xde, 0x83, 0x3d, 0xb0, 0x56, 0xf4, 0xee,
	0x6d, 0x88, 0xfb, 0xda, 0xfc, 0xde, 0x78, 0xfe, 0x8d, 0xdd, 0x01, 0x63, 0x19, 0x3a, 0xe6, 0xfa,
	0xdd, 0x86, 0xdd, 0x40, 0xf8, 0x5c, 0x28, 0xf7, 0xd5, 0x86, 0x16, 0xc6, 0x4e, 0xa0, 0x1b, 0xb1,
	0x15, 0xe5, 0xe2, 0x62, 0x4d, 0xd3, 0xb1, 0xd6, 0x5f, 0x6d, 0xd8, 0xe5, 0xf1, 0x2b, 0x46, 0x5d,
	0x67, 0x77, 0x1d, 0x3b, 0x84, 0xba, 0xcb, 0xa8, 0x8b, 0x99, 0x7b, 0x6b, 0xec, 0x1e, 0x58, 0x31,
	0x5e, 0x7c, 0xf5, 0x2c, 0x91, 0xc4, 0xd0, 0x2f, 0xb3, 0x7f, 0xe9, 0xfb, 0x48, 0xfe, 0xbf, 0xad,
	0xc6, 0x53, 0xa8, 0xc7, 0x69, 0xdb, 0xe9, 0x45, 0x77, 0x5c, 0xf4, 0x6e, 0x59, 0x18, 0xf2, 0xa1,
	0xf8, 0xeb, 0xe4, 0xb3, 0x7e, 0x0e, 0x70, 0x85, 0xe8, 0x85, 0x9f, 0xe5, 0x69, 0x15, 0x26, 0x63,
	0xa8, 0xb6, 0xfc, 0x4d, 0x98, 0xff, 0xbc, 0xe4, 0x03, 0x7c, 0x96, 0xc3, 0x96, 0x4b, 0x66, 0xa3,
	0x3e, 0x83, 0x4e, 0x58, 0xfa, 0x90, 0xb6, 0xf6, 0x10, 0xdb, 0x27, 0x45, 0x27, 0xe8, 0xf6, 0xe7,
	0x92, 0x46, 0x92, 0xbc, 0x28, 0x5f, 0x62, 0xea, 0x83, 0x32, 0xc8, 0x11, 0x74, 0xf4, 0xa2, 0x99,
	0x95, 0x87, 0x5f, 0xe0, 0xab, 0xdd, 0xf9, 0x03, 0x3c, 0xd9, 0xb2, 0x41, 0x66, 0x49, 0xbc, 0xb4,
	0x3f, 0x07, 0xd3, 0x0f, 0xbc, 0x94, 0xdc, 0xd6, 0x85, 0xf1, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x56, 0x9b, 0x24, 0x94, 0xa1, 0x09, 0x00, 0x00,
}
