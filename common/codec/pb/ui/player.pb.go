// Code generated by protoc-gen-go. DO NOT EDIT.
// source: player.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Property struct {
	Key              *int32 `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Value            *int64 `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Property) Reset()                    { *m = Property{} }
func (m *Property) String() string            { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()               {}
func (*Property) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{0} }

func (m *Property) GetKey() int32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *Property) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type SCPlayerProperty struct {
	BasePropertyList   []*Property `protobuf:"bytes,1,rep,name=basePropertyList" json:"basePropertyList,omitempty"`
	BattlePropertyList []*Property `protobuf:"bytes,2,rep,name=battlePropertyList" json:"battlePropertyList,omitempty"`
	Force              *int64      `protobuf:"varint,3,opt,name=force" json:"force,omitempty"`
	XXX_unrecognized   []byte      `json:"-"`
}

func (m *SCPlayerProperty) Reset()                    { *m = SCPlayerProperty{} }
func (m *SCPlayerProperty) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerProperty) ProtoMessage()               {}
func (*SCPlayerProperty) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{1} }

func (m *SCPlayerProperty) GetBasePropertyList() []*Property {
	if m != nil {
		return m.BasePropertyList
	}
	return nil
}

func (m *SCPlayerProperty) GetBattlePropertyList() []*Property {
	if m != nil {
		return m.BattlePropertyList
	}
	return nil
}

func (m *SCPlayerProperty) GetForce() int64 {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return 0
}

type SCPlayerInfo struct {
	PlayerId          *int64  `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	Name              *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Role              *int32  `protobuf:"varint,3,req,name=role" json:"role,omitempty"`
	Sex               *int32  `protobuf:"varint,4,req,name=sex" json:"sex,omitempty"`
	OnlineTime        *int64  `protobuf:"varint,5,req,name=onlineTime" json:"onlineTime,omitempty"`
	TotalOnlineTime   *int64  `protobuf:"varint,6,req,name=totalOnlineTime" json:"totalOnlineTime,omitempty"`
	IsOpenVideo       *bool   `protobuf:"varint,7,req,name=isOpenVideo" json:"isOpenVideo,omitempty"`
	CreateTime        *int64  `protobuf:"varint,8,req,name=createTime" json:"createTime,omitempty"`
	TodayOnlineTime   *int64  `protobuf:"varint,9,req,name=todayOnlineTime" json:"todayOnlineTime,omitempty"`
	PrivilegeTypeInt  *int32  `protobuf:"varint,10,req,name=privilegeTypeInt" json:"privilegeTypeInt,omitempty"`
	AllianceDepotFlag *bool   `protobuf:"varint,11,req,name=allianceDepotFlag" json:"allianceDepotFlag,omitempty"`
	TradeFlag         *bool   `protobuf:"varint,12,req,name=tradeFlag" json:"tradeFlag,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *SCPlayerInfo) Reset()                    { *m = SCPlayerInfo{} }
func (m *SCPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerInfo) ProtoMessage()               {}
func (*SCPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{2} }

func (m *SCPlayerInfo) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *SCPlayerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SCPlayerInfo) GetRole() int32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *SCPlayerInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *SCPlayerInfo) GetOnlineTime() int64 {
	if m != nil && m.OnlineTime != nil {
		return *m.OnlineTime
	}
	return 0
}

func (m *SCPlayerInfo) GetTotalOnlineTime() int64 {
	if m != nil && m.TotalOnlineTime != nil {
		return *m.TotalOnlineTime
	}
	return 0
}

func (m *SCPlayerInfo) GetIsOpenVideo() bool {
	if m != nil && m.IsOpenVideo != nil {
		return *m.IsOpenVideo
	}
	return false
}

func (m *SCPlayerInfo) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *SCPlayerInfo) GetTodayOnlineTime() int64 {
	if m != nil && m.TodayOnlineTime != nil {
		return *m.TodayOnlineTime
	}
	return 0
}

func (m *SCPlayerInfo) GetPrivilegeTypeInt() int32 {
	if m != nil && m.PrivilegeTypeInt != nil {
		return *m.PrivilegeTypeInt
	}
	return 0
}

func (m *SCPlayerInfo) GetAllianceDepotFlag() bool {
	if m != nil && m.AllianceDepotFlag != nil {
		return *m.AllianceDepotFlag
	}
	return false
}

func (m *SCPlayerInfo) GetTradeFlag() bool {
	if m != nil && m.TradeFlag != nil {
		return *m.TradeFlag
	}
	return false
}

type PlayerBasicInfo struct {
	PlayerId          *int64  `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	OnlineState       *int32  `protobuf:"varint,2,req,name=onlineState" json:"onlineState,omitempty"`
	Name              *string `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Role              *int32  `protobuf:"varint,4,req,name=role" json:"role,omitempty"`
	Sex               *int32  `protobuf:"varint,5,req,name=sex" json:"sex,omitempty"`
	Level             *int32  `protobuf:"varint,6,req,name=level" json:"level,omitempty"`
	Force             *int64  `protobuf:"varint,7,req,name=force" json:"force,omitempty"`
	AllianceId        *int64  `protobuf:"varint,8,req,name=allianceId" json:"allianceId,omitempty"`
	AllianceName      *string `protobuf:"bytes,9,req,name=allianceName" json:"allianceName,omitempty"`
	TeamId            *int64  `protobuf:"varint,10,req,name=teamId" json:"teamId,omitempty"`
	FashionId         *int32  `protobuf:"varint,11,req,name=fashionId" json:"fashionId,omitempty"`
	WeaponId          *int32  `protobuf:"varint,12,req,name=weaponId" json:"weaponId,omitempty"`
	MountId           *int32  `protobuf:"varint,13,req,name=mountId" json:"mountId,omitempty"`
	WingId            *int32  `protobuf:"varint,14,req,name=wingId" json:"wingId,omitempty"`
	SpouseId          *int64  `protobuf:"varint,15,req,name=spouseId" json:"spouseId,omitempty"`
	SpouseName        *string `protobuf:"bytes,16,req,name=spouseName" json:"spouseName,omitempty"`
	RealmLevel        *int32  `protobuf:"varint,17,req,name=realmLevel" json:"realmLevel,omitempty"`
	Ring              *int32  `protobuf:"varint,18,req,name=ring" json:"ring,omitempty"`
	RingLevel         *int32  `protobuf:"varint,19,req,name=ringLevel" json:"ringLevel,omitempty"`
	LingTongId        *int32  `protobuf:"varint,20,req,name=lingTongId" json:"lingTongId,omitempty"`
	LingTongFashionId *int32  `protobuf:"varint,21,req,name=lingTongFashionId" json:"lingTongFashionId,omitempty"`
	LingTongWeaponId  *int32  `protobuf:"varint,22,req,name=lingTongWeaponId" json:"lingTongWeaponId,omitempty"`
	LingTongWingId    *int32  `protobuf:"varint,23,req,name=lingTongWingId" json:"lingTongWingId,omitempty"`
	IsHuiYuan         *bool   `protobuf:"varint,24,req,name=isHuiYuan" json:"isHuiYuan,omitempty"`
	XianZunCard       []int32 `protobuf:"varint,25,rep,name=xianZunCard" json:"xianZunCard,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *PlayerBasicInfo) Reset()                    { *m = PlayerBasicInfo{} }
func (m *PlayerBasicInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerBasicInfo) ProtoMessage()               {}
func (*PlayerBasicInfo) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{3} }

func (m *PlayerBasicInfo) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *PlayerBasicInfo) GetOnlineState() int32 {
	if m != nil && m.OnlineState != nil {
		return *m.OnlineState
	}
	return 0
}

func (m *PlayerBasicInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PlayerBasicInfo) GetRole() int32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *PlayerBasicInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *PlayerBasicInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *PlayerBasicInfo) GetForce() int64 {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return 0
}

func (m *PlayerBasicInfo) GetAllianceId() int64 {
	if m != nil && m.AllianceId != nil {
		return *m.AllianceId
	}
	return 0
}

func (m *PlayerBasicInfo) GetAllianceName() string {
	if m != nil && m.AllianceName != nil {
		return *m.AllianceName
	}
	return ""
}

func (m *PlayerBasicInfo) GetTeamId() int64 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *PlayerBasicInfo) GetFashionId() int32 {
	if m != nil && m.FashionId != nil {
		return *m.FashionId
	}
	return 0
}

func (m *PlayerBasicInfo) GetWeaponId() int32 {
	if m != nil && m.WeaponId != nil {
		return *m.WeaponId
	}
	return 0
}

func (m *PlayerBasicInfo) GetMountId() int32 {
	if m != nil && m.MountId != nil {
		return *m.MountId
	}
	return 0
}

func (m *PlayerBasicInfo) GetWingId() int32 {
	if m != nil && m.WingId != nil {
		return *m.WingId
	}
	return 0
}

func (m *PlayerBasicInfo) GetSpouseId() int64 {
	if m != nil && m.SpouseId != nil {
		return *m.SpouseId
	}
	return 0
}

func (m *PlayerBasicInfo) GetSpouseName() string {
	if m != nil && m.SpouseName != nil {
		return *m.SpouseName
	}
	return ""
}

func (m *PlayerBasicInfo) GetRealmLevel() int32 {
	if m != nil && m.RealmLevel != nil {
		return *m.RealmLevel
	}
	return 0
}

func (m *PlayerBasicInfo) GetRing() int32 {
	if m != nil && m.Ring != nil {
		return *m.Ring
	}
	return 0
}

func (m *PlayerBasicInfo) GetRingLevel() int32 {
	if m != nil && m.RingLevel != nil {
		return *m.RingLevel
	}
	return 0
}

func (m *PlayerBasicInfo) GetLingTongId() int32 {
	if m != nil && m.LingTongId != nil {
		return *m.LingTongId
	}
	return 0
}

func (m *PlayerBasicInfo) GetLingTongFashionId() int32 {
	if m != nil && m.LingTongFashionId != nil {
		return *m.LingTongFashionId
	}
	return 0
}

func (m *PlayerBasicInfo) GetLingTongWeaponId() int32 {
	if m != nil && m.LingTongWeaponId != nil {
		return *m.LingTongWeaponId
	}
	return 0
}

func (m *PlayerBasicInfo) GetLingTongWingId() int32 {
	if m != nil && m.LingTongWingId != nil {
		return *m.LingTongWingId
	}
	return 0
}

func (m *PlayerBasicInfo) GetIsHuiYuan() bool {
	if m != nil && m.IsHuiYuan != nil {
		return *m.IsHuiYuan
	}
	return false
}

func (m *PlayerBasicInfo) GetXianZunCard() []int32 {
	if m != nil {
		return m.XianZunCard
	}
	return nil
}

type CSPlayerBasicInfoGet struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSPlayerBasicInfoGet) Reset()                    { *m = CSPlayerBasicInfoGet{} }
func (m *CSPlayerBasicInfoGet) String() string            { return proto.CompactTextString(m) }
func (*CSPlayerBasicInfoGet) ProtoMessage()               {}
func (*CSPlayerBasicInfoGet) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{4} }

func (m *CSPlayerBasicInfoGet) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type SCPlayerBasicInfoGet struct {
	PlayerBasicInfo  *PlayerBasicInfo `protobuf:"bytes,1,req,name=playerBasicInfo" json:"playerBasicInfo,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SCPlayerBasicInfoGet) Reset()                    { *m = SCPlayerBasicInfoGet{} }
func (m *SCPlayerBasicInfoGet) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerBasicInfoGet) ProtoMessage()               {}
func (*SCPlayerBasicInfoGet) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{5} }

func (m *SCPlayerBasicInfoGet) GetPlayerBasicInfo() *PlayerBasicInfo {
	if m != nil {
		return m.PlayerBasicInfo
	}
	return nil
}

type CSPlayerBasicInfoBatchGet struct {
	PlayerIdList     []int64 `protobuf:"varint,1,rep,name=playerIdList" json:"playerIdList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSPlayerBasicInfoBatchGet) Reset()                    { *m = CSPlayerBasicInfoBatchGet{} }
func (m *CSPlayerBasicInfoBatchGet) String() string            { return proto.CompactTextString(m) }
func (*CSPlayerBasicInfoBatchGet) ProtoMessage()               {}
func (*CSPlayerBasicInfoBatchGet) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{6} }

func (m *CSPlayerBasicInfoBatchGet) GetPlayerIdList() []int64 {
	if m != nil {
		return m.PlayerIdList
	}
	return nil
}

type SCPlayerBasicInfoBatchGet struct {
	PlayerBasicInfoList []*PlayerBasicInfo `protobuf:"bytes,1,rep,name=playerBasicInfoList" json:"playerBasicInfoList,omitempty"`
	XXX_unrecognized    []byte             `json:"-"`
}

func (m *SCPlayerBasicInfoBatchGet) Reset()                    { *m = SCPlayerBasicInfoBatchGet{} }
func (m *SCPlayerBasicInfoBatchGet) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerBasicInfoBatchGet) ProtoMessage()               {}
func (*SCPlayerBasicInfoBatchGet) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{7} }

func (m *SCPlayerBasicInfoBatchGet) GetPlayerBasicInfoList() []*PlayerBasicInfo {
	if m != nil {
		return m.PlayerBasicInfoList
	}
	return nil
}

type CSPlayerInfoGet struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSPlayerInfoGet) Reset()                    { *m = CSPlayerInfoGet{} }
func (m *CSPlayerInfoGet) String() string            { return proto.CompactTextString(m) }
func (*CSPlayerInfoGet) ProtoMessage()               {}
func (*CSPlayerInfoGet) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{8} }

func (m *CSPlayerInfoGet) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type SCPlayerInfoGet struct {
	BasicInfo          *PlayerBasicInfo             `protobuf:"bytes,1,req,name=basicInfo" json:"basicInfo,omitempty"`
	BasePropertyList   []*Property                  `protobuf:"bytes,2,rep,name=basePropertyList" json:"basePropertyList,omitempty"`
	BattlePropertyList []*Property                  `protobuf:"bytes,3,rep,name=battlePropertyList" json:"battlePropertyList,omitempty"`
	EquipmentList      []*EquipmentSlot             `protobuf:"bytes,4,rep,name=equipmentList" json:"equipmentList,omitempty"`
	MountInfo          *MountInfo                   `protobuf:"bytes,5,req,name=mountInfo" json:"mountInfo,omitempty"`
	WingInfo           *WingInfo                    `protobuf:"bytes,6,req,name=wingInfo" json:"wingInfo,omitempty"`
	BodyShieldInfo     *BodyShieldInfo              `protobuf:"bytes,7,req,name=bodyShieldInfo" json:"bodyShieldInfo,omitempty"`
	AllSoulInfo        *AllSoulInfo                 `protobuf:"bytes,8,req,name=allSoulInfo" json:"allSoulInfo,omitempty"`
	AllWeaponInfo      *AllWeaponInfo               `protobuf:"bytes,9,req,name=allWeaponInfo" json:"allWeaponInfo,omitempty"`
	FashionId          *int32                       `protobuf:"varint,10,req,name=fashionId" json:"fashionId,omitempty"`
	ShenfaInfo         *ShenfaInfo                  `protobuf:"bytes,11,req,name=shenfaInfo" json:"shenfaInfo,omitempty"`
	LingyuInfo         *LingyuInfo                  `protobuf:"bytes,12,req,name=lingyuInfo" json:"lingyuInfo,omitempty"`
	GoldEquipList      []*GoldEquipSlot             `protobuf:"bytes,13,rep,name=goldEquipList" json:"goldEquipList,omitempty"`
	ShieldInfo         *ShieldInfo                  `protobuf:"bytes,14,req,name=shieldInfo" json:"shieldInfo,omitempty"`
	FeatherInfo        *FeatherInfo                 `protobuf:"bytes,15,req,name=FeatherInfo" json:"FeatherInfo,omitempty"`
	AnqiInfo           *AnqiInfo                    `protobuf:"bytes,16,req,name=anqiInfo" json:"anqiInfo,omitempty"`
	AllLingTongDevInfo *AllLingTongDevInfo          `protobuf:"bytes,17,req,name=allLingTongDevInfo" json:"allLingTongDevInfo,omitempty"`
	LingTongInfo       *LingTongCacheInfo           `protobuf:"bytes,18,req,name=lingTongInfo" json:"lingTongInfo,omitempty"`
	AllSystemSkillInfo *AllSystemSkillInfo          `protobuf:"bytes,19,req,name=allSystemSkillInfo" json:"allSystemSkillInfo,omitempty"`
	AllAdditionSysInfo *AllAdditionSysInfo          `protobuf:"bytes,20,req,name=allAdditionSysInfo" json:"allAdditionSysInfo,omitempty"`
	PregnantInfo       *DongFangInfo                `protobuf:"bytes,21,req,name=pregnantInfo" json:"pregnantInfo,omitempty"`
	DianXingInfo       *DianXingCacheInfo           `protobuf:"bytes,22,req,name=dianXingInfo" json:"dianXingInfo,omitempty"`
	WushuangSlotList   []*WushuangWeaponBodyPosInfo `protobuf:"bytes,23,rep,name=wushuangSlotList" json:"wushuangSlotList,omitempty"`
	RingInfoList       []*RingInfo                  `protobuf:"bytes,24,rep,name=ringInfoList" json:"ringInfoList,omitempty"`
	XXX_unrecognized   []byte                       `json:"-"`
}

func (m *SCPlayerInfoGet) Reset()                    { *m = SCPlayerInfoGet{} }
func (m *SCPlayerInfoGet) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerInfoGet) ProtoMessage()               {}
func (*SCPlayerInfoGet) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{9} }

func (m *SCPlayerInfoGet) GetBasicInfo() *PlayerBasicInfo {
	if m != nil {
		return m.BasicInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetBasePropertyList() []*Property {
	if m != nil {
		return m.BasePropertyList
	}
	return nil
}

func (m *SCPlayerInfoGet) GetBattlePropertyList() []*Property {
	if m != nil {
		return m.BattlePropertyList
	}
	return nil
}

func (m *SCPlayerInfoGet) GetEquipmentList() []*EquipmentSlot {
	if m != nil {
		return m.EquipmentList
	}
	return nil
}

func (m *SCPlayerInfoGet) GetMountInfo() *MountInfo {
	if m != nil {
		return m.MountInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetWingInfo() *WingInfo {
	if m != nil {
		return m.WingInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetBodyShieldInfo() *BodyShieldInfo {
	if m != nil {
		return m.BodyShieldInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetAllSoulInfo() *AllSoulInfo {
	if m != nil {
		return m.AllSoulInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetAllWeaponInfo() *AllWeaponInfo {
	if m != nil {
		return m.AllWeaponInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetFashionId() int32 {
	if m != nil && m.FashionId != nil {
		return *m.FashionId
	}
	return 0
}

func (m *SCPlayerInfoGet) GetShenfaInfo() *ShenfaInfo {
	if m != nil {
		return m.ShenfaInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetLingyuInfo() *LingyuInfo {
	if m != nil {
		return m.LingyuInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetGoldEquipList() []*GoldEquipSlot {
	if m != nil {
		return m.GoldEquipList
	}
	return nil
}

func (m *SCPlayerInfoGet) GetShieldInfo() *ShieldInfo {
	if m != nil {
		return m.ShieldInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetFeatherInfo() *FeatherInfo {
	if m != nil {
		return m.FeatherInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetAnqiInfo() *AnqiInfo {
	if m != nil {
		return m.AnqiInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetAllLingTongDevInfo() *AllLingTongDevInfo {
	if m != nil {
		return m.AllLingTongDevInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetLingTongInfo() *LingTongCacheInfo {
	if m != nil {
		return m.LingTongInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetAllSystemSkillInfo() *AllSystemSkillInfo {
	if m != nil {
		return m.AllSystemSkillInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetAllAdditionSysInfo() *AllAdditionSysInfo {
	if m != nil {
		return m.AllAdditionSysInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetPregnantInfo() *DongFangInfo {
	if m != nil {
		return m.PregnantInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetDianXingInfo() *DianXingCacheInfo {
	if m != nil {
		return m.DianXingInfo
	}
	return nil
}

func (m *SCPlayerInfoGet) GetWushuangSlotList() []*WushuangWeaponBodyPosInfo {
	if m != nil {
		return m.WushuangSlotList
	}
	return nil
}

func (m *SCPlayerInfoGet) GetRingInfoList() []*RingInfo {
	if m != nil {
		return m.RingInfoList
	}
	return nil
}

type CSPlayerOpenVedio struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSPlayerOpenVedio) Reset()                    { *m = CSPlayerOpenVedio{} }
func (m *CSPlayerOpenVedio) String() string            { return proto.CompactTextString(m) }
func (*CSPlayerOpenVedio) ProtoMessage()               {}
func (*CSPlayerOpenVedio) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{10} }

type SCPlayerOpenVedio struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPlayerOpenVedio) Reset()                    { *m = SCPlayerOpenVedio{} }
func (m *SCPlayerOpenVedio) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerOpenVedio) ProtoMessage()               {}
func (*SCPlayerOpenVedio) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{11} }

type SCPlayerSexChanged struct {
	NewSex           *int32 `protobuf:"varint,1,req,name=newSex" json:"newSex,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPlayerSexChanged) Reset()                    { *m = SCPlayerSexChanged{} }
func (m *SCPlayerSexChanged) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerSexChanged) ProtoMessage()               {}
func (*SCPlayerSexChanged) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{12} }

func (m *SCPlayerSexChanged) GetNewSex() int32 {
	if m != nil && m.NewSex != nil {
		return *m.NewSex
	}
	return 0
}

type SCPlayerNameChanged struct {
	NewName          *string `protobuf:"bytes,1,req,name=newName" json:"newName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCPlayerNameChanged) Reset()                    { *m = SCPlayerNameChanged{} }
func (m *SCPlayerNameChanged) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerNameChanged) ProtoMessage()               {}
func (*SCPlayerNameChanged) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{13} }

func (m *SCPlayerNameChanged) GetNewName() string {
	if m != nil && m.NewName != nil {
		return *m.NewName
	}
	return ""
}

type CountData struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value            *int64  `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CountData) Reset()                    { *m = CountData{} }
func (m *CountData) String() string            { return proto.CompactTextString(m) }
func (*CountData) ProtoMessage()               {}
func (*CountData) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{14} }

func (m *CountData) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CountData) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type CSPlayerCountData struct {
	CountList        []*CountData `protobuf:"bytes,1,rep,name=countList" json:"countList,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CSPlayerCountData) Reset()                    { *m = CSPlayerCountData{} }
func (m *CSPlayerCountData) String() string            { return proto.CompactTextString(m) }
func (*CSPlayerCountData) ProtoMessage()               {}
func (*CSPlayerCountData) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{15} }

func (m *CSPlayerCountData) GetCountList() []*CountData {
	if m != nil {
		return m.CountList
	}
	return nil
}

type SCPlayerCountData struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPlayerCountData) Reset()                    { *m = SCPlayerCountData{} }
func (m *SCPlayerCountData) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerCountData) ProtoMessage()               {}
func (*SCPlayerCountData) Descriptor() ([]byte, []int) { return fileDescriptor81, []int{16} }

func init() {
	proto.RegisterType((*Property)(nil), "ui.Property")
	proto.RegisterType((*SCPlayerProperty)(nil), "ui.SCPlayerProperty")
	proto.RegisterType((*SCPlayerInfo)(nil), "ui.SCPlayerInfo")
	proto.RegisterType((*PlayerBasicInfo)(nil), "ui.PlayerBasicInfo")
	proto.RegisterType((*CSPlayerBasicInfoGet)(nil), "ui.CSPlayerBasicInfoGet")
	proto.RegisterType((*SCPlayerBasicInfoGet)(nil), "ui.SCPlayerBasicInfoGet")
	proto.RegisterType((*CSPlayerBasicInfoBatchGet)(nil), "ui.CSPlayerBasicInfoBatchGet")
	proto.RegisterType((*SCPlayerBasicInfoBatchGet)(nil), "ui.SCPlayerBasicInfoBatchGet")
	proto.RegisterType((*CSPlayerInfoGet)(nil), "ui.CSPlayerInfoGet")
	proto.RegisterType((*SCPlayerInfoGet)(nil), "ui.SCPlayerInfoGet")
	proto.RegisterType((*CSPlayerOpenVedio)(nil), "ui.CSPlayerOpenVedio")
	proto.RegisterType((*SCPlayerOpenVedio)(nil), "ui.SCPlayerOpenVedio")
	proto.RegisterType((*SCPlayerSexChanged)(nil), "ui.SCPlayerSexChanged")
	proto.RegisterType((*SCPlayerNameChanged)(nil), "ui.SCPlayerNameChanged")
	proto.RegisterType((*CountData)(nil), "ui.CountData")
	proto.RegisterType((*CSPlayerCountData)(nil), "ui.CSPlayerCountData")
	proto.RegisterType((*SCPlayerCountData)(nil), "ui.SCPlayerCountData")
}

func init() { proto.RegisterFile("player.proto", fileDescriptor81) }

var fileDescriptor81 = []byte{
	// 1154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x5b, 0x6f, 0xdb, 0x36,
	0x14, 0x46, 0xad, 0x38, 0xb1, 0x8e, 0xe5, 0x1b, 0xed, 0xa6, 0x4a, 0x81, 0x0d, 0x86, 0x56, 0x64,
	0xc6, 0x3a, 0x14, 0x5b, 0x81, 0x61, 0xcf, 0xad, 0xbd, 0x76, 0x06, 0xd2, 0xb5, 0x98, 0x8a, 0x75,
	0xdb, 0x4b, 0x41, 0x5b, 0x8c, 0x4d, 0x94, 0x26, 0x55, 0x89, 0x72, 0xe2, 0xb7, 0xfd, 0xd1, 0x3d,
	0xed, 0x8f, 0x0c, 0x3c, 0x22, 0x25, 0xdb, 0x4d, 0x81, 0xbe, 0x89, 0xdf, 0xf9, 0x0e, 0xcf, 0x85,
	0xe7, 0x22, 0x08, 0x52, 0x41, 0x77, 0x2c, 0x7b, 0x92, 0x66, 0x4a, 0x2b, 0xd2, 0x28, 0xf8, 0xc3,
	0x1e, 0x97, 0x5b, 0x26, 0xb5, 0xca, 0x76, 0x25, 0xf8, 0xb0, 0xbd, 0x51, 0x85, 0xd4, 0xf6, 0x30,
	0x58, 0xa8, 0x64, 0xf7, 0x3e, 0x5f, 0x73, 0x26, 0x12, 0x0b, 0xc1, 0x0d, 0x97, 0x2b, 0xfb, 0x1d,
	0xdc, 0x30, 0x9a, 0x2a, 0xe9, 0x24, 0xb9, 0x2a, 0x84, 0x93, 0xe4, 0x6b, 0x26, 0xaf, 0xa9, 0x3b,
	0x09, 0x2e, 0x57, 0xbb, 0xc2, 0x9e, 0x7a, 0x2b, 0x25, 0x12, 0xf6, 0xb1, 0xe0, 0xa9, 0x53, 0xa4,
	0xf2, 0x23, 0xb7, 0xdf, 0xc4, 0x50, 0xb5, 0x92, 0xab, 0xf7, 0x09, 0xdb, 0x5a, 0xac, 0xeb, 0x30,
	0xe7, 0x55, 0xbe, 0xcb, 0x35, 0xdb, 0xe4, 0x1f, 0xb8, 0x70, 0xf6, 0x06, 0x34, 0x49, 0xb8, 0xe6,
	0x4a, 0xe6, 0xbb, 0xdc, 0xdd, 0xba, 0xa0, 0x0b, 0x17, 0x54, 0x37, 0xe1, 0x54, 0xde, 0xd6, 0x8e,
	0x8f, 0x6e, 0x8a, 0x7c, 0x5d, 0x50, 0xb9, 0x3a, 0x0c, 0x20, 0xab, 0x18, 0xd1, 0x25, 0xb4, 0xde,
	0x64, 0x2a, 0x65, 0x99, 0xde, 0x91, 0x36, 0x78, 0x1f, 0xd8, 0x2e, 0xbc, 0x37, 0x6e, 0x4c, 0x9a,
	0xa4, 0x03, 0xcd, 0x2d, 0x15, 0x05, 0x0b, 0x1b, 0xe3, 0xc6, 0xc4, 0x8b, 0x72, 0xe8, 0xc7, 0xd3,
	0x37, 0x98, 0xd5, 0x8a, 0x7f, 0x09, 0xfd, 0x05, 0xcd, 0x99, 0x3b, 0x5f, 0xf1, 0x5c, 0x87, 0xf7,
	0xc6, 0xde, 0xa4, 0xfd, 0x34, 0x78, 0x52, 0xf0, 0x27, 0x15, 0x6f, 0x02, 0x64, 0x41, 0xb5, 0x16,
	0x87, 0xcc, 0xc6, 0x1d, 0xcc, 0x0e, 0x34, 0xaf, 0x55, 0xb6, 0x64, 0xa1, 0x37, 0xbe, 0x37, 0xf1,
	0xa2, 0x7f, 0x1a, 0x10, 0x38, 0xab, 0x73, 0x79, 0xad, 0x48, 0x1f, 0x5a, 0xe5, 0xcb, 0xce, 0x13,
	0x74, 0xd3, 0x23, 0x01, 0x9c, 0x48, 0xba, 0x29, 0xbd, 0xf4, 0xcd, 0x29, 0x53, 0xc2, 0xa8, 0x9b,
	0x10, 0xda, 0xe0, 0xe5, 0xec, 0x36, 0x3c, 0xc1, 0x03, 0x01, 0x50, 0x52, 0x70, 0xc9, 0xde, 0xf2,
	0x0d, 0x0b, 0x9b, 0xa8, 0xfc, 0x00, 0x7a, 0x5a, 0x69, 0x2a, 0x5e, 0xd7, 0x82, 0x53, 0x14, 0x0c,
	0xa1, 0xcd, 0xf3, 0xd7, 0x29, 0x93, 0x7f, 0xf0, 0x84, 0xa9, 0xf0, 0x6c, 0xdc, 0x98, 0xb4, 0xcc,
	0x0d, 0xcb, 0x8c, 0x51, 0x5d, 0x12, 0x5b, 0xf5, 0x0d, 0x09, 0xdd, 0xed, 0xdd, 0xe0, 0xa3, 0x20,
	0x84, 0x7e, 0x9a, 0xf1, 0x2d, 0x17, 0x6c, 0xc5, 0xde, 0xee, 0x52, 0x36, 0x97, 0x3a, 0x04, 0x74,
	0xe4, 0x02, 0x06, 0x54, 0x08, 0x4e, 0xe5, 0x92, 0xcd, 0x58, 0xaa, 0xf4, 0x0b, 0x41, 0x57, 0x61,
	0x1b, 0x2d, 0x0c, 0xc0, 0xd7, 0x19, 0x4d, 0x18, 0x42, 0x81, 0x81, 0xa2, 0xff, 0x3c, 0xe8, 0x95,
	0x09, 0x78, 0x4e, 0x73, 0xbe, 0xfc, 0x4c, 0x16, 0x86, 0xd0, 0x2e, 0x83, 0x8b, 0x35, 0xd5, 0x65,
	0x32, 0x9a, 0x55, 0x6a, 0xbc, 0x83, 0xd4, 0x9c, 0xec, 0xa7, 0xa6, 0xe9, 0x9e, 0x5a, 0xb0, 0x2d,
	0x13, 0x18, 0x7c, 0xb3, 0x7e, 0x84, 0x33, 0xbc, 0x9b, 0x00, 0x38, 0x7f, 0xe7, 0x89, 0x0d, 0x7b,
	0x04, 0x81, 0xc3, 0x7e, 0xa3, 0x36, 0x66, 0x9f, 0x74, 0xe1, 0x54, 0x33, 0xba, 0x99, 0x27, 0x18,
	0xa9, 0x67, 0xc2, 0xb9, 0xa6, 0xf9, 0x9a, 0x2b, 0x39, 0x4f, 0x30, 0xc2, 0xa6, 0x71, 0xbd, 0x2c,
	0xc5, 0x79, 0x82, 0x01, 0x36, 0x49, 0x0f, 0xce, 0xb0, 0x13, 0xe7, 0x49, 0xd8, 0x41, 0xa0, 0x0b,
	0xa7, 0xa6, 0xf5, 0xe6, 0x49, 0xd8, 0x75, 0x2a, 0x79, 0xaa, 0x8a, 0xdc, 0x58, 0xef, 0x39, 0x8f,
	0x4a, 0x04, 0x6d, 0xf7, 0xd1, 0x36, 0x01, 0xc8, 0x18, 0x15, 0x9b, 0x2b, 0x0c, 0x64, 0xe0, 0x12,
	0x60, 0x2a, 0x3d, 0x24, 0x78, 0x1a, 0x80, 0x6f, 0x4e, 0x25, 0x61, 0xe8, 0x6a, 0xc2, 0xb4, 0xdc,
	0x5b, 0x85, 0xe6, 0x46, 0xee, 0x79, 0x1c, 0xf6, 0xa2, 0x72, 0xfe, 0x3e, 0x8a, 0x42, 0xe8, 0x3b,
	0xd1, 0x3b, 0x17, 0xc4, 0x39, 0x4a, 0xce, 0xa1, 0x5b, 0x49, 0x4a, 0xdf, 0x1f, 0x38, 0x9b, 0x3c,
	0xff, 0xb5, 0xe0, 0x7f, 0x15, 0x54, 0x86, 0x21, 0xbe, 0xf1, 0x10, 0xda, 0xb7, 0x9c, 0xca, 0xbf,
	0x0b, 0x39, 0xa5, 0x59, 0x12, 0x5e, 0x8c, 0xbd, 0x49, 0x33, 0x9a, 0xc0, 0x68, 0x1a, 0x1f, 0x3d,
	0xf3, 0x4b, 0xa6, 0x3f, 0x7d, 0xe9, 0x68, 0x06, 0x23, 0xd7, 0x11, 0x07, 0xcc, 0xef, 0xa1, 0x97,
	0x1e, 0xa2, 0xa8, 0xd0, 0x7e, 0x3a, 0xc4, 0x06, 0x3b, 0x14, 0x45, 0x3f, 0xc2, 0xc5, 0x27, 0xf6,
	0x9e, 0x53, 0xbd, 0x5c, 0x9b, 0xab, 0x46, 0x6e, 0x7c, 0xce, 0x93, 0xaa, 0xa5, 0xbd, 0xe8, 0x15,
	0x5c, 0x7c, 0x62, 0xb8, 0x52, 0xf9, 0x01, 0x86, 0x47, 0xd6, 0xf7, 0x86, 0xc1, 0x9d, 0x1e, 0x7c,
	0x03, 0x3d, 0xe7, 0xc1, 0xe7, 0x83, 0xfd, 0xf7, 0x0c, 0x7a, 0xfb, 0xfd, 0x6f, 0x58, 0x97, 0xe0,
	0x2f, 0xbe, 0x20, 0xc4, 0x3b, 0x87, 0x53, 0xe3, 0x8b, 0x87, 0x93, 0x77, 0x27, 0xb3, 0x83, 0xd3,
	0x7c, 0xc3, 0xa4, 0x46, 0xd2, 0x09, 0x92, 0x06, 0x86, 0xf4, 0x8b, 0x13, 0xc4, 0x42, 0x69, 0x32,
	0x06, 0xbf, 0xac, 0x69, 0xe3, 0x63, 0x13, 0x7d, 0xec, 0x18, 0xd6, 0x2b, 0x07, 0x92, 0xaf, 0xa1,
	0x85, 0x45, 0x6e, 0x08, 0xa7, 0x48, 0x40, 0x5b, 0xef, 0x2c, 0x46, 0xbe, 0x83, 0xae, 0x59, 0x49,
	0x31, 0x6e, 0x24, 0x64, 0x9d, 0x21, 0x8b, 0x18, 0xd6, 0xf3, 0x03, 0x09, 0x79, 0x04, 0x6d, 0x2a,
	0x44, 0xac, 0x0a, 0x81, 0xc4, 0x16, 0x12, 0x7b, 0x86, 0xf8, 0xac, 0x86, 0x8d, 0xf7, 0x54, 0x08,
	0x5b, 0xb7, 0x86, 0xe7, 0x23, 0x6f, 0x60, 0x79, 0xb5, 0xe0, 0xb0, 0x6d, 0xcb, 0x99, 0x15, 0x01,
	0x94, 0x8b, 0x0e, 0x35, 0xdb, 0xa8, 0xd9, 0x35, 0x9a, 0x71, 0x85, 0x1a, 0x4e, 0xb9, 0xfe, 0x90,
	0x13, 0xd4, 0x9c, 0xab, 0x0a, 0x35, 0x4e, 0x98, 0xa5, 0x88, 0xd9, 0xc2, 0x14, 0x76, 0xea, 0x14,
	0xbe, 0x74, 0x02, 0x4c, 0x21, 0x5a, 0xac, 0x82, 0xef, 0xee, 0x5b, 0xdc, 0x0f, 0xfc, 0x05, 0xa3,
	0x7a, 0x5d, 0x16, 0x07, 0x0e, 0x07, 0x1b, 0xf8, 0x1e, 0x6c, 0x52, 0x6d, 0xf6, 0x2e, 0x52, 0xfa,
	0x75, 0xaa, 0x9f, 0x59, 0x8c, 0x3c, 0x05, 0x42, 0x85, 0xb8, 0xb2, 0xed, 0x3b, 0x63, 0x5b, 0x64,
	0x0e, 0x90, 0x79, 0x6e, 0xb3, 0x73, 0x24, 0x25, 0x8f, 0x21, 0xa8, 0x06, 0x87, 0x61, 0x13, 0x64,
	0xdf, 0x77, 0xd1, 0x1a, 0x7c, 0x4a, 0x97, 0x6b, 0xb6, 0x67, 0x20, 0xc6, 0x5d, 0x1e, 0x9b, 0x5d,
	0x8e, 0x2a, 0xc3, 0x03, 0x03, 0x47, 0x52, 0xab, 0xf3, 0xcc, 0x2e, 0xfb, 0x78, 0x97, 0xa3, 0xce,
	0xe8, 0x40, 0xe7, 0x48, 0x4a, 0x2e, 0x21, 0x48, 0x33, 0xb6, 0x92, 0xd4, 0x16, 0xde, 0x7d, 0x64,
	0xf7, 0x0d, 0x7b, 0x86, 0xd3, 0xcc, 0xd6, 0xd6, 0x63, 0x08, 0xcc, 0x6f, 0xc2, 0x9f, 0xae, 0xfe,
	0xce, 0x6b, 0xe7, 0x67, 0x16, 0xaf, 0x9d, 0xff, 0x19, 0xfa, 0xee, 0x1f, 0xc2, 0xbc, 0x0b, 0x3e,
	0xda, 0x03, 0x7c, 0xb4, 0xaf, 0xb0, 0x60, 0xad, 0xac, 0x2c, 0x1f, 0x53, 0x98, 0x6f, 0x54, 0x6e,
	0xcb, 0x21, 0xc8, 0xac, 0x05, 0x54, 0x0a, 0xeb, 0x8e, 0xfa, 0xdd, 0xe2, 0xd1, 0x10, 0x06, 0x6e,
	0x08, 0xe0, 0xb2, 0x65, 0x09, 0x47, 0xd0, 0xf5, 0x7c, 0x0d, 0x3e, 0x02, 0xe2, 0xc0, 0x98, 0xdd,
	0x4e, 0xd7, 0x54, 0xae, 0x58, 0x62, 0x56, 0x85, 0x64, 0x37, 0x31, 0xbb, 0x2d, 0xff, 0x59, 0xa2,
	0x4b, 0x18, 0x3a, 0x96, 0x59, 0x0d, 0x8e, 0xd6, 0x83, 0x33, 0xc9, 0x6e, 0x70, 0x59, 0x18, 0x9e,
	0x1f, 0x7d, 0x0b, 0xfe, 0xd4, 0xb4, 0xe2, 0x8c, 0x6a, 0xba, 0xff, 0xd7, 0xe3, 0x1f, 0xff, 0xf5,
	0xfc, 0x54, 0x3b, 0x58, 0x2b, 0x8c, 0xc1, 0x5f, 0x9a, 0xc3, 0xde, 0x88, 0xc3, 0xee, 0xae, 0x18,
	0xfb, 0x21, 0x54, 0xe0, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xad, 0xf4, 0x3b, 0x62, 0x94, 0x0a,
	0x00, 0x00,
}
