// Code generated by protoc-gen-go. DO NOT EDIT.
// source: login.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CSLogin struct {
	Token                 *string `protobuf:"bytes,1,req,name=token" json:"token,omitempty"`
	ServerId              *int32  `protobuf:"varint,2,req,name=serverId" json:"serverId,omitempty"`
	GuaJi                 *bool   `protobuf:"varint,3,opt,name=guaJi" json:"guaJi,omitempty"`
	DeviceMac             *string `protobuf:"bytes,4,opt,name=deviceMac" json:"deviceMac,omitempty"`
	ClientAppVersion      *string `protobuf:"bytes,5,opt,name=clientAppVersion" json:"clientAppVersion,omitempty"`
	ClientResourceVersion *string `protobuf:"bytes,6,opt,name=clientResourceVersion" json:"clientResourceVersion,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *CSLogin) Reset()                    { *m = CSLogin{} }
func (m *CSLogin) String() string            { return proto.CompactTextString(m) }
func (*CSLogin) ProtoMessage()               {}
func (*CSLogin) Descriptor() ([]byte, []int) { return fileDescriptor64, []int{0} }

func (m *CSLogin) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *CSLogin) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *CSLogin) GetGuaJi() bool {
	if m != nil && m.GuaJi != nil {
		return *m.GuaJi
	}
	return false
}

func (m *CSLogin) GetDeviceMac() string {
	if m != nil && m.DeviceMac != nil {
		return *m.DeviceMac
	}
	return ""
}

func (m *CSLogin) GetClientAppVersion() string {
	if m != nil && m.ClientAppVersion != nil {
		return *m.ClientAppVersion
	}
	return ""
}

func (m *CSLogin) GetClientResourceVersion() string {
	if m != nil && m.ClientResourceVersion != nil {
		return *m.ClientResourceVersion
	}
	return ""
}

type SCLogin struct {
	UserId                  *int64  `protobuf:"varint,1,req,name=userId" json:"userId,omitempty"`
	RealNameState           *int32  `protobuf:"varint,2,req,name=realNameState" json:"realNameState,omitempty"`
	Now                     *int64  `protobuf:"varint,3,req,name=now" json:"now,omitempty"`
	OpenServerTime          *int64  `protobuf:"varint,4,req,name=openServerTime" json:"openServerTime,omitempty"`
	MergeServerTime         *int64  `protobuf:"varint,5,req,name=mergeServerTime" json:"mergeServerTime,omitempty"`
	Gm                      *int32  `protobuf:"varint,6,req,name=gm" json:"gm,omitempty"`
	ActivityOpenServerTime  *int64  `protobuf:"varint,7,req,name=activityOpenServerTime" json:"activityOpenServerTime,omitempty"`
	ActivityMergeServerTime *int64  `protobuf:"varint,8,req,name=activityMergeServerTime" json:"activityMergeServerTime,omitempty"`
	IosVersion              *string `protobuf:"bytes,9,opt,name=iosVersion" json:"iosVersion,omitempty"`
	AndroidVersion          *string `protobuf:"bytes,10,opt,name=androidVersion" json:"androidVersion,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *SCLogin) Reset()                    { *m = SCLogin{} }
func (m *SCLogin) String() string            { return proto.CompactTextString(m) }
func (*SCLogin) ProtoMessage()               {}
func (*SCLogin) Descriptor() ([]byte, []int) { return fileDescriptor64, []int{1} }

func (m *SCLogin) GetUserId() int64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SCLogin) GetRealNameState() int32 {
	if m != nil && m.RealNameState != nil {
		return *m.RealNameState
	}
	return 0
}

func (m *SCLogin) GetNow() int64 {
	if m != nil && m.Now != nil {
		return *m.Now
	}
	return 0
}

func (m *SCLogin) GetOpenServerTime() int64 {
	if m != nil && m.OpenServerTime != nil {
		return *m.OpenServerTime
	}
	return 0
}

func (m *SCLogin) GetMergeServerTime() int64 {
	if m != nil && m.MergeServerTime != nil {
		return *m.MergeServerTime
	}
	return 0
}

func (m *SCLogin) GetGm() int32 {
	if m != nil && m.Gm != nil {
		return *m.Gm
	}
	return 0
}

func (m *SCLogin) GetActivityOpenServerTime() int64 {
	if m != nil && m.ActivityOpenServerTime != nil {
		return *m.ActivityOpenServerTime
	}
	return 0
}

func (m *SCLogin) GetActivityMergeServerTime() int64 {
	if m != nil && m.ActivityMergeServerTime != nil {
		return *m.ActivityMergeServerTime
	}
	return 0
}

func (m *SCLogin) GetIosVersion() string {
	if m != nil && m.IosVersion != nil {
		return *m.IosVersion
	}
	return ""
}

func (m *SCLogin) GetAndroidVersion() string {
	if m != nil && m.AndroidVersion != nil {
		return *m.AndroidVersion
	}
	return ""
}

type CSTestLogin struct {
	UserName         *string `protobuf:"bytes,1,req,name=userName" json:"userName,omitempty"`
	Password         *string `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSTestLogin) Reset()                    { *m = CSTestLogin{} }
func (m *CSTestLogin) String() string            { return proto.CompactTextString(m) }
func (*CSTestLogin) ProtoMessage()               {}
func (*CSTestLogin) Descriptor() ([]byte, []int) { return fileDescriptor64, []int{2} }

func (m *CSTestLogin) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *CSTestLogin) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type SCTestLogin struct {
	UserId                  *int64 `protobuf:"varint,1,req,name=userId" json:"userId,omitempty"`
	RealNameState           *int32 `protobuf:"varint,2,req,name=realNameState" json:"realNameState,omitempty"`
	Now                     *int64 `protobuf:"varint,3,req,name=now" json:"now,omitempty"`
	OpenServerTime          *int64 `protobuf:"varint,4,req,name=openServerTime" json:"openServerTime,omitempty"`
	MergeServerTime         *int64 `protobuf:"varint,5,req,name=mergeServerTime" json:"mergeServerTime,omitempty"`
	ActivityOpenServerTime  *int64 `protobuf:"varint,6,req,name=activityOpenServerTime" json:"activityOpenServerTime,omitempty"`
	ActivityMergeServerTime *int64 `protobuf:"varint,7,req,name=activityMergeServerTime" json:"activityMergeServerTime,omitempty"`
	XXX_unrecognized        []byte `json:"-"`
}

func (m *SCTestLogin) Reset()                    { *m = SCTestLogin{} }
func (m *SCTestLogin) String() string            { return proto.CompactTextString(m) }
func (*SCTestLogin) ProtoMessage()               {}
func (*SCTestLogin) Descriptor() ([]byte, []int) { return fileDescriptor64, []int{3} }

func (m *SCTestLogin) GetUserId() int64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SCTestLogin) GetRealNameState() int32 {
	if m != nil && m.RealNameState != nil {
		return *m.RealNameState
	}
	return 0
}

func (m *SCTestLogin) GetNow() int64 {
	if m != nil && m.Now != nil {
		return *m.Now
	}
	return 0
}

func (m *SCTestLogin) GetOpenServerTime() int64 {
	if m != nil && m.OpenServerTime != nil {
		return *m.OpenServerTime
	}
	return 0
}

func (m *SCTestLogin) GetMergeServerTime() int64 {
	if m != nil && m.MergeServerTime != nil {
		return *m.MergeServerTime
	}
	return 0
}

func (m *SCTestLogin) GetActivityOpenServerTime() int64 {
	if m != nil && m.ActivityOpenServerTime != nil {
		return *m.ActivityOpenServerTime
	}
	return 0
}

func (m *SCTestLogin) GetActivityMergeServerTime() int64 {
	if m != nil && m.ActivityMergeServerTime != nil {
		return *m.ActivityMergeServerTime
	}
	return 0
}

func init() {
	proto.RegisterType((*CSLogin)(nil), "ui.CSLogin")
	proto.RegisterType((*SCLogin)(nil), "ui.SCLogin")
	proto.RegisterType((*CSTestLogin)(nil), "ui.CSTestLogin")
	proto.RegisterType((*SCTestLogin)(nil), "ui.SCTestLogin")
}

func init() { proto.RegisterFile("login.proto", fileDescriptor64) }

var fileDescriptor64 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x90, 0xd1, 0x4a, 0xc3, 0x30,
	0x18, 0x85, 0x69, 0xbb, 0x76, 0xed, 0x5f, 0x36, 0x67, 0x60, 0x5b, 0x6e, 0xd4, 0xb2, 0xab, 0x5e,
	0x09, 0x3e, 0x82, 0xf4, 0x4a, 0x71, 0x0a, 0x76, 0x78, 0x1f, 0xda, 0x9f, 0x12, 0x5c, 0x93, 0x92,
	0xa4, 0x1d, 0x3e, 0x80, 0x4f, 0xe4, 0x43, 0xf9, 0x1a, 0xd2, 0xd4, 0x32, 0x15, 0xc4, 0x3b, 0x6f,
	0xff, 0xef, 0xe4, 0xe4, 0x9c, 0x03, 0xf1, 0x5e, 0x56, 0x5c, 0x5c, 0x36, 0x4a, 0x1a, 0x49, 0xdc,
	0x96, 0x6f, 0x5e, 0x1d, 0x98, 0x66, 0xf9, 0x5d, 0x7f, 0x25, 0x33, 0xf0, 0x8d, 0x7c, 0x46, 0x41,
	0x9d, 0xc4, 0x4d, 0x23, 0xb2, 0x80, 0x50, 0xa3, 0xea, 0x50, 0xdd, 0x94, 0xd4, 0x4d, 0xdc, 0xd4,
	0xef, 0x05, 0x55, 0xcb, 0x6e, 0x39, 0xf5, 0x12, 0x27, 0x0d, 0xc9, 0x29, 0x44, 0x25, 0x76, 0xbc,
	0xc0, 0x2d, 0x2b, 0xe8, 0x24, 0x71, 0xd2, 0x88, 0x50, 0x58, 0x14, 0x7b, 0x8e, 0xc2, 0x5c, 0x37,
	0xcd, 0x13, 0x2a, 0xcd, 0xa5, 0xa0, 0xbe, 0x25, 0x67, 0xb0, 0x1c, 0xc8, 0x23, 0x6a, 0xd9, 0xaa,
	0x02, 0x47, 0x1c, 0xf4, 0x78, 0xf3, 0xee, 0xc0, 0x34, 0xcf, 0x86, 0x1c, 0x73, 0x08, 0x5a, 0x6d,
	0xbf, 0xed, 0x83, 0x78, 0x64, 0x09, 0x33, 0x85, 0x6c, 0x7f, 0xcf, 0x6a, 0xcc, 0x0d, 0x33, 0xf8,
	0x99, 0x26, 0x06, 0x4f, 0xc8, 0x03, 0xf5, 0xac, 0x66, 0x05, 0x73, 0xd9, 0xa0, 0xc8, 0x6d, 0xe0,
	0x1d, 0xaf, 0x91, 0x4e, 0xec, 0x7d, 0x0d, 0x27, 0x35, 0xaa, 0x0a, 0xbf, 0x00, 0xdf, 0x02, 0x00,
	0xb7, 0xaa, 0x69, 0x60, 0x9d, 0xce, 0x61, 0xc5, 0x0a, 0xc3, 0x3b, 0x6e, 0x5e, 0x1e, 0xbe, 0x9b,
	0x4c, 0xad, 0xf6, 0x02, 0xd6, 0x23, 0xdf, 0xfe, 0x30, 0x0b, 0xad, 0x80, 0x00, 0x70, 0xa9, 0xc7,
	0x46, 0x91, 0x2d, 0xbc, 0x82, 0x39, 0x13, 0xa5, 0x92, 0xbc, 0x1c, 0xef, 0x60, 0x9b, 0x5e, 0x41,
	0x9c, 0xe5, 0x3b, 0xd4, 0x66, 0x28, 0xbb, 0x80, 0xb0, 0x2f, 0xdb, 0x97, 0x3b, 0xee, 0xde, 0x30,
	0xad, 0x0f, 0x52, 0x0d, 0xbb, 0x47, 0x9b, 0x37, 0x07, 0xe2, 0x3c, 0x3b, 0xbe, 0xf9, 0x97, 0x81,
	0x7e, 0x1f, 0x25, 0xf8, 0x6b, 0x14, 0xbb, 0xda, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xdb,
	0x03, 0x77, 0x6c, 0x02, 0x00, 0x00,
}
