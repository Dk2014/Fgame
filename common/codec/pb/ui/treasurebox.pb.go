// Code generated by protoc-gen-go. DO NOT EDIT.
// source: treasurebox.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TreasureBoxLog struct {
	ServerId         *int32      `protobuf:"varint,1,req,name=serverId" json:"serverId,omitempty"`
	PlayerName       *string     `protobuf:"bytes,2,req,name=playerName" json:"playerName,omitempty"`
	LastTime         *int64      `protobuf:"varint,3,req,name=lastTime" json:"lastTime,omitempty"`
	ItemList         []*ItemInfo `protobuf:"bytes,4,rep,name=itemList" json:"itemList,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *TreasureBoxLog) Reset()                    { *m = TreasureBoxLog{} }
func (m *TreasureBoxLog) String() string            { return proto.CompactTextString(m) }
func (*TreasureBoxLog) ProtoMessage()               {}
func (*TreasureBoxLog) Descriptor() ([]byte, []int) { return fileDescriptor120, []int{0} }

func (m *TreasureBoxLog) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *TreasureBoxLog) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *TreasureBoxLog) GetLastTime() int64 {
	if m != nil && m.LastTime != nil {
		return *m.LastTime
	}
	return 0
}

func (m *TreasureBoxLog) GetItemList() []*ItemInfo {
	if m != nil {
		return m.ItemList
	}
	return nil
}

type CSTreasureBoxLog struct {
	LogTime          *int64 `protobuf:"varint,1,req,name=logTime" json:"logTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSTreasureBoxLog) Reset()                    { *m = CSTreasureBoxLog{} }
func (m *CSTreasureBoxLog) String() string            { return proto.CompactTextString(m) }
func (*CSTreasureBoxLog) ProtoMessage()               {}
func (*CSTreasureBoxLog) Descriptor() ([]byte, []int) { return fileDescriptor120, []int{1} }

func (m *CSTreasureBoxLog) GetLogTime() int64 {
	if m != nil && m.LogTime != nil {
		return *m.LogTime
	}
	return 0
}

type SCTreasureBoxLog struct {
	BoxLogList       []*TreasureBoxLog `protobuf:"bytes,1,rep,name=boxLogList" json:"boxLogList,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCTreasureBoxLog) Reset()                    { *m = SCTreasureBoxLog{} }
func (m *SCTreasureBoxLog) String() string            { return proto.CompactTextString(m) }
func (*SCTreasureBoxLog) ProtoMessage()               {}
func (*SCTreasureBoxLog) Descriptor() ([]byte, []int) { return fileDescriptor120, []int{2} }

func (m *SCTreasureBoxLog) GetBoxLogList() []*TreasureBoxLog {
	if m != nil {
		return m.BoxLogList
	}
	return nil
}

func init() {
	proto.RegisterType((*TreasureBoxLog)(nil), "ui.TreasureBoxLog")
	proto.RegisterType((*CSTreasureBoxLog)(nil), "ui.CSTreasureBoxLog")
	proto.RegisterType((*SCTreasureBoxLog)(nil), "ui.SCTreasureBoxLog")
}

func init() { proto.RegisterFile("treasurebox.proto", fileDescriptor120) }

var fileDescriptor120 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xcd, 0xb1, 0x4b, 0xc4, 0x30,
	0x14, 0xc7, 0x71, 0x9a, 0x28, 0xd6, 0xa7, 0x68, 0xcd, 0x14, 0x1c, 0x24, 0x54, 0x90, 0x4c, 0x1d,
	0x1c, 0x1d, 0xed, 0x54, 0x28, 0x2e, 0xed, 0x3f, 0x90, 0xe2, 0xbb, 0x5e, 0xa0, 0xb9, 0x94, 0x24,
	0x3d, 0x7a, 0xff, 0xfd, 0x91, 0xdc, 0x2d, 0xd7, 0xed, 0x3d, 0xf8, 0xf2, 0xf9, 0xc1, 0x5b, 0x70,
	0xa8, 0xfc, 0xe2, 0x70, 0xb0, 0x6b, 0x35, 0x3b, 0x1b, 0x2c, 0x23, 0x8b, 0x7e, 0x07, 0x1d, 0xd0,
	0x5c, 0xfe, 0x72, 0x0f, 0x2f, 0xfd, 0x35, 0xfa, 0xb5, 0x6b, 0x6b, 0x47, 0x56, 0x40, 0xee, 0xd1,
	0x1d, 0xd1, 0x35, 0xff, 0x3c, 0x13, 0x44, 0xde, 0x33, 0x06, 0x30, 0x4f, 0xea, 0x84, 0xee, 0x4f,
	0x19, 0xe4, 0x44, 0x10, 0xf9, 0x18, 0xab, 0x49, 0xf9, 0xd0, 0x6b, 0x83, 0x9c, 0x0a, 0x22, 0x29,
	0xfb, 0x80, 0x3c, 0xba, 0xad, 0xf6, 0x81, 0xdf, 0x09, 0x2a, 0x9f, 0xbe, 0x9f, 0xab, 0x45, 0x57,
	0x4d, 0x40, 0xd3, 0x1c, 0x76, 0xb6, 0xfc, 0x84, 0xa2, 0xee, 0x36, 0x5b, 0xaf, 0xf0, 0x30, 0xd9,
	0x31, 0x21, 0x71, 0x8a, 0x96, 0x3f, 0x50, 0x74, 0xf5, 0x26, 0xfa, 0x02, 0x18, 0xd2, 0x95, 0xe8,
	0x2c, 0xd1, 0x2c, 0xd2, 0xb7, 0xdd, 0x39, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x49, 0xa3, 0x7e, 0xee,
	0x00, 0x00, 0x00,
}
