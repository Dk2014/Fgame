// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reddot.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RedDotInfo struct {
	GroupId          *int32 `protobuf:"varint,1,req,name=groupId" json:"groupId,omitempty"`
	IsReddot         *bool  `protobuf:"varint,2,req,name=isReddot" json:"isReddot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RedDotInfo) Reset()                    { *m = RedDotInfo{} }
func (m *RedDotInfo) String() string            { return proto.CompactTextString(m) }
func (*RedDotInfo) ProtoMessage()               {}
func (*RedDotInfo) Descriptor() ([]byte, []int) { return fileDescriptor87, []int{0} }

func (m *RedDotInfo) GetGroupId() int32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *RedDotInfo) GetIsReddot() bool {
	if m != nil && m.IsReddot != nil {
		return *m.IsReddot
	}
	return false
}

type SCActivityNotice struct {
	InfoList         []*RedDotInfo `protobuf:"bytes,1,rep,name=infoList" json:"infoList,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SCActivityNotice) Reset()                    { *m = SCActivityNotice{} }
func (m *SCActivityNotice) String() string            { return proto.CompactTextString(m) }
func (*SCActivityNotice) ProtoMessage()               {}
func (*SCActivityNotice) Descriptor() ([]byte, []int) { return fileDescriptor87, []int{1} }

func (m *SCActivityNotice) GetInfoList() []*RedDotInfo {
	if m != nil {
		return m.InfoList
	}
	return nil
}

type ReceiveRecord struct {
	RecordList       []int32 `protobuf:"varint,1,rep,name=recordList" json:"recordList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ReceiveRecord) Reset()                    { *m = ReceiveRecord{} }
func (m *ReceiveRecord) String() string            { return proto.CompactTextString(m) }
func (*ReceiveRecord) ProtoMessage()               {}
func (*ReceiveRecord) Descriptor() ([]byte, []int) { return fileDescriptor87, []int{2} }

func (m *ReceiveRecord) GetRecordList() []int32 {
	if m != nil {
		return m.RecordList
	}
	return nil
}

type SCActivityDataNotice struct {
	GroupId          *int32         `protobuf:"varint,1,req,name=groupId" json:"groupId,omitempty"`
	Record           *ReceiveRecord `protobuf:"bytes,2,opt,name=record" json:"record,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SCActivityDataNotice) Reset()                    { *m = SCActivityDataNotice{} }
func (m *SCActivityDataNotice) String() string            { return proto.CompactTextString(m) }
func (*SCActivityDataNotice) ProtoMessage()               {}
func (*SCActivityDataNotice) Descriptor() ([]byte, []int) { return fileDescriptor87, []int{3} }

func (m *SCActivityDataNotice) GetGroupId() int32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *SCActivityDataNotice) GetRecord() *ReceiveRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

func init() {
	proto.RegisterType((*RedDotInfo)(nil), "ui.RedDotInfo")
	proto.RegisterType((*SCActivityNotice)(nil), "ui.SCActivityNotice")
	proto.RegisterType((*ReceiveRecord)(nil), "ui.ReceiveRecord")
	proto.RegisterType((*SCActivityDataNotice)(nil), "ui.SCActivityDataNotice")
}

func init() { proto.RegisterFile("reddot.proto", fileDescriptor87) }

var fileDescriptor87 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0xce, 0x3f, 0x4b, 0xc6, 0x30,
	0x10, 0xc7, 0x71, 0x1a, 0xa9, 0x96, 0xab, 0x7f, 0x6a, 0x70, 0xc8, 0x18, 0xe3, 0x92, 0xa9, 0x42,
	0xf1, 0x0d, 0x88, 0x5d, 0x2a, 0xe2, 0x10, 0x5f, 0x41, 0x49, 0x52, 0xb9, 0xa5, 0x57, 0xd2, 0x6b,
	0xc1, 0x77, 0x2f, 0xb4, 0x62, 0x1f, 0x78, 0xb6, 0x5b, 0xbe, 0x9f, 0xfb, 0xc1, 0x75, 0x8a, 0x21,
	0x10, 0xd7, 0x53, 0x22, 0x26, 0x29, 0x16, 0x34, 0xcf, 0x00, 0x2e, 0x86, 0x96, 0xb8, 0x1b, 0x07,
	0x92, 0x77, 0x70, 0xf5, 0x9d, 0x68, 0x99, 0xba, 0xa0, 0x32, 0x2d, 0x6c, 0x2e, 0x2b, 0x28, 0x70,
	0x76, 0x5b, 0xa4, 0x84, 0x16, 0xb6, 0x30, 0x2f, 0x50, 0x7d, 0xbd, 0xbd, 0x7a, 0xc6, 0x15, 0xf9,
	0xe7, 0x93, 0x18, 0x7d, 0x94, 0x1a, 0x0a, 0x1c, 0x07, 0xfa, 0xc0, 0x99, 0x55, 0xa6, 0x2f, 0x6c,
	0xd9, 0xdc, 0xd6, 0x0b, 0xd6, 0x07, 0x6c, 0x9e, 0xe0, 0xc6, 0x45, 0x1f, 0x71, 0x8d, 0x2e, 0x7a,
	0x4a, 0x41, 0x4a, 0x80, 0xb4, 0x5d, 0xff, 0x51, 0x6e, 0xde, 0xe1, 0xe1, 0xa0, 0xdb, 0x9e, 0xfb,
	0x3f, 0xfe, 0x6c, 0xd5, 0x23, 0x5c, 0xee, 0xb1, 0x12, 0x3a, 0xb3, 0x65, 0x73, 0xbf, 0x7f, 0x3b,
	0xf1, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x5f, 0xa4, 0x2f, 0xea, 0x00, 0x00, 0x00,
}
