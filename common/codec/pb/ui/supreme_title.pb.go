// Code generated by protoc-gen-go. DO NOT EDIT.
// source: supreme_title.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CSSupremeTitleGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSSupremeTitleGet) Reset()                    { *m = CSSupremeTitleGet{} }
func (m *CSSupremeTitleGet) String() string            { return proto.CompactTextString(m) }
func (*CSSupremeTitleGet) ProtoMessage()               {}
func (*CSSupremeTitleGet) Descriptor() ([]byte, []int) { return fileDescriptor109, []int{0} }

type SCSupremeTitleGet struct {
	TitleWear        *int32  `protobuf:"varint,1,req,name=titleWear" json:"titleWear,omitempty"`
	TitleList        []int32 `protobuf:"varint,2,rep,name=titleList" json:"titleList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCSupremeTitleGet) Reset()                    { *m = SCSupremeTitleGet{} }
func (m *SCSupremeTitleGet) String() string            { return proto.CompactTextString(m) }
func (*SCSupremeTitleGet) ProtoMessage()               {}
func (*SCSupremeTitleGet) Descriptor() ([]byte, []int) { return fileDescriptor109, []int{1} }

func (m *SCSupremeTitleGet) GetTitleWear() int32 {
	if m != nil && m.TitleWear != nil {
		return *m.TitleWear
	}
	return 0
}

func (m *SCSupremeTitleGet) GetTitleList() []int32 {
	if m != nil {
		return m.TitleList
	}
	return nil
}

type CSSupremeTitleActive struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSSupremeTitleActive) Reset()                    { *m = CSSupremeTitleActive{} }
func (m *CSSupremeTitleActive) String() string            { return proto.CompactTextString(m) }
func (*CSSupremeTitleActive) ProtoMessage()               {}
func (*CSSupremeTitleActive) Descriptor() ([]byte, []int) { return fileDescriptor109, []int{2} }

func (m *CSSupremeTitleActive) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type SCSupremeTitleActive struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCSupremeTitleActive) Reset()                    { *m = SCSupremeTitleActive{} }
func (m *SCSupremeTitleActive) String() string            { return proto.CompactTextString(m) }
func (*SCSupremeTitleActive) ProtoMessage()               {}
func (*SCSupremeTitleActive) Descriptor() ([]byte, []int) { return fileDescriptor109, []int{3} }

func (m *SCSupremeTitleActive) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type CSSupremeTitleWear struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSSupremeTitleWear) Reset()                    { *m = CSSupremeTitleWear{} }
func (m *CSSupremeTitleWear) String() string            { return proto.CompactTextString(m) }
func (*CSSupremeTitleWear) ProtoMessage()               {}
func (*CSSupremeTitleWear) Descriptor() ([]byte, []int) { return fileDescriptor109, []int{4} }

func (m *CSSupremeTitleWear) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type SCSupremeTitleWear struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCSupremeTitleWear) Reset()                    { *m = SCSupremeTitleWear{} }
func (m *SCSupremeTitleWear) String() string            { return proto.CompactTextString(m) }
func (*SCSupremeTitleWear) ProtoMessage()               {}
func (*SCSupremeTitleWear) Descriptor() ([]byte, []int) { return fileDescriptor109, []int{5} }

func (m *SCSupremeTitleWear) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type CSSupremeTitleUnLoad struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSSupremeTitleUnLoad) Reset()                    { *m = CSSupremeTitleUnLoad{} }
func (m *CSSupremeTitleUnLoad) String() string            { return proto.CompactTextString(m) }
func (*CSSupremeTitleUnLoad) ProtoMessage()               {}
func (*CSSupremeTitleUnLoad) Descriptor() ([]byte, []int) { return fileDescriptor109, []int{6} }

type SCSupremeTitleUnLoad struct {
	TitleWear        *int32 `protobuf:"varint,1,req,name=titleWear" json:"titleWear,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCSupremeTitleUnLoad) Reset()                    { *m = SCSupremeTitleUnLoad{} }
func (m *SCSupremeTitleUnLoad) String() string            { return proto.CompactTextString(m) }
func (*SCSupremeTitleUnLoad) ProtoMessage()               {}
func (*SCSupremeTitleUnLoad) Descriptor() ([]byte, []int) { return fileDescriptor109, []int{7} }

func (m *SCSupremeTitleUnLoad) GetTitleWear() int32 {
	if m != nil && m.TitleWear != nil {
		return *m.TitleWear
	}
	return 0
}

func init() {
	proto.RegisterType((*CSSupremeTitleGet)(nil), "ui.CSSupremeTitleGet")
	proto.RegisterType((*SCSupremeTitleGet)(nil), "ui.SCSupremeTitleGet")
	proto.RegisterType((*CSSupremeTitleActive)(nil), "ui.CSSupremeTitleActive")
	proto.RegisterType((*SCSupremeTitleActive)(nil), "ui.SCSupremeTitleActive")
	proto.RegisterType((*CSSupremeTitleWear)(nil), "ui.CSSupremeTitleWear")
	proto.RegisterType((*SCSupremeTitleWear)(nil), "ui.SCSupremeTitleWear")
	proto.RegisterType((*CSSupremeTitleUnLoad)(nil), "ui.CSSupremeTitleUnLoad")
	proto.RegisterType((*SCSupremeTitleUnLoad)(nil), "ui.SCSupremeTitleUnLoad")
}

func init() { proto.RegisterFile("supreme_title.proto", fileDescriptor109) }

var fileDescriptor109 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x2e, 0x2d, 0x28,
	0x4a, 0xcd, 0x4d, 0x8d, 0x2f, 0xc9, 0x2c, 0xc9, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x2a, 0xcd, 0x54, 0x12, 0xe6, 0x12, 0x74, 0x0e, 0x0e, 0x86, 0x48, 0x86, 0x80, 0xe4, 0xdc,
	0x53, 0x4b, 0x94, 0x2c, 0xb9, 0x04, 0x83, 0x9d, 0xd1, 0x04, 0x85, 0x04, 0xb9, 0x38, 0xc1, 0x9a,
	0xc3, 0x53, 0x13, 0x8b, 0x24, 0x18, 0x15, 0x98, 0x34, 0x58, 0xe1, 0x42, 0x3e, 0x99, 0xc5, 0x25,
	0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0xac, 0x4a, 0xea, 0x5c, 0x22, 0xa8, 0xe6, 0x39, 0x26, 0x97, 0x64,
	0x96, 0xa5, 0x0a, 0xf1, 0x73, 0xb1, 0x83, 0x95, 0x7a, 0xa6, 0x40, 0xf4, 0x82, 0x14, 0xa2, 0xda,
	0x81, 0x4b, 0xa1, 0x2a, 0x97, 0x10, 0xaa, 0x89, 0x20, 0x07, 0x60, 0x55, 0x86, 0x6a, 0x1e, 0x76,
	0x65, 0x62, 0xe8, 0xee, 0x0b, 0xcd, 0xf3, 0xc9, 0x4f, 0x4c, 0x51, 0xd2, 0x44, 0x77, 0x0e, 0x44,
	0x1c, 0x8b, 0xaf, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x4f, 0x58, 0x6c, 0x4c, 0x01, 0x00,
	0x00,
}
