// Code generated by protoc-gen-go. DO NOT EDIT.
// source: arenapvp.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	arenapvp.proto

It has these top-level messages:
	BattleResult
	ArenapvpBattlePlayer
	GuessData
	BaZhuData
	ElectionData
	ArenapvpData
	ArenapvpRequest
	ArenapvpResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BattleResult struct {
	PvpType   int32 `protobuf:"varint,1,opt,name=pvpType" json:"pvpType,omitempty"`
	WinnerId  int64 `protobuf:"varint,2,opt,name=winnerId" json:"winnerId,omitempty"`
	BattleId1 int64 `protobuf:"varint,3,opt,name=battleId1" json:"battleId1,omitempty"`
	BattleId2 int64 `protobuf:"varint,4,opt,name=battleId2" json:"battleId2,omitempty"`
	Index     int32 `protobuf:"varint,5,opt,name=index" json:"index,omitempty"`
}

func (m *BattleResult) Reset()                    { *m = BattleResult{} }
func (m *BattleResult) String() string            { return proto.CompactTextString(m) }
func (*BattleResult) ProtoMessage()               {}
func (*BattleResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BattleResult) GetPvpType() int32 {
	if m != nil {
		return m.PvpType
	}
	return 0
}

func (m *BattleResult) GetWinnerId() int64 {
	if m != nil {
		return m.WinnerId
	}
	return 0
}

func (m *BattleResult) GetBattleId1() int64 {
	if m != nil {
		return m.BattleId1
	}
	return 0
}

func (m *BattleResult) GetBattleId2() int64 {
	if m != nil {
		return m.BattleId2
	}
	return 0
}

func (m *BattleResult) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ArenapvpBattlePlayer struct {
	ServerId    int32           `protobuf:"varint,1,opt,name=serverId" json:"serverId,omitempty"`
	PlayerId    int64           `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
	PlayerName  string          `protobuf:"bytes,3,opt,name=playerName" json:"playerName,omitempty"`
	Platform    int32           `protobuf:"varint,4,opt,name=platform" json:"platform,omitempty"`
	Sex         int32           `protobuf:"varint,5,opt,name=sex" json:"sex,omitempty"`
	Role        int32           `protobuf:"varint,6,opt,name=role" json:"role,omitempty"`
	ResultList  []*BattleResult `protobuf:"bytes,7,rep,name=resultList" json:"resultList,omitempty"`
	WingId      int32           `protobuf:"varint,8,opt,name=wingId" json:"wingId,omitempty"`
	WeaponId    int32           `protobuf:"varint,9,opt,name=weaponId" json:"weaponId,omitempty"`
	FashionId   int32           `protobuf:"varint,10,opt,name=fashionId" json:"fashionId,omitempty"`
	WeaponState int32           `protobuf:"varint,11,opt,name=weaponState" json:"weaponState,omitempty"`
	XianTiId    int32           `protobuf:"varint,12,opt,name=xianTiId" json:"xianTiId,omitempty"`
	LingYuId    int32           `protobuf:"varint,13,opt,name=lingYuId" json:"lingYuId,omitempty"`
	FaBaoId     int32           `protobuf:"varint,14,opt,name=faBaoId" json:"faBaoId,omitempty"`
}

func (m *ArenapvpBattlePlayer) Reset()                    { *m = ArenapvpBattlePlayer{} }
func (m *ArenapvpBattlePlayer) String() string            { return proto.CompactTextString(m) }
func (*ArenapvpBattlePlayer) ProtoMessage()               {}
func (*ArenapvpBattlePlayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ArenapvpBattlePlayer) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetPlayerId() int64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *ArenapvpBattlePlayer) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetResultList() []*BattleResult {
	if m != nil {
		return m.ResultList
	}
	return nil
}

func (m *ArenapvpBattlePlayer) GetWingId() int32 {
	if m != nil {
		return m.WingId
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetWeaponId() int32 {
	if m != nil {
		return m.WeaponId
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetFashionId() int32 {
	if m != nil {
		return m.FashionId
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetWeaponState() int32 {
	if m != nil {
		return m.WeaponState
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetXianTiId() int32 {
	if m != nil {
		return m.XianTiId
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetLingYuId() int32 {
	if m != nil {
		return m.LingYuId
	}
	return 0
}

func (m *ArenapvpBattlePlayer) GetFaBaoId() int32 {
	if m != nil {
		return m.FaBaoId
	}
	return 0
}

type GuessData struct {
	PvpType    int32                   `protobuf:"varint,1,opt,name=pvpType" json:"pvpType,omitempty"`
	RaceNumber int32                   `protobuf:"varint,2,opt,name=raceNumber" json:"raceNumber,omitempty"`
	PlayerList []*ArenapvpBattlePlayer `protobuf:"bytes,3,rep,name=playerList" json:"playerList,omitempty"`
}

func (m *GuessData) Reset()                    { *m = GuessData{} }
func (m *GuessData) String() string            { return proto.CompactTextString(m) }
func (*GuessData) ProtoMessage()               {}
func (*GuessData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GuessData) GetPvpType() int32 {
	if m != nil {
		return m.PvpType
	}
	return 0
}

func (m *GuessData) GetRaceNumber() int32 {
	if m != nil {
		return m.RaceNumber
	}
	return 0
}

func (m *GuessData) GetPlayerList() []*ArenapvpBattlePlayer {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

type BaZhuData struct {
	ServerId   int32  `protobuf:"varint,1,opt,name=serverId" json:"serverId,omitempty"`
	PlayerId   int64  `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
	PlayerName string `protobuf:"bytes,3,opt,name=playerName" json:"playerName,omitempty"`
	Platform   int32  `protobuf:"varint,4,opt,name=platform" json:"platform,omitempty"`
	Sex        int32  `protobuf:"varint,5,opt,name=sex" json:"sex,omitempty"`
	Role       int32  `protobuf:"varint,6,opt,name=role" json:"role,omitempty"`
	RaceNumber int32  `protobuf:"varint,7,opt,name=raceNumber" json:"raceNumber,omitempty"`
	WeaponId   int32  `protobuf:"varint,8,opt,name=weaponId" json:"weaponId,omitempty"`
	WingId     int32  `protobuf:"varint,9,opt,name=wingId" json:"wingId,omitempty"`
	FashionId  int32  `protobuf:"varint,10,opt,name=fashionId" json:"fashionId,omitempty"`
}

func (m *BaZhuData) Reset()                    { *m = BaZhuData{} }
func (m *BaZhuData) String() string            { return proto.CompactTextString(m) }
func (*BaZhuData) ProtoMessage()               {}
func (*BaZhuData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BaZhuData) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *BaZhuData) GetPlayerId() int64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *BaZhuData) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *BaZhuData) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *BaZhuData) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *BaZhuData) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *BaZhuData) GetRaceNumber() int32 {
	if m != nil {
		return m.RaceNumber
	}
	return 0
}

func (m *BaZhuData) GetWeaponId() int32 {
	if m != nil {
		return m.WeaponId
	}
	return 0
}

func (m *BaZhuData) GetWingId() int32 {
	if m != nil {
		return m.WingId
	}
	return 0
}

func (m *BaZhuData) GetFashionId() int32 {
	if m != nil {
		return m.FashionId
	}
	return 0
}

// 海选会场信息
type ElectionData struct {
	ElectionIndex int32  `protobuf:"varint,1,opt,name=electionIndex" json:"electionIndex,omitempty"`
	PlNumber      int32  `protobuf:"varint,2,opt,name=plNumber" json:"plNumber,omitempty"`
	LastLuckyTime int64  `protobuf:"varint,3,opt,name=lastLuckyTime" json:"lastLuckyTime,omitempty"`
	LuckyNameText string `protobuf:"bytes,4,opt,name=luckyNameText" json:"luckyNameText,omitempty"`
}

func (m *ElectionData) Reset()                    { *m = ElectionData{} }
func (m *ElectionData) String() string            { return proto.CompactTextString(m) }
func (*ElectionData) ProtoMessage()               {}
func (*ElectionData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ElectionData) GetElectionIndex() int32 {
	if m != nil {
		return m.ElectionIndex
	}
	return 0
}

func (m *ElectionData) GetPlNumber() int32 {
	if m != nil {
		return m.PlNumber
	}
	return 0
}

func (m *ElectionData) GetLastLuckyTime() int64 {
	if m != nil {
		return m.LastLuckyTime
	}
	return 0
}

func (m *ElectionData) GetLuckyNameText() string {
	if m != nil {
		return m.LuckyNameText
	}
	return ""
}

type ArenapvpData struct {
	// 历届霸主
	BaZhuList []*BaZhuData `protobuf:"bytes,1,rep,name=baZhuList" json:"baZhuList,omitempty"`
	// pvp赛程
	PlayerList []*ArenapvpBattlePlayer `protobuf:"bytes,2,rep,name=playerList" json:"playerList,omitempty"`
	// 当前竞猜
	GuessDataList []*GuessData `protobuf:"bytes,3,rep,name=guessDataList" json:"guessDataList,omitempty"`
	// 海选会场信息
	ElectionDataList []*ElectionData `protobuf:"bytes,4,rep,name=electionDataList" json:"electionDataList,omitempty"`
}

func (m *ArenapvpData) Reset()                    { *m = ArenapvpData{} }
func (m *ArenapvpData) String() string            { return proto.CompactTextString(m) }
func (*ArenapvpData) ProtoMessage()               {}
func (*ArenapvpData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ArenapvpData) GetBaZhuList() []*BaZhuData {
	if m != nil {
		return m.BaZhuList
	}
	return nil
}

func (m *ArenapvpData) GetPlayerList() []*ArenapvpBattlePlayer {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

func (m *ArenapvpData) GetGuessDataList() []*GuessData {
	if m != nil {
		return m.GuessDataList
	}
	return nil
}

func (m *ArenapvpData) GetElectionDataList() []*ElectionData {
	if m != nil {
		return m.ElectionDataList
	}
	return nil
}

type ArenapvpRequest struct {
}

func (m *ArenapvpRequest) Reset()                    { *m = ArenapvpRequest{} }
func (m *ArenapvpRequest) String() string            { return proto.CompactTextString(m) }
func (*ArenapvpRequest) ProtoMessage()               {}
func (*ArenapvpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ArenapvpResponse struct {
	ArenapvpData *ArenapvpData `protobuf:"bytes,1,opt,name=arenapvpData" json:"arenapvpData,omitempty"`
}

func (m *ArenapvpResponse) Reset()                    { *m = ArenapvpResponse{} }
func (m *ArenapvpResponse) String() string            { return proto.CompactTextString(m) }
func (*ArenapvpResponse) ProtoMessage()               {}
func (*ArenapvpResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ArenapvpResponse) GetArenapvpData() *ArenapvpData {
	if m != nil {
		return m.ArenapvpData
	}
	return nil
}

func init() {
	proto.RegisterType((*BattleResult)(nil), "pb.BattleResult")
	proto.RegisterType((*ArenapvpBattlePlayer)(nil), "pb.ArenapvpBattlePlayer")
	proto.RegisterType((*GuessData)(nil), "pb.GuessData")
	proto.RegisterType((*BaZhuData)(nil), "pb.BaZhuData")
	proto.RegisterType((*ElectionData)(nil), "pb.ElectionData")
	proto.RegisterType((*ArenapvpData)(nil), "pb.ArenapvpData")
	proto.RegisterType((*ArenapvpRequest)(nil), "pb.ArenapvpRequest")
	proto.RegisterType((*ArenapvpResponse)(nil), "pb.ArenapvpResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Arenapvp service

type ArenapvpClient interface {
	// 获取
	GetArenapvpData(ctx context.Context, in *ArenapvpRequest, opts ...grpc.CallOption) (*ArenapvpResponse, error)
}

type arenapvpClient struct {
	cc *grpc.ClientConn
}

func NewArenapvpClient(cc *grpc.ClientConn) ArenapvpClient {
	return &arenapvpClient{cc}
}

func (c *arenapvpClient) GetArenapvpData(ctx context.Context, in *ArenapvpRequest, opts ...grpc.CallOption) (*ArenapvpResponse, error) {
	out := new(ArenapvpResponse)
	err := grpc.Invoke(ctx, "/pb.Arenapvp/GetArenapvpData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Arenapvp service

type ArenapvpServer interface {
	// 获取
	GetArenapvpData(context.Context, *ArenapvpRequest) (*ArenapvpResponse, error)
}

func RegisterArenapvpServer(s *grpc.Server, srv ArenapvpServer) {
	s.RegisterService(&_Arenapvp_serviceDesc, srv)
}

func _Arenapvp_GetArenapvpData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArenapvpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArenapvpServer).GetArenapvpData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Arenapvp/GetArenapvpData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArenapvpServer).GetArenapvpData(ctx, req.(*ArenapvpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Arenapvp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Arenapvp",
	HandlerType: (*ArenapvpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetArenapvpData",
			Handler:    _Arenapvp_GetArenapvpData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "arenapvp.proto",
}

func init() { proto.RegisterFile("arenapvp.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 623 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xfd, 0x1c, 0x37, 0x6d, 0x7c, 0x9b, 0xb4, 0xf9, 0x86, 0x0a, 0x8d, 0x2a, 0x54, 0x45, 0x16,
	0x8b, 0x48, 0x48, 0x11, 0xa4, 0x2c, 0x58, 0x20, 0x24, 0x22, 0x50, 0x31, 0xaa, 0x2a, 0x34, 0x64,
	0x43, 0x77, 0x93, 0x78, 0x92, 0x58, 0x38, 0xb6, 0xb1, 0xc7, 0x69, 0xb2, 0xe2, 0x2d, 0x60, 0xc3,
	0x03, 0xf0, 0x68, 0x3c, 0x06, 0x9a, 0x3b, 0xfe, 0x19, 0xb7, 0xa8, 0x62, 0xc9, 0x6e, 0xce, 0x3d,
	0x77, 0x66, 0x4e, 0xce, 0x3d, 0x13, 0xc3, 0x11, 0x4f, 0x45, 0xc4, 0x93, 0x4d, 0x32, 0x4a, 0xd2,
	0x58, 0xc6, 0xa4, 0x95, 0xcc, 0xdc, 0x6f, 0x16, 0x74, 0x27, 0x5c, 0xca, 0x50, 0x30, 0x91, 0xe5,
	0xa1, 0x24, 0x14, 0x0e, 0x92, 0x4d, 0x32, 0xdd, 0x25, 0x82, 0x5a, 0x03, 0x6b, 0xd8, 0x66, 0x25,
	0x24, 0xa7, 0xd0, 0xb9, 0x09, 0xa2, 0x48, 0xa4, 0x9e, 0x4f, 0x5b, 0x03, 0x6b, 0x68, 0xb3, 0x0a,
	0x93, 0x47, 0xe0, 0xcc, 0xf0, 0x14, 0xcf, 0x7f, 0x46, 0x6d, 0x24, 0xeb, 0x82, 0xc9, 0x8e, 0xe9,
	0x5e, 0x93, 0x1d, 0x93, 0x13, 0x68, 0x07, 0x91, 0x2f, 0xb6, 0xb4, 0x8d, 0xf7, 0x69, 0xe0, 0xfe,
	0xb4, 0xe1, 0xe4, 0x75, 0xa1, 0x57, 0x0b, 0xfc, 0x10, 0xf2, 0x9d, 0x48, 0x95, 0x8c, 0x4c, 0xa4,
	0x1b, 0x94, 0xa1, 0x15, 0x56, 0x58, 0x71, 0x09, 0x76, 0xd5, 0x12, 0x4b, 0x4c, 0xce, 0x00, 0xf4,
	0xfa, 0x8a, 0xaf, 0x05, 0x6a, 0x74, 0x98, 0x51, 0x29, 0xf6, 0xca, 0x45, 0x9c, 0xae, 0x51, 0x63,
	0x9b, 0x55, 0x98, 0xf4, 0xc1, 0xce, 0x2a, 0x81, 0x6a, 0x49, 0x08, 0xec, 0xa5, 0x71, 0x28, 0xe8,
	0x3e, 0x96, 0x70, 0x4d, 0x9e, 0x02, 0xa4, 0x68, 0xe2, 0x65, 0x90, 0x49, 0x7a, 0x30, 0xb0, 0x87,
	0x87, 0xe3, 0xfe, 0x28, 0x99, 0x8d, 0x4c, 0x83, 0x99, 0xd1, 0x43, 0x1e, 0xc2, 0xfe, 0x4d, 0x10,
	0x2d, 0x3d, 0x9f, 0x76, 0xf0, 0x9c, 0x02, 0xa1, 0xd5, 0x82, 0x27, 0x71, 0xe4, 0xf9, 0xd4, 0xd1,
	0x5a, 0x4a, 0xac, 0xcc, 0x5c, 0xf0, 0x6c, 0x15, 0x20, 0x09, 0x48, 0xd6, 0x05, 0x32, 0x80, 0x43,
	0xdd, 0xf9, 0x51, 0x72, 0x29, 0xe8, 0x21, 0xf2, 0x66, 0x49, 0x9d, 0xbd, 0x0d, 0x78, 0x34, 0x0d,
	0x3c, 0x9f, 0x76, 0xf5, 0xd9, 0x25, 0x56, 0x5c, 0x18, 0x44, 0xcb, 0x4f, 0xb9, 0xe7, 0xd3, 0x9e,
	0xe6, 0x4a, 0xac, 0x82, 0xb1, 0xe0, 0x13, 0x1e, 0x7b, 0x3e, 0x3d, 0xd2, 0xc1, 0x28, 0xa0, 0xfb,
	0x15, 0x9c, 0x8b, 0x5c, 0x64, 0xd9, 0x1b, 0x2e, 0xf9, 0x3d, 0xf9, 0x39, 0x03, 0x48, 0xf9, 0x5c,
	0x5c, 0xe5, 0xeb, 0x99, 0x48, 0x71, 0x3c, 0x6d, 0x66, 0x54, 0xc8, 0x8b, 0x72, 0x40, 0x68, 0x9f,
	0x8d, 0xf6, 0x51, 0x65, 0xdf, 0x9f, 0x62, 0xc0, 0x8c, 0x5e, 0xf7, 0x7b, 0x0b, 0x9c, 0x09, 0xbf,
	0x5e, 0xe5, 0xa8, 0xe0, 0xdf, 0x0d, 0x48, 0xd3, 0x81, 0x83, 0x3b, 0x0e, 0x98, 0x63, 0xef, 0xdc,
	0x1a, 0x7b, 0x1d, 0x15, 0xa7, 0x11, 0x95, 0x7b, 0xe3, 0xe0, 0xfe, 0xb0, 0xa0, 0xfb, 0x36, 0x14,
	0x73, 0x19, 0xc4, 0x11, 0x9a, 0xf3, 0x18, 0x7a, 0xa2, 0xc0, 0x1e, 0x3e, 0x3a, 0xed, 0x50, 0xb3,
	0xa8, 0x7f, 0x6a, 0x63, 0x50, 0x15, 0x56, 0x27, 0x84, 0x3c, 0x93, 0x97, 0xf9, 0xfc, 0xf3, 0x6e,
	0x1a, 0x14, 0x4e, 0xd9, 0xac, 0x59, 0xc4, 0x2e, 0x05, 0x94, 0x73, 0x53, 0xb1, 0x95, 0xe8, 0x98,
	0xc3, 0x9a, 0x45, 0xf7, 0x97, 0x05, 0xdd, 0x72, 0xba, 0x28, 0xef, 0x89, 0xfa, 0xa7, 0xb8, 0x5e,
	0xe5, 0x18, 0x01, 0x0b, 0x23, 0xd0, 0xd3, 0x2f, 0xa8, 0x98, 0x2e, 0xab, 0xf9, 0x5b, 0x81, 0x69,
	0xfd, 0x7d, 0x60, 0xc8, 0x39, 0xf4, 0x96, 0x65, 0x62, 0x8d, 0xb4, 0xe1, 0x55, 0x55, 0x94, 0x59,
	0xb3, 0x87, 0xbc, 0x84, 0xbe, 0x30, 0xac, 0xc4, 0x7d, 0x7b, 0xf5, 0x23, 0x37, 0x6d, 0x66, 0x77,
	0x3a, 0xdd, 0xff, 0xe1, 0xb8, 0x94, 0xc5, 0xc4, 0x97, 0x5c, 0x64, 0xd2, 0x7d, 0x07, 0xfd, 0xba,
	0x94, 0x25, 0x71, 0x94, 0x09, 0xf2, 0x1c, 0xba, 0xdc, 0x30, 0x04, 0xc7, 0x53, 0x5c, 0x60, 0x1a,
	0xc5, 0x1a, 0x5d, 0xe3, 0xf7, 0xd0, 0x29, 0x59, 0xf2, 0x0a, 0x8e, 0x2f, 0x84, 0x6c, 0xb8, 0xfa,
	0xc0, 0xdc, 0x5e, 0xdc, 0x7e, 0x7a, 0xd2, 0x2c, 0xea, 0xfb, 0xdd, 0xff, 0x66, 0xfb, 0xf8, 0x71,
	0x38, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x98, 0x9b, 0x29, 0xc7, 0x2e, 0x06, 0x00, 0x00,
}
