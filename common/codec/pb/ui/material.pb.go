// Code generated by protoc-gen-go. DO NOT EDIT.
// source: material.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MaterialInfo struct {
	MaterialType     *int32 `protobuf:"varint,1,req,name=materialType" json:"materialType,omitempty"`
	UseTimes         *int32 `protobuf:"varint,2,req,name=useTimes" json:"useTimes,omitempty"`
	Group            *int32 `protobuf:"varint,3,req,name=group" json:"group,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MaterialInfo) Reset()                    { *m = MaterialInfo{} }
func (m *MaterialInfo) String() string            { return proto.CompactTextString(m) }
func (*MaterialInfo) ProtoMessage()               {}
func (*MaterialInfo) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{0} }

func (m *MaterialInfo) GetMaterialType() int32 {
	if m != nil && m.MaterialType != nil {
		return *m.MaterialType
	}
	return 0
}

func (m *MaterialInfo) GetUseTimes() int32 {
	if m != nil && m.UseTimes != nil {
		return *m.UseTimes
	}
	return 0
}

func (m *MaterialInfo) GetGroup() int32 {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return 0
}

type MaterialSweepDrop struct {
	DropList         []*DropInfo `protobuf:"bytes,1,rep,name=dropList" json:"dropList,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MaterialSweepDrop) Reset()                    { *m = MaterialSweepDrop{} }
func (m *MaterialSweepDrop) String() string            { return proto.CompactTextString(m) }
func (*MaterialSweepDrop) ProtoMessage()               {}
func (*MaterialSweepDrop) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{1} }

func (m *MaterialSweepDrop) GetDropList() []*DropInfo {
	if m != nil {
		return m.DropList
	}
	return nil
}

type CSMaterialInfoGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSMaterialInfoGet) Reset()                    { *m = CSMaterialInfoGet{} }
func (m *CSMaterialInfoGet) String() string            { return proto.CompactTextString(m) }
func (*CSMaterialInfoGet) ProtoMessage()               {}
func (*CSMaterialInfoGet) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{2} }

type SCMaterialInfoGet struct {
	InfoList         []*MaterialInfo `protobuf:"bytes,1,rep,name=infoList" json:"infoList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SCMaterialInfoGet) Reset()                    { *m = SCMaterialInfoGet{} }
func (m *SCMaterialInfoGet) String() string            { return proto.CompactTextString(m) }
func (*SCMaterialInfoGet) ProtoMessage()               {}
func (*SCMaterialInfoGet) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{3} }

func (m *SCMaterialInfoGet) GetInfoList() []*MaterialInfo {
	if m != nil {
		return m.InfoList
	}
	return nil
}

type CSMaterialSaoDang struct {
	MaterialType     *int32 `protobuf:"varint,1,req,name=materialType" json:"materialType,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSMaterialSaoDang) Reset()                    { *m = CSMaterialSaoDang{} }
func (m *CSMaterialSaoDang) String() string            { return proto.CompactTextString(m) }
func (*CSMaterialSaoDang) ProtoMessage()               {}
func (*CSMaterialSaoDang) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{4} }

func (m *CSMaterialSaoDang) GetMaterialType() int32 {
	if m != nil && m.MaterialType != nil {
		return *m.MaterialType
	}
	return 0
}

func (m *CSMaterialSaoDang) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type SCMaterialSaoDang struct {
	MaterialType     *int32               `protobuf:"varint,1,req,name=materialType" json:"materialType,omitempty"`
	SweepDropList    []*MaterialSweepDrop `protobuf:"bytes,2,rep,name=sweepDropList" json:"sweepDropList,omitempty"`
	SaodangNum       *int32               `protobuf:"varint,3,req,name=saodangNum" json:"saodangNum,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SCMaterialSaoDang) Reset()                    { *m = SCMaterialSaoDang{} }
func (m *SCMaterialSaoDang) String() string            { return proto.CompactTextString(m) }
func (*SCMaterialSaoDang) ProtoMessage()               {}
func (*SCMaterialSaoDang) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{5} }

func (m *SCMaterialSaoDang) GetMaterialType() int32 {
	if m != nil && m.MaterialType != nil {
		return *m.MaterialType
	}
	return 0
}

func (m *SCMaterialSaoDang) GetSweepDropList() []*MaterialSweepDrop {
	if m != nil {
		return m.SweepDropList
	}
	return nil
}

func (m *SCMaterialSaoDang) GetSaodangNum() int32 {
	if m != nil && m.SaodangNum != nil {
		return *m.SaodangNum
	}
	return 0
}

type CSMaterialChallenge struct {
	MaterialType     *int32 `protobuf:"varint,1,req,name=materialType" json:"materialType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSMaterialChallenge) Reset()                    { *m = CSMaterialChallenge{} }
func (m *CSMaterialChallenge) String() string            { return proto.CompactTextString(m) }
func (*CSMaterialChallenge) ProtoMessage()               {}
func (*CSMaterialChallenge) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{6} }

func (m *CSMaterialChallenge) GetMaterialType() int32 {
	if m != nil && m.MaterialType != nil {
		return *m.MaterialType
	}
	return 0
}

type SCMaterialChallenge struct {
	MaterialType     *int32 `protobuf:"varint,1,req,name=materialType" json:"materialType,omitempty"`
	IsSuccess        *bool  `protobuf:"varint,2,req,name=isSuccess" json:"isSuccess,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCMaterialChallenge) Reset()                    { *m = SCMaterialChallenge{} }
func (m *SCMaterialChallenge) String() string            { return proto.CompactTextString(m) }
func (*SCMaterialChallenge) ProtoMessage()               {}
func (*SCMaterialChallenge) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{7} }

func (m *SCMaterialChallenge) GetMaterialType() int32 {
	if m != nil && m.MaterialType != nil {
		return *m.MaterialType
	}
	return 0
}

func (m *SCMaterialChallenge) GetIsSuccess() bool {
	if m != nil && m.IsSuccess != nil {
		return *m.IsSuccess
	}
	return false
}

type SCMaterialSceneInfo struct {
	MaterialType      *int32 `protobuf:"varint,1,req,name=materialType" json:"materialType,omitempty"`
	TotalBiologyGroup *int32 `protobuf:"varint,2,req,name=totalBiologyGroup" json:"totalBiologyGroup,omitempty"`
	BiologyGroup      *int32 `protobuf:"varint,3,req,name=biologyGroup" json:"biologyGroup,omitempty"`
	CreateTime        *int64 `protobuf:"varint,4,req,name=createTime" json:"createTime,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *SCMaterialSceneInfo) Reset()                    { *m = SCMaterialSceneInfo{} }
func (m *SCMaterialSceneInfo) String() string            { return proto.CompactTextString(m) }
func (*SCMaterialSceneInfo) ProtoMessage()               {}
func (*SCMaterialSceneInfo) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{8} }

func (m *SCMaterialSceneInfo) GetMaterialType() int32 {
	if m != nil && m.MaterialType != nil {
		return *m.MaterialType
	}
	return 0
}

func (m *SCMaterialSceneInfo) GetTotalBiologyGroup() int32 {
	if m != nil && m.TotalBiologyGroup != nil {
		return *m.TotalBiologyGroup
	}
	return 0
}

func (m *SCMaterialSceneInfo) GetBiologyGroup() int32 {
	if m != nil && m.BiologyGroup != nil {
		return *m.BiologyGroup
	}
	return 0
}

func (m *SCMaterialSceneInfo) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

type SCMaterialChallengeResult struct {
	MaterialType     *int32      `protobuf:"varint,1,req,name=materialType" json:"materialType,omitempty"`
	IsSuccess        *bool       `protobuf:"varint,2,req,name=isSuccess" json:"isSuccess,omitempty"`
	DropList         []*DropInfo `protobuf:"bytes,3,rep,name=dropList" json:"dropList,omitempty"`
	Group            *int32      `protobuf:"varint,4,req,name=group" json:"group,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCMaterialChallengeResult) Reset()                    { *m = SCMaterialChallengeResult{} }
func (m *SCMaterialChallengeResult) String() string            { return proto.CompactTextString(m) }
func (*SCMaterialChallengeResult) ProtoMessage()               {}
func (*SCMaterialChallengeResult) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{9} }

func (m *SCMaterialChallengeResult) GetMaterialType() int32 {
	if m != nil && m.MaterialType != nil {
		return *m.MaterialType
	}
	return 0
}

func (m *SCMaterialChallengeResult) GetIsSuccess() bool {
	if m != nil && m.IsSuccess != nil {
		return *m.IsSuccess
	}
	return false
}

func (m *SCMaterialChallengeResult) GetDropList() []*DropInfo {
	if m != nil {
		return m.DropList
	}
	return nil
}

func (m *SCMaterialChallengeResult) GetGroup() int32 {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return 0
}

type SCMaterialRefreshBiology struct {
	NextBiologyGroup *int32 `protobuf:"varint,1,req,name=nextBiologyGroup" json:"nextBiologyGroup,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCMaterialRefreshBiology) Reset()                    { *m = SCMaterialRefreshBiology{} }
func (m *SCMaterialRefreshBiology) String() string            { return proto.CompactTextString(m) }
func (*SCMaterialRefreshBiology) ProtoMessage()               {}
func (*SCMaterialRefreshBiology) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{10} }

func (m *SCMaterialRefreshBiology) GetNextBiologyGroup() int32 {
	if m != nil && m.NextBiologyGroup != nil {
		return *m.NextBiologyGroup
	}
	return 0
}

func init() {
	proto.RegisterType((*MaterialInfo)(nil), "ui.MaterialInfo")
	proto.RegisterType((*MaterialSweepDrop)(nil), "ui.MaterialSweepDrop")
	proto.RegisterType((*CSMaterialInfoGet)(nil), "ui.CSMaterialInfoGet")
	proto.RegisterType((*SCMaterialInfoGet)(nil), "ui.SCMaterialInfoGet")
	proto.RegisterType((*CSMaterialSaoDang)(nil), "ui.CSMaterialSaoDang")
	proto.RegisterType((*SCMaterialSaoDang)(nil), "ui.SCMaterialSaoDang")
	proto.RegisterType((*CSMaterialChallenge)(nil), "ui.CSMaterialChallenge")
	proto.RegisterType((*SCMaterialChallenge)(nil), "ui.SCMaterialChallenge")
	proto.RegisterType((*SCMaterialSceneInfo)(nil), "ui.SCMaterialSceneInfo")
	proto.RegisterType((*SCMaterialChallengeResult)(nil), "ui.SCMaterialChallengeResult")
	proto.RegisterType((*SCMaterialRefreshBiology)(nil), "ui.SCMaterialRefreshBiology")
}

func init() { proto.RegisterFile("material.proto", fileDescriptor70) }

var fileDescriptor70 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x8e, 0xda, 0x30,
	0x10, 0x86, 0x45, 0x02, 0x52, 0x3a, 0x84, 0x8a, 0x18, 0x2a, 0x85, 0x1e, 0x2a, 0xe4, 0x13, 0x52,
	0x2b, 0x0e, 0x6d, 0xd5, 0xde, 0x7a, 0x28, 0x54, 0xa8, 0x52, 0xbb, 0x07, 0xc2, 0x0b, 0x78, 0xc3,
	0x10, 0xac, 0x4d, 0xec, 0x28, 0xb6, 0xb5, 0xcb, 0xdb, 0xaf, 0xe2, 0x80, 0x62, 0x76, 0x59, 0x76,
	0x8f, 0x1e, 0xcf, 0xcc, 0xff, 0x7f, 0x33, 0x03, 0xef, 0x0b, 0xa6, 0xb1, 0xe2, 0x2c, 0x9f, 0x97,
	0x95, 0xd4, 0x92, 0x78, 0x86, 0x7f, 0x84, 0x6d, 0x25, 0xcb, 0xe6, 0x4d, 0xff, 0x40, 0xf8, 0xff,
	0x98, 0xf1, 0x57, 0xec, 0x24, 0x19, 0x43, 0x78, 0xaa, 0xd8, 0x1c, 0x4a, 0x8c, 0x3b, 0x53, 0x6f,
	0xd6, 0x23, 0x43, 0x08, 0x8c, 0xc2, 0x0d, 0x2f, 0x50, 0xc5, 0x9e, 0x8d, 0x0c, 0xa0, 0x97, 0x55,
	0xd2, 0x94, 0xb1, 0x5f, 0x3f, 0xe9, 0x37, 0x88, 0x4e, 0x6d, 0x92, 0x7b, 0xc4, 0x72, 0x59, 0xc9,
	0x92, 0x7c, 0x82, 0xa0, 0x56, 0xfa, 0xc7, 0x95, 0x8e, 0x3b, 0x53, 0x7f, 0xd6, 0xff, 0x1a, 0xce,
	0x0d, 0x9f, 0xd7, 0x7f, 0xb5, 0x16, 0x1d, 0x41, 0xb4, 0x48, 0x5c, 0xf5, 0x15, 0x6a, 0xfa, 0x13,
	0xa2, 0x64, 0xf1, 0x24, 0x48, 0x28, 0x04, 0x5c, 0xec, 0xa4, 0xd3, 0x69, 0x58, 0x77, 0x72, 0xd3,
	0xe8, 0x0f, 0xb7, 0x5b, 0xc2, 0xe4, 0x92, 0x89, 0xec, 0x05, 0x9c, 0x3e, 0xf8, 0xc2, 0x14, 0x0d,
	0x09, 0xbd, 0x73, 0x05, 0xaf, 0xd7, 0x7d, 0x81, 0x81, 0x3a, 0xd1, 0x59, 0x2f, 0x9e, 0xf5, 0xf2,
	0xc1, 0xf5, 0xd2, 0xe2, 0x13, 0x00, 0xc5, 0xe4, 0x96, 0x89, 0xec, 0xc6, 0x14, 0xc7, 0x39, 0x7d,
	0x86, 0x51, 0x6b, 0x72, 0xb1, 0x67, 0x79, 0x8e, 0x22, 0xc3, 0xcb, 0x72, 0xf4, 0x17, 0x8c, 0x5a,
	0x67, 0xaf, 0x24, 0x93, 0x08, 0xde, 0x71, 0x95, 0x98, 0x34, 0x45, 0xd5, 0xec, 0x28, 0xa0, 0xa5,
	0x5b, 0x9f, 0xa4, 0x28, 0xf0, 0xca, 0x8a, 0x27, 0x10, 0x69, 0xa9, 0x59, 0xfe, 0x9b, 0xcb, 0x5c,
	0x66, 0x87, 0x95, 0x5d, 0x6e, 0xb3, 0xeb, 0x31, 0x84, 0xb7, 0x6e, 0xd4, 0xa2, 0xd4, 0x78, 0x69,
	0x85, 0x4c, 0xdb, 0xb3, 0x88, 0xbb, 0x53, 0x6f, 0xe6, 0x53, 0x05, 0x93, 0x0b, 0x8e, 0xd7, 0xa8,
	0x4c, 0xae, 0xdf, 0xec, 0xfb, 0xec, 0x6e, 0xfc, 0xe7, 0x77, 0xd3, 0xde, 0x5e, 0xd7, 0x8e, 0xe9,
	0x3b, 0xc4, 0xad, 0xe8, 0x1a, 0x77, 0x15, 0xaa, 0xfd, 0x91, 0x82, 0xc4, 0x30, 0x14, 0xf8, 0xa0,
	0xcf, 0xa0, 0xac, 0xee, 0x63, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x7f, 0xdf, 0x11, 0x19, 0x03,
	0x00, 0x00,
}
