// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shenmo.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ShenMoRank struct {
	ServerId         *int32  `protobuf:"varint,1,req,name=serverId" json:"serverId,omitempty"`
	AllianceId       *int64  `protobuf:"varint,2,req,name=allianceId" json:"allianceId,omitempty"`
	AllianceName     *string `protobuf:"bytes,3,req,name=allianceName" json:"allianceName,omitempty"`
	JiFenNum         *int32  `protobuf:"varint,4,req,name=jiFenNum" json:"jiFenNum,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ShenMoRank) Reset()                    { *m = ShenMoRank{} }
func (m *ShenMoRank) String() string            { return proto.CompactTextString(m) }
func (*ShenMoRank) ProtoMessage()               {}
func (*ShenMoRank) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{0} }

func (m *ShenMoRank) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *ShenMoRank) GetAllianceId() int64 {
	if m != nil && m.AllianceId != nil {
		return *m.AllianceId
	}
	return 0
}

func (m *ShenMoRank) GetAllianceName() string {
	if m != nil && m.AllianceName != nil {
		return *m.AllianceName
	}
	return ""
}

func (m *ShenMoRank) GetJiFenNum() int32 {
	if m != nil && m.JiFenNum != nil {
		return *m.JiFenNum
	}
	return 0
}

type SCShenMoSceneInfo struct {
	GongXun          *int32                `protobuf:"varint,1,req,name=gongXun" json:"gongXun,omitempty"`
	KillNum          *int32                `protobuf:"varint,2,req,name=killNum" json:"killNum,omitempty"`
	JiFenNum         *int32                `protobuf:"varint,3,opt,name=jiFenNum,def=0" json:"jiFenNum,omitempty"`
	DaQiList         []*GeneralCollectInfo `protobuf:"bytes,4,rep,name=daQiList" json:"daQiList,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *SCShenMoSceneInfo) Reset()                    { *m = SCShenMoSceneInfo{} }
func (m *SCShenMoSceneInfo) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoSceneInfo) ProtoMessage()               {}
func (*SCShenMoSceneInfo) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{1} }

const Default_SCShenMoSceneInfo_JiFenNum int32 = 0

func (m *SCShenMoSceneInfo) GetGongXun() int32 {
	if m != nil && m.GongXun != nil {
		return *m.GongXun
	}
	return 0
}

func (m *SCShenMoSceneInfo) GetKillNum() int32 {
	if m != nil && m.KillNum != nil {
		return *m.KillNum
	}
	return 0
}

func (m *SCShenMoSceneInfo) GetJiFenNum() int32 {
	if m != nil && m.JiFenNum != nil {
		return *m.JiFenNum
	}
	return Default_SCShenMoSceneInfo_JiFenNum
}

func (m *SCShenMoSceneInfo) GetDaQiList() []*GeneralCollectInfo {
	if m != nil {
		return m.DaQiList
	}
	return nil
}

type SCShenMoSceneDataChanged struct {
	GongXun          *int32 `protobuf:"varint,1,opt,name=gongXun,def=-1" json:"gongXun,omitempty"`
	KillNum          *int32 `protobuf:"varint,2,opt,name=killNum,def=-1" json:"killNum,omitempty"`
	JiFenNum         *int32 `protobuf:"varint,3,opt,name=jiFenNum,def=-1" json:"jiFenNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShenMoSceneDataChanged) Reset()                    { *m = SCShenMoSceneDataChanged{} }
func (m *SCShenMoSceneDataChanged) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoSceneDataChanged) ProtoMessage()               {}
func (*SCShenMoSceneDataChanged) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{2} }

const Default_SCShenMoSceneDataChanged_GongXun int32 = -1
const Default_SCShenMoSceneDataChanged_KillNum int32 = -1
const Default_SCShenMoSceneDataChanged_JiFenNum int32 = -1

func (m *SCShenMoSceneDataChanged) GetGongXun() int32 {
	if m != nil && m.GongXun != nil {
		return *m.GongXun
	}
	return Default_SCShenMoSceneDataChanged_GongXun
}

func (m *SCShenMoSceneDataChanged) GetKillNum() int32 {
	if m != nil && m.KillNum != nil {
		return *m.KillNum
	}
	return Default_SCShenMoSceneDataChanged_KillNum
}

func (m *SCShenMoSceneDataChanged) GetJiFenNum() int32 {
	if m != nil && m.JiFenNum != nil {
		return *m.JiFenNum
	}
	return Default_SCShenMoSceneDataChanged_JiFenNum
}

type SCShenMoSceneEnd struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShenMoSceneEnd) Reset()                    { *m = SCShenMoSceneEnd{} }
func (m *SCShenMoSceneEnd) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoSceneEnd) ProtoMessage()               {}
func (*SCShenMoSceneEnd) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{3} }

type CSShenMoCancleLineUp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSShenMoCancleLineUp) Reset()                    { *m = CSShenMoCancleLineUp{} }
func (m *CSShenMoCancleLineUp) String() string            { return proto.CompactTextString(m) }
func (*CSShenMoCancleLineUp) ProtoMessage()               {}
func (*CSShenMoCancleLineUp) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{4} }

type SCShenMoCancleLineUp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShenMoCancleLineUp) Reset()                    { *m = SCShenMoCancleLineUp{} }
func (m *SCShenMoCancleLineUp) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoCancleLineUp) ProtoMessage()               {}
func (*SCShenMoCancleLineUp) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{5} }

type SCShenMoLineUp struct {
	BeforeNum        *int32 `protobuf:"varint,1,req,name=beforeNum" json:"beforeNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShenMoLineUp) Reset()                    { *m = SCShenMoLineUp{} }
func (m *SCShenMoLineUp) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoLineUp) ProtoMessage()               {}
func (*SCShenMoLineUp) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{6} }

func (m *SCShenMoLineUp) GetBeforeNum() int32 {
	if m != nil && m.BeforeNum != nil {
		return *m.BeforeNum
	}
	return 0
}

type SCShenMoLineUpSuccess struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShenMoLineUpSuccess) Reset()                    { *m = SCShenMoLineUpSuccess{} }
func (m *SCShenMoLineUpSuccess) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoLineUpSuccess) ProtoMessage()               {}
func (*SCShenMoLineUpSuccess) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{7} }

type SCShenMoFinishToLineUp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShenMoFinishToLineUp) Reset()                    { *m = SCShenMoFinishToLineUp{} }
func (m *SCShenMoFinishToLineUp) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoFinishToLineUp) ProtoMessage()               {}
func (*SCShenMoFinishToLineUp) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{8} }

type CSShenMoGetReward struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSShenMoGetReward) Reset()                    { *m = CSShenMoGetReward{} }
func (m *CSShenMoGetReward) String() string            { return proto.CompactTextString(m) }
func (*CSShenMoGetReward) ProtoMessage()               {}
func (*CSShenMoGetReward) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{9} }

type SCShenMoGetReward struct {
	RankTime         *int64 `protobuf:"varint,1,req,name=rankTime" json:"rankTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShenMoGetReward) Reset()                    { *m = SCShenMoGetReward{} }
func (m *SCShenMoGetReward) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoGetReward) ProtoMessage()               {}
func (*SCShenMoGetReward) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{10} }

func (m *SCShenMoGetReward) GetRankTime() int64 {
	if m != nil && m.RankTime != nil {
		return *m.RankTime
	}
	return 0
}

type CSShenMoMyRank struct {
	IsThis           *bool  `protobuf:"varint,1,req,name=isThis" json:"isThis,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSShenMoMyRank) Reset()                    { *m = CSShenMoMyRank{} }
func (m *CSShenMoMyRank) String() string            { return proto.CompactTextString(m) }
func (*CSShenMoMyRank) ProtoMessage()               {}
func (*CSShenMoMyRank) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{11} }

func (m *CSShenMoMyRank) GetIsThis() bool {
	if m != nil && m.IsThis != nil {
		return *m.IsThis
	}
	return false
}

type SCShenMoMyRank struct {
	IsThis           *bool  `protobuf:"varint,1,req,name=isThis" json:"isThis,omitempty"`
	Pos              *int32 `protobuf:"varint,2,req,name=pos" json:"pos,omitempty"`
	RankTime         *int64 `protobuf:"varint,3,req,name=rankTime" json:"rankTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShenMoMyRank) Reset()                    { *m = SCShenMoMyRank{} }
func (m *SCShenMoMyRank) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoMyRank) ProtoMessage()               {}
func (*SCShenMoMyRank) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{12} }

func (m *SCShenMoMyRank) GetIsThis() bool {
	if m != nil && m.IsThis != nil {
		return *m.IsThis
	}
	return false
}

func (m *SCShenMoMyRank) GetPos() int32 {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return 0
}

func (m *SCShenMoMyRank) GetRankTime() int64 {
	if m != nil && m.RankTime != nil {
		return *m.RankTime
	}
	return 0
}

type CSShenMoRankGet struct {
	IsThis           *bool  `protobuf:"varint,1,req,name=isThis" json:"isThis,omitempty"`
	Page             *int32 `protobuf:"varint,2,req,name=page" json:"page,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSShenMoRankGet) Reset()                    { *m = CSShenMoRankGet{} }
func (m *CSShenMoRankGet) String() string            { return proto.CompactTextString(m) }
func (*CSShenMoRankGet) ProtoMessage()               {}
func (*CSShenMoRankGet) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{13} }

func (m *CSShenMoRankGet) GetIsThis() bool {
	if m != nil && m.IsThis != nil {
		return *m.IsThis
	}
	return false
}

func (m *CSShenMoRankGet) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

type SCShenMoRankGet struct {
	IsThis           *bool         `protobuf:"varint,1,req,name=isThis" json:"isThis,omitempty"`
	Page             *int32        `protobuf:"varint,2,req,name=page" json:"page,omitempty"`
	RankTime         *int64        `protobuf:"varint,3,req,name=rankTime" json:"rankTime,omitempty"`
	RankList         []*ShenMoRank `protobuf:"bytes,4,rep,name=rankList" json:"rankList,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SCShenMoRankGet) Reset()                    { *m = SCShenMoRankGet{} }
func (m *SCShenMoRankGet) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoRankGet) ProtoMessage()               {}
func (*SCShenMoRankGet) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{14} }

func (m *SCShenMoRankGet) GetIsThis() bool {
	if m != nil && m.IsThis != nil {
		return *m.IsThis
	}
	return false
}

func (m *SCShenMoRankGet) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *SCShenMoRankGet) GetRankTime() int64 {
	if m != nil && m.RankTime != nil {
		return *m.RankTime
	}
	return 0
}

func (m *SCShenMoRankGet) GetRankList() []*ShenMoRank {
	if m != nil {
		return m.RankList
	}
	return nil
}

type SCPlayerGongXunChanged struct {
	GongXunNum       *int32 `protobuf:"varint,1,req,name=gongXunNum" json:"gongXunNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPlayerGongXunChanged) Reset()                    { *m = SCPlayerGongXunChanged{} }
func (m *SCPlayerGongXunChanged) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerGongXunChanged) ProtoMessage()               {}
func (*SCPlayerGongXunChanged) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{15} }

func (m *SCPlayerGongXunChanged) GetGongXunNum() int32 {
	if m != nil && m.GongXunNum != nil {
		return *m.GongXunNum
	}
	return 0
}

type SCShenMoBioBroadcast struct {
	Bio              *GeneralCollectInfo `protobuf:"bytes,1,req,name=bio" json:"bio,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *SCShenMoBioBroadcast) Reset()                    { *m = SCShenMoBioBroadcast{} }
func (m *SCShenMoBioBroadcast) String() string            { return proto.CompactTextString(m) }
func (*SCShenMoBioBroadcast) ProtoMessage()               {}
func (*SCShenMoBioBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor99, []int{16} }

func (m *SCShenMoBioBroadcast) GetBio() *GeneralCollectInfo {
	if m != nil {
		return m.Bio
	}
	return nil
}

func init() {
	proto.RegisterType((*ShenMoRank)(nil), "ui.ShenMoRank")
	proto.RegisterType((*SCShenMoSceneInfo)(nil), "ui.SCShenMoSceneInfo")
	proto.RegisterType((*SCShenMoSceneDataChanged)(nil), "ui.SCShenMoSceneDataChanged")
	proto.RegisterType((*SCShenMoSceneEnd)(nil), "ui.SCShenMoSceneEnd")
	proto.RegisterType((*CSShenMoCancleLineUp)(nil), "ui.CSShenMoCancleLineUp")
	proto.RegisterType((*SCShenMoCancleLineUp)(nil), "ui.SCShenMoCancleLineUp")
	proto.RegisterType((*SCShenMoLineUp)(nil), "ui.SCShenMoLineUp")
	proto.RegisterType((*SCShenMoLineUpSuccess)(nil), "ui.SCShenMoLineUpSuccess")
	proto.RegisterType((*SCShenMoFinishToLineUp)(nil), "ui.SCShenMoFinishToLineUp")
	proto.RegisterType((*CSShenMoGetReward)(nil), "ui.CSShenMoGetReward")
	proto.RegisterType((*SCShenMoGetReward)(nil), "ui.SCShenMoGetReward")
	proto.RegisterType((*CSShenMoMyRank)(nil), "ui.CSShenMoMyRank")
	proto.RegisterType((*SCShenMoMyRank)(nil), "ui.SCShenMoMyRank")
	proto.RegisterType((*CSShenMoRankGet)(nil), "ui.CSShenMoRankGet")
	proto.RegisterType((*SCShenMoRankGet)(nil), "ui.SCShenMoRankGet")
	proto.RegisterType((*SCPlayerGongXunChanged)(nil), "ui.SCPlayerGongXunChanged")
	proto.RegisterType((*SCShenMoBioBroadcast)(nil), "ui.SCShenMoBioBroadcast")
}

func init() { proto.RegisterFile("shenmo.proto", fileDescriptor99) }

var fileDescriptor99 = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0xd5, 0xa4, 0x63, 0xdd, 0x6b, 0xd5, 0xae, 0x6e, 0x29, 0xd1, 0x4e, 0x91, 0x27, 0xa4,
	0x1c, 0x58, 0x61, 0x1c, 0xe1, 0x80, 0xb4, 0xc0, 0xaa, 0x4a, 0xdb, 0x04, 0x4b, 0x91, 0xd0, 0x6e,
	0x5e, 0xf2, 0xd6, 0x98, 0x26, 0x76, 0x65, 0x27, 0xa0, 0xfe, 0xf7, 0xc8, 0x49, 0x4d, 0x5a, 0x15,
	0xa4, 0x1d, 0xf3, 0xe5, 0x7d, 0xdf, 0xef, 0xc9, 0xef, 0x83, 0x9e, 0x4e, 0x51, 0xe4, 0x72, 0xba,
	0x56, 0xb2, 0x90, 0xc4, 0x29, 0xf9, 0x59, 0x2f, 0x96, 0x79, 0x2e, 0x45, 0xad, 0x9c, 0x75, 0x75,
	0x8c, 0x02, 0xeb, 0x0f, 0xfa, 0x00, 0x10, 0xa5, 0x28, 0x6e, 0xe5, 0x3d, 0x13, 0x2b, 0x72, 0x0a,
	0x1d, 0x8d, 0xea, 0x17, 0xaa, 0x79, 0xe2, 0xb5, 0x7c, 0x27, 0x38, 0x22, 0x04, 0x80, 0x65, 0x19,
	0x67, 0x22, 0xc6, 0x79, 0xe2, 0x39, 0xbe, 0x13, 0xb8, 0x64, 0x0c, 0x3d, 0xab, 0xdd, 0xb1, 0x1c,
	0x3d, 0xd7, 0x77, 0x82, 0x13, 0xe3, 0xfd, 0xc9, 0xaf, 0x51, 0xdc, 0x95, 0xb9, 0xd7, 0x36, 0x5e,
	0x5a, 0xc0, 0x30, 0x0a, 0xeb, 0xf4, 0xc8, 0x20, 0xe7, 0xe2, 0x49, 0x92, 0x01, 0x1c, 0x2f, 0xa5,
	0x58, 0xfe, 0x28, 0xc5, 0x96, 0x30, 0x80, 0xe3, 0x15, 0xcf, 0x32, 0x63, 0x73, 0x2a, 0x61, 0xb4,
	0x13, 0xe4, 0xfa, 0xad, 0xe0, 0xe8, 0x43, 0xeb, 0x1d, 0x09, 0xa0, 0x93, 0xb0, 0x6f, 0xfc, 0x86,
	0xeb, 0xc2, 0x6b, 0xfb, 0x6e, 0xd0, 0x7d, 0x3f, 0x99, 0x96, 0x7c, 0x3a, 0x43, 0x81, 0x8a, 0x65,
	0xa1, 0xcc, 0x32, 0x8c, 0x0b, 0x03, 0xa0, 0x0f, 0xe0, 0xed, 0x51, 0x3f, 0xb3, 0x82, 0x85, 0x29,
	0x13, 0x4b, 0x4c, 0xc8, 0x68, 0x17, 0x6e, 0x92, 0x9d, 0x8b, 0x4b, 0x23, 0x36, 0x0b, 0x58, 0x71,
	0x7c, 0xb0, 0x84, 0x73, 0x71, 0x49, 0x09, 0x9c, 0xee, 0x65, 0x7f, 0x11, 0x09, 0x9d, 0xc0, 0x38,
	0x8c, 0x6a, 0x2d, 0x64, 0x22, 0xce, 0xf0, 0x86, 0x0b, 0xfc, 0xbe, 0x36, 0xba, 0x9d, 0xdd, 0xd3,
	0xcf, 0xa1, 0x6f, 0xf5, 0x5a, 0x21, 0x43, 0x38, 0x79, 0xc4, 0x27, 0xa9, 0xd0, 0xc0, 0xaa, 0x47,
	0xa1, 0xaf, 0xe0, 0xe5, 0xfe, 0x50, 0x54, 0xc6, 0x31, 0x6a, 0x4d, 0x3d, 0x98, 0xd8, 0x1f, 0xd7,
	0x5c, 0x70, 0x9d, 0x2e, 0xb6, 0x03, 0x74, 0x04, 0x43, 0xbb, 0xc7, 0x0c, 0x8b, 0x7b, 0xfc, 0xcd,
	0x54, 0x42, 0x5f, 0x37, 0x27, 0xf8, 0x2b, 0x9a, 0x4b, 0x29, 0x26, 0x56, 0x0b, 0x9e, 0x63, 0x85,
	0x73, 0xa9, 0x0f, 0x7d, 0xeb, 0xbd, 0xdd, 0x54, 0x4d, 0xe8, 0xc3, 0x0b, 0xae, 0x17, 0x29, 0xd7,
	0xd5, 0x44, 0x87, 0x7e, 0x6a, 0xb6, 0xfe, 0xf7, 0x04, 0xe9, 0x82, 0xbb, 0x96, 0x7a, 0x7b, 0xc3,
	0x5d, 0x84, 0x5b, 0x21, 0xde, 0xc2, 0xc0, 0x22, 0x8c, 0x7d, 0x86, 0xc5, 0x41, 0x42, 0x0f, 0xda,
	0x6b, 0xb6, 0xc4, 0x3a, 0x82, 0xc6, 0x30, 0xb0, 0xc4, 0x67, 0x19, 0x0e, 0x99, 0xc4, 0xaf, 0x95,
	0x9d, 0xd2, 0xf4, 0x4d, 0x69, 0x9a, 0x50, 0xfa, 0xc6, 0x3c, 0xe7, 0xd7, 0x8c, 0x6d, 0x50, 0xcd,
	0xea, 0x62, 0xd8, 0xaa, 0x10, 0x80, 0x6d, 0x55, 0x9a, 0xab, 0x7c, 0x6c, 0x4e, 0x7a, 0xc5, 0xe5,
	0x95, 0x92, 0x2c, 0x89, 0x99, 0x2e, 0xc8, 0x39, 0xb8, 0x8f, 0x5c, 0x56, 0x43, 0xff, 0xed, 0xe5,
	0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x73, 0xc5, 0x70, 0xba, 0x97, 0x03, 0x00, 0x00,
}
