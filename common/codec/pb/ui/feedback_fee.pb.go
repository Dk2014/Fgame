// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feedback_fee.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FeedbackRecordInfo struct {
	Status           *int32  `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
	Code             *string `protobuf:"bytes,2,req,name=code" json:"code,omitempty"`
	ExchangeMoney    *int32  `protobuf:"varint,3,req,name=exchangeMoney" json:"exchangeMoney,omitempty"`
	ExchangeTime     *int64  `protobuf:"varint,4,req,name=exchangeTime" json:"exchangeTime,omitempty"`
	ExpireTime       *int64  `protobuf:"varint,5,req,name=expireTime" json:"expireTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FeedbackRecordInfo) Reset()                    { *m = FeedbackRecordInfo{} }
func (m *FeedbackRecordInfo) String() string            { return proto.CompactTextString(m) }
func (*FeedbackRecordInfo) ProtoMessage()               {}
func (*FeedbackRecordInfo) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{0} }

func (m *FeedbackRecordInfo) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *FeedbackRecordInfo) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *FeedbackRecordInfo) GetExchangeMoney() int32 {
	if m != nil && m.ExchangeMoney != nil {
		return *m.ExchangeMoney
	}
	return 0
}

func (m *FeedbackRecordInfo) GetExchangeTime() int64 {
	if m != nil && m.ExchangeTime != nil {
		return *m.ExchangeTime
	}
	return 0
}

func (m *FeedbackRecordInfo) GetExpireTime() int64 {
	if m != nil && m.ExpireTime != nil {
		return *m.ExpireTime
	}
	return 0
}

type FeedbackFeeInfo struct {
	Money            *int32 `protobuf:"varint,1,req,name=money" json:"money,omitempty"`
	TodayUseNum      *int32 `protobuf:"varint,2,req,name=todayUseNum" json:"todayUseNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FeedbackFeeInfo) Reset()                    { *m = FeedbackFeeInfo{} }
func (m *FeedbackFeeInfo) String() string            { return proto.CompactTextString(m) }
func (*FeedbackFeeInfo) ProtoMessage()               {}
func (*FeedbackFeeInfo) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{1} }

func (m *FeedbackFeeInfo) GetMoney() int32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *FeedbackFeeInfo) GetTodayUseNum() int32 {
	if m != nil && m.TodayUseNum != nil {
		return *m.TodayUseNum
	}
	return 0
}

type CSFeedbackFeeInfo struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFeedbackFeeInfo) Reset()                    { *m = CSFeedbackFeeInfo{} }
func (m *CSFeedbackFeeInfo) String() string            { return proto.CompactTextString(m) }
func (*CSFeedbackFeeInfo) ProtoMessage()               {}
func (*CSFeedbackFeeInfo) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{2} }

type SCFeedbackFeeInfo struct {
	FeeInfo          *FeedbackFeeInfo    `protobuf:"bytes,1,req,name=feeInfo" json:"feeInfo,omitempty"`
	Exchanged        *bool               `protobuf:"varint,2,req,name=exchanged" json:"exchanged,omitempty"`
	RecordInfo       *FeedbackRecordInfo `protobuf:"bytes,3,opt,name=recordInfo" json:"recordInfo,omitempty"`
	XianJinFlag      *bool               `protobuf:"varint,4,req,name=xianJinFlag" json:"xianJinFlag,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *SCFeedbackFeeInfo) Reset()                    { *m = SCFeedbackFeeInfo{} }
func (m *SCFeedbackFeeInfo) String() string            { return proto.CompactTextString(m) }
func (*SCFeedbackFeeInfo) ProtoMessage()               {}
func (*SCFeedbackFeeInfo) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{3} }

func (m *SCFeedbackFeeInfo) GetFeeInfo() *FeedbackFeeInfo {
	if m != nil {
		return m.FeeInfo
	}
	return nil
}

func (m *SCFeedbackFeeInfo) GetExchanged() bool {
	if m != nil && m.Exchanged != nil {
		return *m.Exchanged
	}
	return false
}

func (m *SCFeedbackFeeInfo) GetRecordInfo() *FeedbackRecordInfo {
	if m != nil {
		return m.RecordInfo
	}
	return nil
}

func (m *SCFeedbackFeeInfo) GetXianJinFlag() bool {
	if m != nil && m.XianJinFlag != nil {
		return *m.XianJinFlag
	}
	return false
}

type CSFeedbackFeeExchange struct {
	ExchangeMoney    *int32 `protobuf:"varint,1,req,name=exchangeMoney" json:"exchangeMoney,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFeedbackFeeExchange) Reset()                    { *m = CSFeedbackFeeExchange{} }
func (m *CSFeedbackFeeExchange) String() string            { return proto.CompactTextString(m) }
func (*CSFeedbackFeeExchange) ProtoMessage()               {}
func (*CSFeedbackFeeExchange) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{4} }

func (m *CSFeedbackFeeExchange) GetExchangeMoney() int32 {
	if m != nil && m.ExchangeMoney != nil {
		return *m.ExchangeMoney
	}
	return 0
}

type SCFeedbackFeeExchange struct {
	FeeInfo          *FeedbackFeeInfo `protobuf:"bytes,1,req,name=feeInfo" json:"feeInfo,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SCFeedbackFeeExchange) Reset()                    { *m = SCFeedbackFeeExchange{} }
func (m *SCFeedbackFeeExchange) String() string            { return proto.CompactTextString(m) }
func (*SCFeedbackFeeExchange) ProtoMessage()               {}
func (*SCFeedbackFeeExchange) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{5} }

func (m *SCFeedbackFeeExchange) GetFeeInfo() *FeedbackFeeInfo {
	if m != nil {
		return m.FeeInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*FeedbackRecordInfo)(nil), "ui.FeedbackRecordInfo")
	proto.RegisterType((*FeedbackFeeInfo)(nil), "ui.FeedbackFeeInfo")
	proto.RegisterType((*CSFeedbackFeeInfo)(nil), "ui.CSFeedbackFeeInfo")
	proto.RegisterType((*SCFeedbackFeeInfo)(nil), "ui.SCFeedbackFeeInfo")
	proto.RegisterType((*CSFeedbackFeeExchange)(nil), "ui.CSFeedbackFeeExchange")
	proto.RegisterType((*SCFeedbackFeeExchange)(nil), "ui.SCFeedbackFeeExchange")
}

func init() { proto.RegisterFile("feedback_fee.proto", fileDescriptor33) }

var fileDescriptor33 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4f, 0x4f, 0x83, 0x40,
	0x14, 0xc4, 0x53, 0x28, 0xda, 0x0e, 0xad, 0x86, 0x45, 0x0c, 0x47, 0xb2, 0xf1, 0x40, 0x3c, 0x70,
	0x68, 0xe2, 0xd1, 0x53, 0x23, 0x89, 0x26, 0x7a, 0xb0, 0x7a, 0x36, 0x2b, 0x3c, 0xea, 0x46, 0x61,
	0x1b, 0xfe, 0x24, 0xf4, 0x43, 0xf8, 0x9d, 0x8d, 0x4b, 0x69, 0x5a, 0xbc, 0x78, 0xdb, 0xbc, 0x7d,
	0x6f, 0x7e, 0x33, 0x03, 0x96, 0x11, 0xa5, 0xef, 0x22, 0xf9, 0x7c, 0xcb, 0x88, 0xa2, 0x4d, 0xa9,
	0x6a, 0xc5, 0x8c, 0x46, 0xf2, 0x0a, 0x2c, 0xde, 0xfd, 0x3c, 0x53, 0xa2, 0xca, 0xf4, 0xbe, 0xc8,
	0x14, 0x3b, 0xc3, 0x49, 0x55, 0x8b, 0xba, 0xa9, 0xfc, 0x51, 0x60, 0x84, 0x16, 0x9b, 0x61, 0x9c,
	0xa8, 0x94, 0x7c, 0x23, 0x30, 0xc2, 0x29, 0xf3, 0x30, 0xa7, 0x36, 0xf9, 0x10, 0xc5, 0x9a, 0x1e,
	0x55, 0x41, 0x5b, 0xdf, 0xd4, 0x4b, 0x17, 0x98, 0xf5, 0xe3, 0x17, 0x99, 0x93, 0x3f, 0x0e, 0x8c,
	0xd0, 0x64, 0x0c, 0xa0, 0x76, 0x23, 0xcb, 0x6e, 0x66, 0xfd, 0xce, 0xf8, 0x0d, 0xce, 0x7b, 0x68,
	0x4c, 0xa4, 0x89, 0x73, 0x58, 0xb9, 0xd6, 0xea, 0x80, 0x2e, 0xec, 0x5a, 0xa5, 0x62, 0xfb, 0x5a,
	0xd1, 0x53, 0x93, 0x6b, 0xae, 0xc5, 0x5d, 0x38, 0xcb, 0xd5, 0xe0, 0x90, 0x7f, 0x8f, 0xe0, 0xac,
	0x96, 0x43, 0xb9, 0x2b, 0x9c, 0x66, 0xdd, 0x53, 0x0b, 0xda, 0x0b, 0x37, 0x6a, 0x64, 0x34, 0xdc,
	0x72, 0x30, 0xed, 0x1d, 0xa7, 0x9a, 0x31, 0x61, 0xd7, 0x40, 0xb9, 0xef, 0xc1, 0x37, 0x83, 0x51,
	0x68, 0x2f, 0x2e, 0x0f, 0x6f, 0x0f, 0x5a, 0x72, 0x61, 0xb7, 0x52, 0x14, 0x0f, 0xb2, 0x88, 0xbf,
	0xc4, 0x5a, 0xe7, 0x9d, 0xf0, 0x08, 0xde, 0x91, 0xc9, 0xbb, 0x1d, 0xe0, 0x6f, 0x6b, 0x3a, 0x29,
	0xbf, 0x85, 0x77, 0x64, 0x7f, 0xbf, 0xff, 0xaf, 0x08, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0a,
	0xa4, 0xe1, 0x6d, 0xd8, 0x01, 0x00, 0x00,
}
