// Code generated by protoc-gen-go. DO NOT EDIT.
// source: title.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TitleInfo struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	AcitveTime       *int64 `protobuf:"varint,2,req,name=acitveTime,def=0" json:"acitveTime,omitempty"`
	ValidTime        *int64 `protobuf:"varint,3,req,name=validTime" json:"validTime,omitempty"`
	StarLev          *int32 `protobuf:"varint,4,req,name=starLev,def=0" json:"starLev,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TitleInfo) Reset()                    { *m = TitleInfo{} }
func (m *TitleInfo) String() string            { return proto.CompactTextString(m) }
func (*TitleInfo) ProtoMessage()               {}
func (*TitleInfo) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{0} }

const Default_TitleInfo_AcitveTime int64 = 0
const Default_TitleInfo_StarLev int32 = 0

func (m *TitleInfo) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

func (m *TitleInfo) GetAcitveTime() int64 {
	if m != nil && m.AcitveTime != nil {
		return *m.AcitveTime
	}
	return Default_TitleInfo_AcitveTime
}

func (m *TitleInfo) GetValidTime() int64 {
	if m != nil && m.ValidTime != nil {
		return *m.ValidTime
	}
	return 0
}

func (m *TitleInfo) GetStarLev() int32 {
	if m != nil && m.StarLev != nil {
		return *m.StarLev
	}
	return Default_TitleInfo_StarLev
}

type CSTitleGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSTitleGet) Reset()                    { *m = CSTitleGet{} }
func (m *CSTitleGet) String() string            { return proto.CompactTextString(m) }
func (*CSTitleGet) ProtoMessage()               {}
func (*CSTitleGet) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{1} }

type SCTitleGet struct {
	TitleWear        *int32       `protobuf:"varint,1,req,name=titleWear" json:"titleWear,omitempty"`
	TitleList        []*TitleInfo `protobuf:"bytes,2,rep,name=titleList" json:"titleList,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SCTitleGet) Reset()                    { *m = SCTitleGet{} }
func (m *SCTitleGet) String() string            { return proto.CompactTextString(m) }
func (*SCTitleGet) ProtoMessage()               {}
func (*SCTitleGet) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{2} }

func (m *SCTitleGet) GetTitleWear() int32 {
	if m != nil && m.TitleWear != nil {
		return *m.TitleWear
	}
	return 0
}

func (m *SCTitleGet) GetTitleList() []*TitleInfo {
	if m != nil {
		return m.TitleList
	}
	return nil
}

type CSTitleActive struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSTitleActive) Reset()                    { *m = CSTitleActive{} }
func (m *CSTitleActive) String() string            { return proto.CompactTextString(m) }
func (*CSTitleActive) ProtoMessage()               {}
func (*CSTitleActive) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{3} }

func (m *CSTitleActive) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type SCTitleActive struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	ActiveTime       *int64 `protobuf:"varint,2,req,name=activeTime" json:"activeTime,omitempty"`
	ValidTime        *int64 `protobuf:"varint,3,req,name=validTime" json:"validTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCTitleActive) Reset()                    { *m = SCTitleActive{} }
func (m *SCTitleActive) String() string            { return proto.CompactTextString(m) }
func (*SCTitleActive) ProtoMessage()               {}
func (*SCTitleActive) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{4} }

func (m *SCTitleActive) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

func (m *SCTitleActive) GetActiveTime() int64 {
	if m != nil && m.ActiveTime != nil {
		return *m.ActiveTime
	}
	return 0
}

func (m *SCTitleActive) GetValidTime() int64 {
	if m != nil && m.ValidTime != nil {
		return *m.ValidTime
	}
	return 0
}

type CSTitleWear struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSTitleWear) Reset()                    { *m = CSTitleWear{} }
func (m *CSTitleWear) String() string            { return proto.CompactTextString(m) }
func (*CSTitleWear) ProtoMessage()               {}
func (*CSTitleWear) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{5} }

func (m *CSTitleWear) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type SCTitleWear struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCTitleWear) Reset()                    { *m = SCTitleWear{} }
func (m *SCTitleWear) String() string            { return proto.CompactTextString(m) }
func (*SCTitleWear) ProtoMessage()               {}
func (*SCTitleWear) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{6} }

func (m *SCTitleWear) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type CSTitleUnLoad struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSTitleUnLoad) Reset()                    { *m = CSTitleUnLoad{} }
func (m *CSTitleUnLoad) String() string            { return proto.CompactTextString(m) }
func (*CSTitleUnLoad) ProtoMessage()               {}
func (*CSTitleUnLoad) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{7} }

type SCTitleUnLoad struct {
	TitleWear        *int32 `protobuf:"varint,1,req,name=titleWear" json:"titleWear,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCTitleUnLoad) Reset()                    { *m = SCTitleUnLoad{} }
func (m *SCTitleUnLoad) String() string            { return proto.CompactTextString(m) }
func (*SCTitleUnLoad) ProtoMessage()               {}
func (*SCTitleUnLoad) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{8} }

func (m *SCTitleUnLoad) GetTitleWear() int32 {
	if m != nil && m.TitleWear != nil {
		return *m.TitleWear
	}
	return 0
}

type SCTitleAdd struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCTitleAdd) Reset()                    { *m = SCTitleAdd{} }
func (m *SCTitleAdd) String() string            { return proto.CompactTextString(m) }
func (*SCTitleAdd) ProtoMessage()               {}
func (*SCTitleAdd) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{9} }

func (m *SCTitleAdd) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type SCTitleRemove struct {
	TitleId          *int32 `protobuf:"varint,2,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCTitleRemove) Reset()                    { *m = SCTitleRemove{} }
func (m *SCTitleRemove) String() string            { return proto.CompactTextString(m) }
func (*SCTitleRemove) ProtoMessage()               {}
func (*SCTitleRemove) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{10} }

func (m *SCTitleRemove) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type CSTitleAddValidTime struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSTitleAddValidTime) Reset()                    { *m = CSTitleAddValidTime{} }
func (m *CSTitleAddValidTime) String() string            { return proto.CompactTextString(m) }
func (*CSTitleAddValidTime) ProtoMessage()               {}
func (*CSTitleAddValidTime) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{11} }

func (m *CSTitleAddValidTime) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type SCTitleAddValidTime struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	ValidTime        *int64 `protobuf:"varint,2,req,name=validTime" json:"validTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCTitleAddValidTime) Reset()                    { *m = SCTitleAddValidTime{} }
func (m *SCTitleAddValidTime) String() string            { return proto.CompactTextString(m) }
func (*SCTitleAddValidTime) ProtoMessage()               {}
func (*SCTitleAddValidTime) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{12} }

func (m *SCTitleAddValidTime) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

func (m *SCTitleAddValidTime) GetValidTime() int64 {
	if m != nil && m.ValidTime != nil {
		return *m.ValidTime
	}
	return 0
}

type CSTitleUpStar struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSTitleUpStar) Reset()                    { *m = CSTitleUpStar{} }
func (m *CSTitleUpStar) String() string            { return proto.CompactTextString(m) }
func (*CSTitleUpStar) ProtoMessage()               {}
func (*CSTitleUpStar) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{13} }

func (m *CSTitleUpStar) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

type SCTitleUpStar struct {
	TitleId          *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	StarLev          *int32 `protobuf:"varint,2,req,name=starLev" json:"starLev,omitempty"`
	Bless            *int32 `protobuf:"varint,3,req,name=bless" json:"bless,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCTitleUpStar) Reset()                    { *m = SCTitleUpStar{} }
func (m *SCTitleUpStar) String() string            { return proto.CompactTextString(m) }
func (*SCTitleUpStar) ProtoMessage()               {}
func (*SCTitleUpStar) Descriptor() ([]byte, []int) { return fileDescriptor116, []int{14} }

func (m *SCTitleUpStar) GetTitleId() int32 {
	if m != nil && m.TitleId != nil {
		return *m.TitleId
	}
	return 0
}

func (m *SCTitleUpStar) GetStarLev() int32 {
	if m != nil && m.StarLev != nil {
		return *m.StarLev
	}
	return 0
}

func (m *SCTitleUpStar) GetBless() int32 {
	if m != nil && m.Bless != nil {
		return *m.Bless
	}
	return 0
}

func init() {
	proto.RegisterType((*TitleInfo)(nil), "ui.TitleInfo")
	proto.RegisterType((*CSTitleGet)(nil), "ui.CSTitleGet")
	proto.RegisterType((*SCTitleGet)(nil), "ui.SCTitleGet")
	proto.RegisterType((*CSTitleActive)(nil), "ui.CSTitleActive")
	proto.RegisterType((*SCTitleActive)(nil), "ui.SCTitleActive")
	proto.RegisterType((*CSTitleWear)(nil), "ui.CSTitleWear")
	proto.RegisterType((*SCTitleWear)(nil), "ui.SCTitleWear")
	proto.RegisterType((*CSTitleUnLoad)(nil), "ui.CSTitleUnLoad")
	proto.RegisterType((*SCTitleUnLoad)(nil), "ui.SCTitleUnLoad")
	proto.RegisterType((*SCTitleAdd)(nil), "ui.SCTitleAdd")
	proto.RegisterType((*SCTitleRemove)(nil), "ui.SCTitleRemove")
	proto.RegisterType((*CSTitleAddValidTime)(nil), "ui.CSTitleAddValidTime")
	proto.RegisterType((*SCTitleAddValidTime)(nil), "ui.SCTitleAddValidTime")
	proto.RegisterType((*CSTitleUpStar)(nil), "ui.CSTitleUpStar")
	proto.RegisterType((*SCTitleUpStar)(nil), "ui.SCTitleUpStar")
}

func init() { proto.RegisterFile("title.proto", fileDescriptor116) }

var fileDescriptor116 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xcf, 0x6b, 0x83, 0x30,
	0x18, 0xc5, 0x38, 0x29, 0xfd, 0x9c, 0x94, 0xa5, 0x0c, 0xbc, 0xac, 0x84, 0x1c, 0x86, 0x27, 0x29,
	0xbb, 0xad, 0xa7, 0x49, 0x0f, 0xa5, 0xe0, 0x69, 0xb6, 0x1b, 0xec, 0xe6, 0x9a, 0x0c, 0x02, 0xb6,
	0x16, 0x4d, 0xfd, 0xfb, 0x47, 0xb2, 0x18, 0x57, 0x4c, 0x8f, 0xbe, 0xef, 0xf9, 0x7e, 0x29, 0x84,
	0x52, 0xc8, 0x8a, 0xa7, 0xe7, 0xa6, 0x96, 0x35, 0x46, 0x17, 0x41, 0xbf, 0x60, 0xba, 0x53, 0xd0,
	0xf6, 0xf4, 0x53, 0xe3, 0x19, 0x4c, 0xf4, 0x7d, 0xcb, 0x62, 0x8f, 0xa0, 0x24, 0xc0, 0x8f, 0x00,
	0xe5, 0x41, 0xc8, 0x8e, 0xef, 0xc4, 0x91, 0xc7, 0x88, 0xa0, 0xc4, 0x5f, 0x79, 0x4b, 0xfc, 0x00,
	0xd3, 0xae, 0xac, 0x04, 0xd3, 0xa8, 0xaf, 0x50, 0x8c, 0x61, 0xd2, 0xca, 0xb2, 0xc9, 0x79, 0x17,
	0xdf, 0xa9, 0x57, 0x57, 0xde, 0x92, 0xde, 0x03, 0xac, 0x0b, 0xad, 0xbe, 0xe1, 0x92, 0x66, 0x00,
	0xc5, 0xba, 0x7f, 0x52, 0x12, 0xda, 0xea, 0x93, 0x97, 0x8d, 0x31, 0x23, 0x06, 0xca, 0x45, 0x2b,
	0x63, 0x44, 0xfc, 0x24, 0x7c, 0x89, 0xd2, 0x8b, 0x48, 0x6d, 0x3e, 0x4a, 0x20, 0x32, 0x82, 0xd9,
	0x41, 0x8a, 0x8e, 0x8f, 0x02, 0xd3, 0x0d, 0x44, 0xc6, 0xe4, 0x06, 0x03, 0x63, 0x55, 0x49, 0x9d,
	0x86, 0x4a, 0x8e, 0x3e, 0x74, 0x01, 0xa1, 0xb1, 0x52, 0x09, 0xc7, 0x46, 0x0b, 0x08, 0x8d, 0x91,
	0xfb, 0x3e, 0xb3, 0x51, 0xf7, 0xa7, 0xbc, 0x2e, 0x19, 0xa5, 0x36, 0xd9, 0x1f, 0xe0, 0x58, 0x80,
	0x3e, 0xd9, 0x89, 0x32, 0xc6, 0xc6, 0x9a, 0xc4, 0x4a, 0xbc, 0xf3, 0x63, 0x7d, 0x5d, 0x0e, 0x69,
	0xc6, 0x33, 0xcc, 0xfb, 0x81, 0x18, 0xfb, 0xe8, 0x2b, 0x8d, 0x95, 0x5e, 0x61, 0x3e, 0x18, 0xdd,
	0xe6, 0x5d, 0x0f, 0xa3, 0xb7, 0xfa, 0xf7, 0x0d, 0xf6, 0xe7, 0x42, 0xba, 0xaa, 0xbf, 0x0d, 0x4d,
	0xdd, 0x0c, 0x05, 0xf4, 0x3f, 0x8b, 0xce, 0x8d, 0x23, 0x08, 0xbe, 0x2b, 0xde, 0xb6, 0x7a, 0xfc,
	0xe0, 0x37, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xb3, 0x51, 0xc6, 0xa6, 0x02, 0x00, 0x00,
}
