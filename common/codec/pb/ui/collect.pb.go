// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collect.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CSSceneCollect struct {
	NpcId            *int64 `protobuf:"varint,1,req,name=npcId" json:"npcId,omitempty"`
	CollectType      *int32 `protobuf:"varint,2,req,name=collectType" json:"collectType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSSceneCollect) Reset()                    { *m = CSSceneCollect{} }
func (m *CSSceneCollect) String() string            { return proto.CompactTextString(m) }
func (*CSSceneCollect) ProtoMessage()               {}
func (*CSSceneCollect) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{0} }

func (m *CSSceneCollect) GetNpcId() int64 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

func (m *CSSceneCollect) GetCollectType() int32 {
	if m != nil && m.CollectType != nil {
		return *m.CollectType
	}
	return 0
}

type SCSceneCollect struct {
	NpcId            *int64 `protobuf:"varint,1,req,name=npcId" json:"npcId,omitempty"`
	StartTime        *int64 `protobuf:"varint,2,req,name=startTime" json:"startTime,omitempty"`
	Success          *bool  `protobuf:"varint,3,req,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCSceneCollect) Reset()                    { *m = SCSceneCollect{} }
func (m *SCSceneCollect) String() string            { return proto.CompactTextString(m) }
func (*SCSceneCollect) ProtoMessage()               {}
func (*SCSceneCollect) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{1} }

func (m *SCSceneCollect) GetNpcId() int64 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

func (m *SCSceneCollect) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *SCSceneCollect) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type SCSceneCollectStop struct {
	NpcId            *int64 `protobuf:"varint,1,req,name=npcId" json:"npcId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCSceneCollectStop) Reset()                    { *m = SCSceneCollectStop{} }
func (m *SCSceneCollectStop) String() string            { return proto.CompactTextString(m) }
func (*SCSceneCollectStop) ProtoMessage()               {}
func (*SCSceneCollectStop) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{2} }

func (m *SCSceneCollectStop) GetNpcId() int64 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

type SCSceneCollectFinish struct {
	NpcId            *int64      `protobuf:"varint,1,req,name=npcId" json:"npcId,omitempty"`
	BiologyId        *int32      `protobuf:"varint,2,req,name=biologyId" json:"biologyId,omitempty"`
	DropInfoList     []*DropInfo `protobuf:"bytes,3,rep,name=dropInfoList" json:"dropInfoList,omitempty"`
	BossId           *int32      `protobuf:"varint,4,opt,name=bossId,def=-1" json:"bossId,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCSceneCollectFinish) Reset()                    { *m = SCSceneCollectFinish{} }
func (m *SCSceneCollectFinish) String() string            { return proto.CompactTextString(m) }
func (*SCSceneCollectFinish) ProtoMessage()               {}
func (*SCSceneCollectFinish) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{3} }

const Default_SCSceneCollectFinish_BossId int32 = -1

func (m *SCSceneCollectFinish) GetNpcId() int64 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

func (m *SCSceneCollectFinish) GetBiologyId() int32 {
	if m != nil && m.BiologyId != nil {
		return *m.BiologyId
	}
	return 0
}

func (m *SCSceneCollectFinish) GetDropInfoList() []*DropInfo {
	if m != nil {
		return m.DropInfoList
	}
	return nil
}

func (m *SCSceneCollectFinish) GetBossId() int32 {
	if m != nil && m.BossId != nil {
		return *m.BossId
	}
	return Default_SCSceneCollectFinish_BossId
}

type CSSceneCollectChooseResult struct {
	Result           *int32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSSceneCollectChooseResult) Reset()                    { *m = CSSceneCollectChooseResult{} }
func (m *CSSceneCollectChooseResult) String() string            { return proto.CompactTextString(m) }
func (*CSSceneCollectChooseResult) ProtoMessage()               {}
func (*CSSceneCollectChooseResult) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{4} }

func (m *CSSceneCollectChooseResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type SCSceneCollectChooseResult struct {
	NpcId            *int64 `protobuf:"varint,1,req,name=npcId" json:"npcId,omitempty"`
	Result           *int32 `protobuf:"varint,2,req,name=result" json:"result,omitempty"`
	Success          *bool  `protobuf:"varint,3,req,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCSceneCollectChooseResult) Reset()                    { *m = SCSceneCollectChooseResult{} }
func (m *SCSceneCollectChooseResult) String() string            { return proto.CompactTextString(m) }
func (*SCSceneCollectChooseResult) ProtoMessage()               {}
func (*SCSceneCollectChooseResult) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{5} }

func (m *SCSceneCollectChooseResult) GetNpcId() int64 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

func (m *SCSceneCollectChooseResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *SCSceneCollectChooseResult) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type CSSceneCollectMiZangGiveup struct {
	NpcId            *int64 `protobuf:"varint,1,req,name=npcId" json:"npcId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSSceneCollectMiZangGiveup) Reset()                    { *m = CSSceneCollectMiZangGiveup{} }
func (m *CSSceneCollectMiZangGiveup) String() string            { return proto.CompactTextString(m) }
func (*CSSceneCollectMiZangGiveup) ProtoMessage()               {}
func (*CSSceneCollectMiZangGiveup) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{6} }

func (m *CSSceneCollectMiZangGiveup) GetNpcId() int64 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

type SCSceneCollectMiZangGiveup struct {
	NpcId            *int64 `protobuf:"varint,1,req,name=npcId" json:"npcId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCSceneCollectMiZangGiveup) Reset()                    { *m = SCSceneCollectMiZangGiveup{} }
func (m *SCSceneCollectMiZangGiveup) String() string            { return proto.CompactTextString(m) }
func (*SCSceneCollectMiZangGiveup) ProtoMessage()               {}
func (*SCSceneCollectMiZangGiveup) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{7} }

func (m *SCSceneCollectMiZangGiveup) GetNpcId() int64 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

type CSSceneCollectMiZangOpen struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	NpcId            *int64 `protobuf:"varint,2,req,name=npcId" json:"npcId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSSceneCollectMiZangOpen) Reset()                    { *m = CSSceneCollectMiZangOpen{} }
func (m *CSSceneCollectMiZangOpen) String() string            { return proto.CompactTextString(m) }
func (*CSSceneCollectMiZangOpen) ProtoMessage()               {}
func (*CSSceneCollectMiZangOpen) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{8} }

func (m *CSSceneCollectMiZangOpen) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSSceneCollectMiZangOpen) GetNpcId() int64 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

type SCSceneCollectMiZangOpen struct {
	Type             *int32      `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	NpcId            *int64      `protobuf:"varint,2,req,name=npcId" json:"npcId,omitempty"`
	DropInfoList     []*DropInfo `protobuf:"bytes,3,rep,name=dropInfoList" json:"dropInfoList,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCSceneCollectMiZangOpen) Reset()                    { *m = SCSceneCollectMiZangOpen{} }
func (m *SCSceneCollectMiZangOpen) String() string            { return proto.CompactTextString(m) }
func (*SCSceneCollectMiZangOpen) ProtoMessage()               {}
func (*SCSceneCollectMiZangOpen) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{9} }

func (m *SCSceneCollectMiZangOpen) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *SCSceneCollectMiZangOpen) GetNpcId() int64 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

func (m *SCSceneCollectMiZangOpen) GetDropInfoList() []*DropInfo {
	if m != nil {
		return m.DropInfoList
	}
	return nil
}

func init() {
	proto.RegisterType((*CSSceneCollect)(nil), "ui.CSSceneCollect")
	proto.RegisterType((*SCSceneCollect)(nil), "ui.SCSceneCollect")
	proto.RegisterType((*SCSceneCollectStop)(nil), "ui.SCSceneCollectStop")
	proto.RegisterType((*SCSceneCollectFinish)(nil), "ui.SCSceneCollectFinish")
	proto.RegisterType((*CSSceneCollectChooseResult)(nil), "ui.CSSceneCollectChooseResult")
	proto.RegisterType((*SCSceneCollectChooseResult)(nil), "ui.SCSceneCollectChooseResult")
	proto.RegisterType((*CSSceneCollectMiZangGiveup)(nil), "ui.CSSceneCollectMiZangGiveup")
	proto.RegisterType((*SCSceneCollectMiZangGiveup)(nil), "ui.SCSceneCollectMiZangGiveup")
	proto.RegisterType((*CSSceneCollectMiZangOpen)(nil), "ui.CSSceneCollectMiZangOpen")
	proto.RegisterType((*SCSceneCollectMiZangOpen)(nil), "ui.SCSceneCollectMiZangOpen")
}

func init() { proto.RegisterFile("collect.proto", fileDescriptor20) }

var fileDescriptor20 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0xcf, 0x4b, 0xfb, 0x30,
	0x14, 0x67, 0xe9, 0xba, 0xef, 0xd7, 0xb7, 0xae, 0x62, 0xf4, 0x10, 0x7a, 0x2a, 0xf1, 0x52, 0x98,
	0x16, 0x14, 0x41, 0xf0, 0x5a, 0x51, 0x0a, 0x13, 0xc1, 0xee, 0xa4, 0xa7, 0x2d, 0x8d, 0x5b, 0xa0,
	0x26, 0xa1, 0x49, 0x85, 0xfd, 0xf7, 0xb2, 0x76, 0x30, 0xda, 0x95, 0xe9, 0x2d, 0x79, 0x7c, 0x7e,
	0xbd, 0xcf, 0x83, 0x09, 0x53, 0x45, 0xc1, 0x99, 0x8d, 0x75, 0xa9, 0xac, 0xc2, 0xa8, 0x12, 0x01,
	0xe4, 0xa5, 0xd2, 0xcd, 0x9f, 0xde, 0x81, 0x9f, 0x64, 0x19, 0xe3, 0x92, 0x27, 0x0d, 0x0e, 0x4f,
	0xc0, 0x95, 0x9a, 0xa5, 0x39, 0x19, 0x84, 0x28, 0x72, 0xf0, 0x39, 0x8c, 0x77, 0x0a, 0xf3, 0x8d,
	0xe6, 0x04, 0x85, 0x28, 0x72, 0x69, 0x02, 0x7e, 0x96, 0x1c, 0x63, 0x9d, 0xc1, 0x89, 0xb1, 0x8b,
	0xd2, 0xce, 0xc5, 0x57, 0xc3, 0x71, 0xf0, 0x29, 0xfc, 0x33, 0x15, 0x63, 0xdc, 0x18, 0xe2, 0x84,
	0x28, 0xfa, 0x4f, 0x2f, 0x01, 0xb7, 0x45, 0x32, 0xab, 0x74, 0x47, 0x88, 0x6a, 0xb8, 0x68, 0x83,
	0x9e, 0x84, 0x14, 0x66, 0xdd, 0xe3, 0xb7, 0x14, 0xaa, 0x50, 0xab, 0x4d, 0x9a, 0x37, 0x19, 0x31,
	0x05, 0x6f, 0xbb, 0x67, 0x2a, 0x3f, 0xd5, 0x4c, 0x18, 0x4b, 0x9c, 0xd0, 0x89, 0xc6, 0xb7, 0x5e,
	0x5c, 0x89, 0xf8, 0x71, 0x37, 0xc7, 0x18, 0x46, 0x4b, 0x65, 0x4c, 0x9a, 0x93, 0x61, 0x38, 0x88,
	0xdc, 0x07, 0x74, 0x7d, 0x43, 0xaf, 0x20, 0x68, 0x37, 0x92, 0xac, 0x95, 0x32, 0xfc, 0x8d, 0x9b,
	0xaa, 0xb0, 0xd8, 0x87, 0x51, 0x59, 0xbf, 0x6a, 0x63, 0x97, 0xce, 0x20, 0x68, 0xe7, 0x6b, 0xa1,
	0x3b, 0x29, 0xf7, 0xe4, 0x26, 0xe2, 0x41, 0x25, 0xd3, 0xae, 0xf7, 0x8b, 0x78, 0x5f, 0xc8, 0xd5,
	0xb3, 0xf8, 0xe6, 0xd5, 0x41, 0x35, 0xd3, 0xae, 0xf5, 0x31, 0xf0, 0x3d, 0x90, 0x3e, 0xe5, 0x57,
	0xcd, 0x25, 0xf6, 0x60, 0x68, 0xb7, 0xb7, 0xad, 0x37, 0xda, 0x13, 0xeb, 0xb3, 0xd1, 0x0f, 0x20,
	0x7d, 0x2e, 0xbf, 0x12, 0xff, 0xd2, 0xff, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0xf2, 0xaa,
	0x9b, 0x9d, 0x02, 0x00, 0x00,
}
