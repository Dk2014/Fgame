// Code generated by protoc-gen-go. DO NOT EDIT.
// source: emperor.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EmperorInfo struct {
	EmperorId        *int64  `protobuf:"varint,1,req,name=emperorId" json:"emperorId,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Sex              *int32  `protobuf:"varint,3,req,name=sex" json:"sex,omitempty"`
	SpouseName       *string `protobuf:"bytes,4,req,name=spouseName" json:"spouseName,omitempty"`
	Storage          *int64  `protobuf:"varint,5,req,name=storage" json:"storage,omitempty"`
	RobNum           *int64  `protobuf:"varint,6,req,name=robNum" json:"robNum,omitempty"`
	RobTime          *int64  `protobuf:"varint,7,req,name=robTime" json:"robTime,omitempty"`
	LastTime         *int64  `protobuf:"varint,8,req,name=lastTime" json:"lastTime,omitempty"`
	BoxNum           *int64  `protobuf:"varint,9,req,name=boxNum" json:"boxNum,omitempty"`
	BoxLastTime      *int64  `protobuf:"varint,10,req,name=boxLastTime" json:"boxLastTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EmperorInfo) Reset()                    { *m = EmperorInfo{} }
func (m *EmperorInfo) String() string            { return proto.CompactTextString(m) }
func (*EmperorInfo) ProtoMessage()               {}
func (*EmperorInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

func (m *EmperorInfo) GetEmperorId() int64 {
	if m != nil && m.EmperorId != nil {
		return *m.EmperorId
	}
	return 0
}

func (m *EmperorInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *EmperorInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *EmperorInfo) GetSpouseName() string {
	if m != nil && m.SpouseName != nil {
		return *m.SpouseName
	}
	return ""
}

func (m *EmperorInfo) GetStorage() int64 {
	if m != nil && m.Storage != nil {
		return *m.Storage
	}
	return 0
}

func (m *EmperorInfo) GetRobNum() int64 {
	if m != nil && m.RobNum != nil {
		return *m.RobNum
	}
	return 0
}

func (m *EmperorInfo) GetRobTime() int64 {
	if m != nil && m.RobTime != nil {
		return *m.RobTime
	}
	return 0
}

func (m *EmperorInfo) GetLastTime() int64 {
	if m != nil && m.LastTime != nil {
		return *m.LastTime
	}
	return 0
}

func (m *EmperorInfo) GetBoxNum() int64 {
	if m != nil && m.BoxNum != nil {
		return *m.BoxNum
	}
	return 0
}

func (m *EmperorInfo) GetBoxLastTime() int64 {
	if m != nil && m.BoxLastTime != nil {
		return *m.BoxLastTime
	}
	return 0
}

type EmperorRecord struct {
	Type             *int32      `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Name             *string     `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	RobbedName       *string     `protobuf:"bytes,3,req,name=robbedName" json:"robbedName,omitempty"`
	RobTime          *int64      `protobuf:"varint,4,req,name=robTime" json:"robTime,omitempty"`
	ItemList         []*ItemInfo `protobuf:"bytes,5,rep,name=itemList" json:"itemList,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *EmperorRecord) Reset()                    { *m = EmperorRecord{} }
func (m *EmperorRecord) String() string            { return proto.CompactTextString(m) }
func (*EmperorRecord) ProtoMessage()               {}
func (*EmperorRecord) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

func (m *EmperorRecord) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *EmperorRecord) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *EmperorRecord) GetRobbedName() string {
	if m != nil && m.RobbedName != nil {
		return *m.RobbedName
	}
	return ""
}

func (m *EmperorRecord) GetRobTime() int64 {
	if m != nil && m.RobTime != nil {
		return *m.RobTime
	}
	return 0
}

func (m *EmperorRecord) GetItemList() []*ItemInfo {
	if m != nil {
		return m.ItemList
	}
	return nil
}

type CSEmperorGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSEmperorGet) Reset()                    { *m = CSEmperorGet{} }
func (m *CSEmperorGet) String() string            { return proto.CompactTextString(m) }
func (*CSEmperorGet) ProtoMessage()               {}
func (*CSEmperorGet) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{2} }

type SCEmperorGet struct {
	EmperorInfo      *EmperorInfo `protobuf:"bytes,1,req,name=emperorInfo" json:"emperorInfo,omitempty"`
	WorshipNum       *int32       `protobuf:"varint,2,req,name=worshipNum" json:"worshipNum,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SCEmperorGet) Reset()                    { *m = SCEmperorGet{} }
func (m *SCEmperorGet) String() string            { return proto.CompactTextString(m) }
func (*SCEmperorGet) ProtoMessage()               {}
func (*SCEmperorGet) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{3} }

func (m *SCEmperorGet) GetEmperorInfo() *EmperorInfo {
	if m != nil {
		return m.EmperorInfo
	}
	return nil
}

func (m *SCEmperorGet) GetWorshipNum() int32 {
	if m != nil && m.WorshipNum != nil {
		return *m.WorshipNum
	}
	return 0
}

type CSEmperorWorship struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSEmperorWorship) Reset()                    { *m = CSEmperorWorship{} }
func (m *CSEmperorWorship) String() string            { return proto.CompactTextString(m) }
func (*CSEmperorWorship) ProtoMessage()               {}
func (*CSEmperorWorship) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{4} }

type SCEmperorWorship struct {
	Num              *int32 `protobuf:"varint,1,req,name=num" json:"num,omitempty"`
	Storage          *int64 `protobuf:"varint,2,req,name=storage" json:"storage,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCEmperorWorship) Reset()                    { *m = SCEmperorWorship{} }
func (m *SCEmperorWorship) String() string            { return proto.CompactTextString(m) }
func (*SCEmperorWorship) ProtoMessage()               {}
func (*SCEmperorWorship) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{5} }

func (m *SCEmperorWorship) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *SCEmperorWorship) GetStorage() int64 {
	if m != nil && m.Storage != nil {
		return *m.Storage
	}
	return 0
}

type CSEmperorStorageGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSEmperorStorageGet) Reset()                    { *m = CSEmperorStorageGet{} }
func (m *CSEmperorStorageGet) String() string            { return proto.CompactTextString(m) }
func (*CSEmperorStorageGet) ProtoMessage()               {}
func (*CSEmperorStorageGet) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{6} }

type SCEmperorStorageGet struct {
	Success          *bool        `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	EmperorInfo      *EmperorInfo `protobuf:"bytes,2,req,name=emperorInfo" json:"emperorInfo,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SCEmperorStorageGet) Reset()                    { *m = SCEmperorStorageGet{} }
func (m *SCEmperorStorageGet) String() string            { return proto.CompactTextString(m) }
func (*SCEmperorStorageGet) ProtoMessage()               {}
func (*SCEmperorStorageGet) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{7} }

func (m *SCEmperorStorageGet) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *SCEmperorStorageGet) GetEmperorInfo() *EmperorInfo {
	if m != nil {
		return m.EmperorInfo
	}
	return nil
}

type CSEmperorRob struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSEmperorRob) Reset()                    { *m = CSEmperorRob{} }
func (m *CSEmperorRob) String() string            { return proto.CompactTextString(m) }
func (*CSEmperorRob) ProtoMessage()               {}
func (*CSEmperorRob) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{8} }

type SCEmperorRob struct {
	Success          *bool        `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	EmperorInfo      *EmperorInfo `protobuf:"bytes,2,req,name=emperorInfo" json:"emperorInfo,omitempty"`
	ItemList         []*ItemInfo  `protobuf:"bytes,3,rep,name=itemList" json:"itemList,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SCEmperorRob) Reset()                    { *m = SCEmperorRob{} }
func (m *SCEmperorRob) String() string            { return proto.CompactTextString(m) }
func (*SCEmperorRob) ProtoMessage()               {}
func (*SCEmperorRob) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{9} }

func (m *SCEmperorRob) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *SCEmperorRob) GetEmperorInfo() *EmperorInfo {
	if m != nil {
		return m.EmperorInfo
	}
	return nil
}

func (m *SCEmperorRob) GetItemList() []*ItemInfo {
	if m != nil {
		return m.ItemList
	}
	return nil
}

type CSEmperorRecords struct {
	LogTime          *int64 `protobuf:"varint,1,req,name=logTime" json:"logTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSEmperorRecords) Reset()                    { *m = CSEmperorRecords{} }
func (m *CSEmperorRecords) String() string            { return proto.CompactTextString(m) }
func (*CSEmperorRecords) ProtoMessage()               {}
func (*CSEmperorRecords) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{10} }

func (m *CSEmperorRecords) GetLogTime() int64 {
	if m != nil && m.LogTime != nil {
		return *m.LogTime
	}
	return 0
}

type SCEmperorRecords struct {
	RecordList       []*EmperorRecord `protobuf:"bytes,1,rep,name=recordList" json:"recordList,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SCEmperorRecords) Reset()                    { *m = SCEmperorRecords{} }
func (m *SCEmperorRecords) String() string            { return proto.CompactTextString(m) }
func (*SCEmperorRecords) ProtoMessage()               {}
func (*SCEmperorRecords) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{11} }

func (m *SCEmperorRecords) GetRecordList() []*EmperorRecord {
	if m != nil {
		return m.RecordList
	}
	return nil
}

type SCEmperorRobbed struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCEmperorRobbed) Reset()                    { *m = SCEmperorRobbed{} }
func (m *SCEmperorRobbed) String() string            { return proto.CompactTextString(m) }
func (*SCEmperorRobbed) ProtoMessage()               {}
func (*SCEmperorRobbed) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{12} }

type CSEmperorOpenBox struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSEmperorOpenBox) Reset()                    { *m = CSEmperorOpenBox{} }
func (m *CSEmperorOpenBox) String() string            { return proto.CompactTextString(m) }
func (*CSEmperorOpenBox) ProtoMessage()               {}
func (*CSEmperorOpenBox) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{13} }

type SCEmperorOPenBox struct {
	EmperorInfo      *EmperorInfo `protobuf:"bytes,1,req,name=emperorInfo" json:"emperorInfo,omitempty"`
	ItemList         []*ItemInfo  `protobuf:"bytes,2,rep,name=itemList" json:"itemList,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SCEmperorOPenBox) Reset()                    { *m = SCEmperorOPenBox{} }
func (m *SCEmperorOPenBox) String() string            { return proto.CompactTextString(m) }
func (*SCEmperorOPenBox) ProtoMessage()               {}
func (*SCEmperorOPenBox) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{14} }

func (m *SCEmperorOPenBox) GetEmperorInfo() *EmperorInfo {
	if m != nil {
		return m.EmperorInfo
	}
	return nil
}

func (m *SCEmperorOPenBox) GetItemList() []*ItemInfo {
	if m != nil {
		return m.ItemList
	}
	return nil
}

func init() {
	proto.RegisterType((*EmperorInfo)(nil), "ui.EmperorInfo")
	proto.RegisterType((*EmperorRecord)(nil), "ui.EmperorRecord")
	proto.RegisterType((*CSEmperorGet)(nil), "ui.CSEmperorGet")
	proto.RegisterType((*SCEmperorGet)(nil), "ui.SCEmperorGet")
	proto.RegisterType((*CSEmperorWorship)(nil), "ui.CSEmperorWorship")
	proto.RegisterType((*SCEmperorWorship)(nil), "ui.SCEmperorWorship")
	proto.RegisterType((*CSEmperorStorageGet)(nil), "ui.CSEmperorStorageGet")
	proto.RegisterType((*SCEmperorStorageGet)(nil), "ui.SCEmperorStorageGet")
	proto.RegisterType((*CSEmperorRob)(nil), "ui.CSEmperorRob")
	proto.RegisterType((*SCEmperorRob)(nil), "ui.SCEmperorRob")
	proto.RegisterType((*CSEmperorRecords)(nil), "ui.CSEmperorRecords")
	proto.RegisterType((*SCEmperorRecords)(nil), "ui.SCEmperorRecords")
	proto.RegisterType((*SCEmperorRobbed)(nil), "ui.SCEmperorRobbed")
	proto.RegisterType((*CSEmperorOpenBox)(nil), "ui.CSEmperorOpenBox")
	proto.RegisterType((*SCEmperorOPenBox)(nil), "ui.SCEmperorOPenBox")
}

func init() { proto.RegisterFile("emperor.proto", fileDescriptor28) }

var fileDescriptor28 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x8a, 0x13, 0x41,
	0x10, 0xc6, 0x49, 0x4f, 0x66, 0x93, 0xd4, 0x64, 0x37, 0x49, 0x07, 0x61, 0xf0, 0x20, 0xa1, 0x55,
	0xc8, 0x29, 0xc8, 0xde, 0xbc, 0xba, 0x88, 0x06, 0xc2, 0xae, 0x24, 0x82, 0x5e, 0xd3, 0x49, 0xb9,
	0x0e, 0xec, 0xa4, 0x86, 0xee, 0x1e, 0x8c, 0x6f, 0xe6, 0xe3, 0x49, 0xd7, 0xfc, 0x49, 0x67, 0xdd,
	0x83, 0xec, 0x6d, 0xaa, 0xba, 0xea, 0xab, 0xaf, 0x7e, 0x35, 0x70, 0x89, 0x79, 0x81, 0x86, 0xcc,
	0xa2, 0x30, 0xe4, 0x48, 0x8a, 0x32, 0x7b, 0x09, 0x99, 0xc3, 0xbc, 0x8a, 0xd5, 0x9f, 0x0e, 0x24,
	0x1f, 0xab, 0x8a, 0xe5, 0xe1, 0x07, 0xc9, 0x09, 0x0c, 0xea, 0x86, 0xe5, 0x3e, 0xed, 0xcc, 0xc4,
	0x3c, 0x92, 0x43, 0xe8, 0x1e, 0xb6, 0x39, 0xa6, 0x62, 0x26, 0xe6, 0x03, 0x99, 0x40, 0x64, 0xf1,
	0x98, 0x46, 0x33, 0x31, 0x8f, 0xa5, 0x04, 0xb0, 0x05, 0x95, 0x16, 0x6f, 0x7d, 0x41, 0x97, 0x0b,
	0x46, 0xd0, 0xb3, 0x8e, 0xcc, 0xf6, 0x1e, 0xd3, 0x98, 0xfb, 0xaf, 0xe0, 0xc2, 0x90, 0xbe, 0x2d,
	0xf3, 0xf4, 0x82, 0xe3, 0x11, 0xf4, 0x0c, 0xe9, 0xaf, 0x59, 0x8e, 0x69, 0x8f, 0x13, 0x63, 0xe8,
	0x3f, 0x6c, 0xad, 0xe3, 0x4c, 0xbf, 0x69, 0xd1, 0x74, 0xf4, 0x2d, 0x03, 0x8e, 0xa7, 0x90, 0x68,
	0x3a, 0xae, 0x9a, 0x22, 0xf0, 0x49, 0x55, 0xc0, 0x65, 0xed, 0x7c, 0x8d, 0x3b, 0x32, 0x7b, 0x6f,
	0xd4, 0xfd, 0x2e, 0x90, 0x6d, 0xc7, 0x8f, 0x6c, 0x4b, 0x00, 0x43, 0x5a, 0xe3, 0x9e, 0x9d, 0x46,
	0x8d, 0xd3, 0xc6, 0x48, 0x97, 0xc7, 0xbc, 0x82, 0xbe, 0x47, 0xb3, 0xca, 0xac, 0x4b, 0xe3, 0x59,
	0x34, 0x4f, 0xae, 0x87, 0x8b, 0x32, 0x5b, 0x2c, 0x1d, 0xe6, 0x1e, 0x8e, 0xba, 0x82, 0xe1, 0xcd,
	0xa6, 0x9e, 0xf9, 0x09, 0x9d, 0xfa, 0x0c, 0xc3, 0xcd, 0xcd, 0x29, 0x96, 0x6f, 0x20, 0xc1, 0x13,
	0x4b, 0xf6, 0x91, 0x5c, 0x8f, 0xbc, 0x44, 0x88, 0x58, 0x02, 0xfc, 0x22, 0x63, 0x7f, 0x66, 0x85,
	0x5f, 0xd0, 0xdb, 0x8b, 0x95, 0x84, 0x71, 0xab, 0xfc, 0xad, 0x7a, 0x54, 0xef, 0x60, 0xdc, 0xaa,
	0xd7, 0x39, 0x4f, 0xff, 0x50, 0xe6, 0xf5, 0x86, 0x01, 0x69, 0xc1, 0x44, 0x5e, 0xc0, 0xb4, 0x55,
	0xd9, 0x54, 0x2f, 0xde, 0xe6, 0x0a, 0xa6, 0xad, 0xd0, 0x29, 0xcd, 0xed, 0xe5, 0x6e, 0x87, 0xd6,
	0xb2, 0x5e, 0xff, 0xb1, 0x7d, 0xf1, 0xa4, 0xfd, 0x33, 0x08, 0x6b, 0xd2, 0x0a, 0x03, 0x08, 0x6b,
	0xd2, 0xcf, 0x94, 0x3d, 0x63, 0x1f, 0x3d, 0xc1, 0xfe, 0x75, 0x40, 0xa8, 0xba, 0xb7, 0xf5, 0xa3,
	0x1e, 0xe8, 0x9e, 0x0f, 0xc8, 0xbf, 0xaa, 0x7a, 0x1f, 0x20, 0x6b, 0x8a, 0xde, 0x02, 0x18, 0xfe,
	0x64, 0xe9, 0x0e, 0x4b, 0x4f, 0x82, 0xe9, 0x55, 0x9d, 0x9a, 0xc0, 0x28, 0x5c, 0x43, 0xe3, 0xfe,
	0xec, 0x28, 0x77, 0x05, 0x1e, 0x3e, 0xd0, 0x51, 0x7d, 0x0f, 0x26, 0xdc, 0x7d, 0xe1, 0xdc, 0x7f,
	0x9e, 0x3d, 0x5c, 0x50, 0xfc, 0xbb, 0xe0, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x04, 0x96, 0x67,
	0x35, 0xa9, 0x03, 0x00, 0x00,
}
