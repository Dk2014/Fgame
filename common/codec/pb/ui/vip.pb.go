// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vip.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SCVipInfoNotice struct {
	VipLevel           *int32  `protobuf:"varint,1,req,name=vipLevel" json:"vipLevel,omitempty"`
	VipStar            *int32  `protobuf:"varint,2,req,name=vipStar" json:"vipStar,omitempty"`
	ChargeNum          *int32  `protobuf:"varint,3,req,name=chargeNum" json:"chargeNum,omitempty"`
	GiftRecordList     []int32 `protobuf:"varint,4,rep,name=giftRecordList" json:"giftRecordList,omitempty"`
	FreeGiftRecordList []int32 `protobuf:"varint,5,rep,name=freeGiftRecordList" json:"freeGiftRecordList,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *SCVipInfoNotice) Reset()                    { *m = SCVipInfoNotice{} }
func (m *SCVipInfoNotice) String() string            { return proto.CompactTextString(m) }
func (*SCVipInfoNotice) ProtoMessage()               {}
func (*SCVipInfoNotice) Descriptor() ([]byte, []int) { return fileDescriptor124, []int{0} }

func (m *SCVipInfoNotice) GetVipLevel() int32 {
	if m != nil && m.VipLevel != nil {
		return *m.VipLevel
	}
	return 0
}

func (m *SCVipInfoNotice) GetVipStar() int32 {
	if m != nil && m.VipStar != nil {
		return *m.VipStar
	}
	return 0
}

func (m *SCVipInfoNotice) GetChargeNum() int32 {
	if m != nil && m.ChargeNum != nil {
		return *m.ChargeNum
	}
	return 0
}

func (m *SCVipInfoNotice) GetGiftRecordList() []int32 {
	if m != nil {
		return m.GiftRecordList
	}
	return nil
}

func (m *SCVipInfoNotice) GetFreeGiftRecordList() []int32 {
	if m != nil {
		return m.FreeGiftRecordList
	}
	return nil
}

type CSVipGiftBuy struct {
	GiftLevel        *int32 `protobuf:"varint,1,req,name=giftLevel" json:"giftLevel,omitempty"`
	GiftStar         *int32 `protobuf:"varint,2,req,name=giftStar" json:"giftStar,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVipGiftBuy) Reset()                    { *m = CSVipGiftBuy{} }
func (m *CSVipGiftBuy) String() string            { return proto.CompactTextString(m) }
func (*CSVipGiftBuy) ProtoMessage()               {}
func (*CSVipGiftBuy) Descriptor() ([]byte, []int) { return fileDescriptor124, []int{1} }

func (m *CSVipGiftBuy) GetGiftLevel() int32 {
	if m != nil && m.GiftLevel != nil {
		return *m.GiftLevel
	}
	return 0
}

func (m *CSVipGiftBuy) GetGiftStar() int32 {
	if m != nil && m.GiftStar != nil {
		return *m.GiftStar
	}
	return 0
}

type SCVipGiftBuy struct {
	GiftLevel        *int32      `protobuf:"varint,1,req,name=giftLevel" json:"giftLevel,omitempty"`
	GiftStar         *int32      `protobuf:"varint,2,req,name=giftStar" json:"giftStar,omitempty"`
	DropList         []*DropInfo `protobuf:"bytes,3,rep,name=dropList" json:"dropList,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCVipGiftBuy) Reset()                    { *m = SCVipGiftBuy{} }
func (m *SCVipGiftBuy) String() string            { return proto.CompactTextString(m) }
func (*SCVipGiftBuy) ProtoMessage()               {}
func (*SCVipGiftBuy) Descriptor() ([]byte, []int) { return fileDescriptor124, []int{2} }

func (m *SCVipGiftBuy) GetGiftLevel() int32 {
	if m != nil && m.GiftLevel != nil {
		return *m.GiftLevel
	}
	return 0
}

func (m *SCVipGiftBuy) GetGiftStar() int32 {
	if m != nil && m.GiftStar != nil {
		return *m.GiftStar
	}
	return 0
}

func (m *SCVipGiftBuy) GetDropList() []*DropInfo {
	if m != nil {
		return m.DropList
	}
	return nil
}

type CSReceiveFreeGift struct {
	GiftLevel        *int32 `protobuf:"varint,1,req,name=giftLevel" json:"giftLevel,omitempty"`
	GiftStar         *int32 `protobuf:"varint,2,req,name=giftStar" json:"giftStar,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSReceiveFreeGift) Reset()                    { *m = CSReceiveFreeGift{} }
func (m *CSReceiveFreeGift) String() string            { return proto.CompactTextString(m) }
func (*CSReceiveFreeGift) ProtoMessage()               {}
func (*CSReceiveFreeGift) Descriptor() ([]byte, []int) { return fileDescriptor124, []int{3} }

func (m *CSReceiveFreeGift) GetGiftLevel() int32 {
	if m != nil && m.GiftLevel != nil {
		return *m.GiftLevel
	}
	return 0
}

func (m *CSReceiveFreeGift) GetGiftStar() int32 {
	if m != nil && m.GiftStar != nil {
		return *m.GiftStar
	}
	return 0
}

type SCReceiveFreeGift struct {
	DropList         []*DropInfo `protobuf:"bytes,1,rep,name=dropList" json:"dropList,omitempty"`
	GiftLevel        *int32      `protobuf:"varint,2,req,name=giftLevel" json:"giftLevel,omitempty"`
	GiftStar         *int32      `protobuf:"varint,3,req,name=giftStar" json:"giftStar,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCReceiveFreeGift) Reset()                    { *m = SCReceiveFreeGift{} }
func (m *SCReceiveFreeGift) String() string            { return proto.CompactTextString(m) }
func (*SCReceiveFreeGift) ProtoMessage()               {}
func (*SCReceiveFreeGift) Descriptor() ([]byte, []int) { return fileDescriptor124, []int{4} }

func (m *SCReceiveFreeGift) GetDropList() []*DropInfo {
	if m != nil {
		return m.DropList
	}
	return nil
}

func (m *SCReceiveFreeGift) GetGiftLevel() int32 {
	if m != nil && m.GiftLevel != nil {
		return *m.GiftLevel
	}
	return 0
}

func (m *SCReceiveFreeGift) GetGiftStar() int32 {
	if m != nil && m.GiftStar != nil {
		return *m.GiftStar
	}
	return 0
}

func init() {
	proto.RegisterType((*SCVipInfoNotice)(nil), "ui.SCVipInfoNotice")
	proto.RegisterType((*CSVipGiftBuy)(nil), "ui.CSVipGiftBuy")
	proto.RegisterType((*SCVipGiftBuy)(nil), "ui.SCVipGiftBuy")
	proto.RegisterType((*CSReceiveFreeGift)(nil), "ui.CSReceiveFreeGift")
	proto.RegisterType((*SCReceiveFreeGift)(nil), "ui.SCReceiveFreeGift")
}

func init() { proto.RegisterFile("vip.proto", fileDescriptor124) }

var fileDescriptor124 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x69, 0x62, 0x30, 0x1d, 0x83, 0x6d, 0xf6, 0x20, 0x21, 0x07, 0x09, 0x39, 0xe5, 0x94,
	0x83, 0x5e, 0x3c, 0x1b, 0x51, 0x84, 0xd2, 0x43, 0x17, 0x8a, 0xd7, 0x92, 0x4e, 0xea, 0x80, 0xba,
	0xcb, 0xb8, 0xbb, 0x52, 0xfc, 0xf3, 0xb2, 0x6b, 0xc1, 0xd6, 0x5e, 0xf4, 0xb8, 0xef, 0x31, 0xef,
	0x7b, 0xfb, 0x60, 0xec, 0x48, 0xb7, 0x9a, 0x95, 0x51, 0x22, 0xb2, 0x54, 0xc2, 0x9a, 0xd5, 0xee,
	0x5d, 0xe6, 0x8c, 0x1f, 0x9a, 0x95, 0x46, 0x36, 0xdb, 0x6f, 0xa9, 0xfe, 0x84, 0x89, 0xec, 0x96,
	0xa4, 0x1f, 0xdf, 0x06, 0x35, 0x57, 0x86, 0x7a, 0x14, 0x53, 0x48, 0x1d, 0xe9, 0x19, 0x3a, 0x7c,
	0x29, 0x46, 0x55, 0xd4, 0x24, 0x62, 0x02, 0xa7, 0x8e, 0xb4, 0x34, 0x2b, 0x2e, 0xa2, 0x20, 0xe4,
	0x30, 0xee, 0x9f, 0x57, 0xbc, 0xc1, 0xb9, 0x7d, 0x2d, 0xe2, 0x20, 0x5d, 0xc0, 0xf9, 0x86, 0x06,
	0xb3, 0xc0, 0x5e, 0xf1, 0x7a, 0x46, 0xef, 0xa6, 0x38, 0xa9, 0xe2, 0x26, 0x11, 0x25, 0x88, 0x81,
	0x11, 0x1f, 0x0e, 0xbd, 0xc4, 0x7b, 0xf5, 0x35, 0x64, 0x9d, 0x5c, 0x92, 0xf6, 0xe6, 0xad, 0xdd,
	0xfa, 0x58, 0x9f, 0xb1, 0x8f, 0x9e, 0x42, 0xea, 0xa5, 0x1f, 0x76, 0x2d, 0x21, 0x0b, 0x8d, 0xff,
	0x73, 0x24, 0x2e, 0x21, 0xf5, 0x3b, 0x04, 0x76, 0x5c, 0xc5, 0xcd, 0xd9, 0x55, 0xd6, 0x5a, 0x6a,
	0xef, 0x58, 0x85, 0x9f, 0xd7, 0x37, 0x90, 0x77, 0x72, 0x81, 0x3d, 0x92, 0xc3, 0xfb, 0x5d, 0xdd,
	0xbf, 0xd5, 0x79, 0x82, 0x5c, 0x76, 0xbf, 0x2f, 0xf7, 0x71, 0xa3, 0x63, 0xdc, 0x61, 0x72, 0x74,
	0x94, 0x1c, 0x16, 0xfd, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x02, 0xeb, 0xff, 0xc9, 0x01, 0x00,
	0x00,
}
