// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scene.proto

package scene

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CSPing struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSPing) Reset()                    { *m = CSPing{} }
func (m *CSPing) String() string            { return proto.CompactTextString(m) }
func (*CSPing) ProtoMessage()               {}
func (*CSPing) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

type SCPing struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPing) Reset()                    { *m = SCPing{} }
func (m *SCPing) String() string            { return proto.CompactTextString(m) }
func (*SCPing) ProtoMessage()               {}
func (*SCPing) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

type CSEnterScene struct {
	MapId            *int32    `protobuf:"varint,1,req,name=mapId" json:"mapId,omitempty"`
	Pos              *Position `protobuf:"bytes,2,opt,name=pos" json:"pos,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CSEnterScene) Reset()                    { *m = CSEnterScene{} }
func (m *CSEnterScene) String() string            { return proto.CompactTextString(m) }
func (*CSEnterScene) ProtoMessage()               {}
func (*CSEnterScene) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *CSEnterScene) GetMapId() int32 {
	if m != nil && m.MapId != nil {
		return *m.MapId
	}
	return 0
}

func (m *CSEnterScene) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

type SCEnterScene struct {
	MapId            *int32           `protobuf:"varint,1,req,name=mapId" json:"mapId,omitempty"`
	Pos              *Position        `protobuf:"bytes,2,req,name=pos" json:"pos,omitempty"`
	PlayerData       *ScenePlayerData `protobuf:"bytes,3,req,name=playerData" json:"playerData,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SCEnterScene) Reset()                    { *m = SCEnterScene{} }
func (m *SCEnterScene) String() string            { return proto.CompactTextString(m) }
func (*SCEnterScene) ProtoMessage()               {}
func (*SCEnterScene) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *SCEnterScene) GetMapId() int32 {
	if m != nil && m.MapId != nil {
		return *m.MapId
	}
	return 0
}

func (m *SCEnterScene) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *SCEnterScene) GetPlayerData() *ScenePlayerData {
	if m != nil {
		return m.PlayerData
	}
	return nil
}

type SCObjectEnterScope struct {
	PlayerDataList   []*ScenePlayerData  `protobuf:"bytes,1,rep,name=playerDataList" json:"playerDataList,omitempty"`
	MonsterDataList  []*SceneMonsterData `protobuf:"bytes,2,rep,name=monsterDataList" json:"monsterDataList,omitempty"`
	ItemDataList     []*SceneItemData    `protobuf:"bytes,3,rep,name=itemDataList" json:"itemDataList,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *SCObjectEnterScope) Reset()                    { *m = SCObjectEnterScope{} }
func (m *SCObjectEnterScope) String() string            { return proto.CompactTextString(m) }
func (*SCObjectEnterScope) ProtoMessage()               {}
func (*SCObjectEnterScope) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *SCObjectEnterScope) GetPlayerDataList() []*ScenePlayerData {
	if m != nil {
		return m.PlayerDataList
	}
	return nil
}

func (m *SCObjectEnterScope) GetMonsterDataList() []*SceneMonsterData {
	if m != nil {
		return m.MonsterDataList
	}
	return nil
}

func (m *SCObjectEnterScope) GetItemDataList() []*SceneItemData {
	if m != nil {
		return m.ItemDataList
	}
	return nil
}

type ExitObject struct {
	Uid              *int64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	ObjecType        *int32 `protobuf:"varint,2,req,name=objecType" json:"objecType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ExitObject) Reset()                    { *m = ExitObject{} }
func (m *ExitObject) String() string            { return proto.CompactTextString(m) }
func (*ExitObject) ProtoMessage()               {}
func (*ExitObject) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *ExitObject) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *ExitObject) GetObjecType() int32 {
	if m != nil && m.ObjecType != nil {
		return *m.ObjecType
	}
	return 0
}

type SCObjectExitScope struct {
	ExitObjectList   []*ExitObject `protobuf:"bytes,1,rep,name=exitObjectList" json:"exitObjectList,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SCObjectExitScope) Reset()                    { *m = SCObjectExitScope{} }
func (m *SCObjectExitScope) String() string            { return proto.CompactTextString(m) }
func (*SCObjectExitScope) ProtoMessage()               {}
func (*SCObjectExitScope) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *SCObjectExitScope) GetExitObjectList() []*ExitObject {
	if m != nil {
		return m.ExitObjectList
	}
	return nil
}

type ObjectMoveData struct {
	Uid              *int64    `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	ObjecType        *int32    `protobuf:"varint,2,req,name=objecType" json:"objecType,omitempty"`
	Pos              *Position `protobuf:"bytes,3,req,name=pos" json:"pos,omitempty"`
	MoveSpeed        *float32  `protobuf:"fixed32,4,req,name=moveSpeed" json:"moveSpeed,omitempty"`
	Angle            *float32  `protobuf:"fixed32,5,req,name=angle" json:"angle,omitempty"`
	MoveType         *int32    `protobuf:"varint,6,req,name=moveType" json:"moveType,omitempty"`
	Flag             *bool     `protobuf:"varint,7,opt,name=flag" json:"flag,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ObjectMoveData) Reset()                    { *m = ObjectMoveData{} }
func (m *ObjectMoveData) String() string            { return proto.CompactTextString(m) }
func (*ObjectMoveData) ProtoMessage()               {}
func (*ObjectMoveData) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *ObjectMoveData) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *ObjectMoveData) GetObjecType() int32 {
	if m != nil && m.ObjecType != nil {
		return *m.ObjecType
	}
	return 0
}

func (m *ObjectMoveData) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *ObjectMoveData) GetMoveSpeed() float32 {
	if m != nil && m.MoveSpeed != nil {
		return *m.MoveSpeed
	}
	return 0
}

func (m *ObjectMoveData) GetAngle() float32 {
	if m != nil && m.Angle != nil {
		return *m.Angle
	}
	return 0
}

func (m *ObjectMoveData) GetMoveType() int32 {
	if m != nil && m.MoveType != nil {
		return *m.MoveType
	}
	return 0
}

func (m *ObjectMoveData) GetFlag() bool {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return false
}

type CSObjectMove struct {
	Pos              *Position `protobuf:"bytes,1,req,name=pos" json:"pos,omitempty"`
	MoveSpeed        *float32  `protobuf:"fixed32,2,req,name=moveSpeed" json:"moveSpeed,omitempty"`
	Angle            *float32  `protobuf:"fixed32,3,req,name=angle" json:"angle,omitempty"`
	MoveType         *int32    `protobuf:"varint,4,req,name=moveType" json:"moveType,omitempty"`
	Uid              *int64    `protobuf:"varint,5,req,name=uid" json:"uid,omitempty"`
	Flag             *bool     `protobuf:"varint,6,opt,name=flag" json:"flag,omitempty"`
	CurPos           *Position `protobuf:"bytes,7,opt,name=curPos" json:"curPos,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CSObjectMove) Reset()                    { *m = CSObjectMove{} }
func (m *CSObjectMove) String() string            { return proto.CompactTextString(m) }
func (*CSObjectMove) ProtoMessage()               {}
func (*CSObjectMove) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *CSObjectMove) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CSObjectMove) GetMoveSpeed() float32 {
	if m != nil && m.MoveSpeed != nil {
		return *m.MoveSpeed
	}
	return 0
}

func (m *CSObjectMove) GetAngle() float32 {
	if m != nil && m.Angle != nil {
		return *m.Angle
	}
	return 0
}

func (m *CSObjectMove) GetMoveType() int32 {
	if m != nil && m.MoveType != nil {
		return *m.MoveType
	}
	return 0
}

func (m *CSObjectMove) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *CSObjectMove) GetFlag() bool {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return false
}

func (m *CSObjectMove) GetCurPos() *Position {
	if m != nil {
		return m.CurPos
	}
	return nil
}

type SCObjectMove struct {
	MoveData         *ObjectMoveData `protobuf:"bytes,1,req,name=moveData" json:"moveData,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SCObjectMove) Reset()                    { *m = SCObjectMove{} }
func (m *SCObjectMove) String() string            { return proto.CompactTextString(m) }
func (*SCObjectMove) ProtoMessage()               {}
func (*SCObjectMove) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *SCObjectMove) GetMoveData() *ObjectMoveData {
	if m != nil {
		return m.MoveData
	}
	return nil
}

type ObjectAttackData struct {
	Uid              *int64    `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	ObjecType        *int32    `protobuf:"varint,2,req,name=objecType" json:"objecType,omitempty"`
	Pos              *Position `protobuf:"bytes,3,req,name=pos" json:"pos,omitempty"`
	Angle            *float32  `protobuf:"fixed32,4,req,name=angle" json:"angle,omitempty"`
	SkillId          *int32    `protobuf:"varint,5,req,name=skillId" json:"skillId,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ObjectAttackData) Reset()                    { *m = ObjectAttackData{} }
func (m *ObjectAttackData) String() string            { return proto.CompactTextString(m) }
func (*ObjectAttackData) ProtoMessage()               {}
func (*ObjectAttackData) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *ObjectAttackData) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *ObjectAttackData) GetObjecType() int32 {
	if m != nil && m.ObjecType != nil {
		return *m.ObjecType
	}
	return 0
}

func (m *ObjectAttackData) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *ObjectAttackData) GetAngle() float32 {
	if m != nil && m.Angle != nil {
		return *m.Angle
	}
	return 0
}

func (m *ObjectAttackData) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

type CSObjectAttack struct {
	Pos              *Position `protobuf:"bytes,1,req,name=pos" json:"pos,omitempty"`
	Angle            *float32  `protobuf:"fixed32,2,req,name=angle" json:"angle,omitempty"`
	SkillId          *int32    `protobuf:"varint,3,req,name=skillId" json:"skillId,omitempty"`
	Uid              *int64    `protobuf:"varint,4,req,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CSObjectAttack) Reset()                    { *m = CSObjectAttack{} }
func (m *CSObjectAttack) String() string            { return proto.CompactTextString(m) }
func (*CSObjectAttack) ProtoMessage()               {}
func (*CSObjectAttack) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *CSObjectAttack) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CSObjectAttack) GetAngle() float32 {
	if m != nil && m.Angle != nil {
		return *m.Angle
	}
	return 0
}

func (m *CSObjectAttack) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *CSObjectAttack) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type SCObjectAttack struct {
	AttackData       *ObjectAttackData `protobuf:"bytes,2,req,name=attackData" json:"attackData,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCObjectAttack) Reset()                    { *m = SCObjectAttack{} }
func (m *SCObjectAttack) String() string            { return proto.CompactTextString(m) }
func (*SCObjectAttack) ProtoMessage()               {}
func (*SCObjectAttack) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *SCObjectAttack) GetAttackData() *ObjectAttackData {
	if m != nil {
		return m.AttackData
	}
	return nil
}

type ObjectDamage struct {
	Uid              *int64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	ObjecType        *int32 `protobuf:"varint,2,req,name=objecType" json:"objecType,omitempty"`
	Hp               *int64 `protobuf:"varint,3,req,name=hp" json:"hp,omitempty"`
	DamageType       *int32 `protobuf:"varint,4,req,name=damageType" json:"damageType,omitempty"`
	DamageVal        *int64 `protobuf:"varint,5,req,name=damageVal" json:"damageVal,omitempty"`
	AttackId         *int64 `protobuf:"varint,6,opt,name=attackId" json:"attackId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ObjectDamage) Reset()                    { *m = ObjectDamage{} }
func (m *ObjectDamage) String() string            { return proto.CompactTextString(m) }
func (*ObjectDamage) ProtoMessage()               {}
func (*ObjectDamage) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

func (m *ObjectDamage) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *ObjectDamage) GetObjecType() int32 {
	if m != nil && m.ObjecType != nil {
		return *m.ObjecType
	}
	return 0
}

func (m *ObjectDamage) GetHp() int64 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *ObjectDamage) GetDamageType() int32 {
	if m != nil && m.DamageType != nil {
		return *m.DamageType
	}
	return 0
}

func (m *ObjectDamage) GetDamageVal() int64 {
	if m != nil && m.DamageVal != nil {
		return *m.DamageVal
	}
	return 0
}

func (m *ObjectDamage) GetAttackId() int64 {
	if m != nil && m.AttackId != nil {
		return *m.AttackId
	}
	return 0
}

type SCObjectDamage struct {
	SkillId          *int32          `protobuf:"varint,1,req,name=skillId" json:"skillId,omitempty"`
	ObjectDamageList []*ObjectDamage `protobuf:"bytes,2,rep,name=objectDamageList" json:"objectDamageList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SCObjectDamage) Reset()                    { *m = SCObjectDamage{} }
func (m *SCObjectDamage) String() string            { return proto.CompactTextString(m) }
func (*SCObjectDamage) ProtoMessage()               {}
func (*SCObjectDamage) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

func (m *SCObjectDamage) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *SCObjectDamage) GetObjectDamageList() []*ObjectDamage {
	if m != nil {
		return m.ObjectDamageList
	}
	return nil
}

type SCObjectBuff struct {
	ObjectBuffList   []*ObjectBuffData `protobuf:"bytes,1,rep,name=objectBuffList" json:"objectBuffList,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCObjectBuff) Reset()                    { *m = SCObjectBuff{} }
func (m *SCObjectBuff) String() string            { return proto.CompactTextString(m) }
func (*SCObjectBuff) ProtoMessage()               {}
func (*SCObjectBuff) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

func (m *SCObjectBuff) GetObjectBuffList() []*ObjectBuffData {
	if m != nil {
		return m.ObjectBuffList
	}
	return nil
}

type SCObjectBuffRemove struct {
	ObjectBuffList   []*ObjectBuffData `protobuf:"bytes,1,rep,name=objectBuffList" json:"objectBuffList,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCObjectBuffRemove) Reset()                    { *m = SCObjectBuffRemove{} }
func (m *SCObjectBuffRemove) String() string            { return proto.CompactTextString(m) }
func (*SCObjectBuffRemove) ProtoMessage()               {}
func (*SCObjectBuffRemove) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{16} }

func (m *SCObjectBuffRemove) GetObjectBuffList() []*ObjectBuffData {
	if m != nil {
		return m.ObjectBuffList
	}
	return nil
}

type SCObjectBattle struct {
	BattleState      *bool  `protobuf:"varint,1,req,name=battleState" json:"battleState,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCObjectBattle) Reset()                    { *m = SCObjectBattle{} }
func (m *SCObjectBattle) String() string            { return proto.CompactTextString(m) }
func (*SCObjectBattle) ProtoMessage()               {}
func (*SCObjectBattle) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{17} }

func (m *SCObjectBattle) GetBattleState() bool {
	if m != nil && m.BattleState != nil {
		return *m.BattleState
	}
	return false
}

type SCPlayerDataChanged struct {
	PlayerData       *ScenePlayerShowData `protobuf:"bytes,1,req,name=playerData" json:"playerData,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SCPlayerDataChanged) Reset()                    { *m = SCPlayerDataChanged{} }
func (m *SCPlayerDataChanged) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerDataChanged) ProtoMessage()               {}
func (*SCPlayerDataChanged) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{18} }

func (m *SCPlayerDataChanged) GetPlayerData() *ScenePlayerShowData {
	if m != nil {
		return m.PlayerData
	}
	return nil
}

type CSPlayerRelive struct {
	ReliveType       *int32 `protobuf:"varint,1,req,name=reliveType" json:"reliveType,omitempty"`
	AutoBuy          *bool  `protobuf:"varint,2,opt,name=autoBuy" json:"autoBuy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSPlayerRelive) Reset()                    { *m = CSPlayerRelive{} }
func (m *CSPlayerRelive) String() string            { return proto.CompactTextString(m) }
func (*CSPlayerRelive) ProtoMessage()               {}
func (*CSPlayerRelive) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{19} }

func (m *CSPlayerRelive) GetReliveType() int32 {
	if m != nil && m.ReliveType != nil {
		return *m.ReliveType
	}
	return 0
}

func (m *CSPlayerRelive) GetAutoBuy() bool {
	if m != nil && m.AutoBuy != nil {
		return *m.AutoBuy
	}
	return false
}

type ObjectReliveData struct {
	SceneId          *int32    `protobuf:"varint,1,req,name=sceneId" json:"sceneId,omitempty"`
	Uid              *int64    `protobuf:"varint,2,req,name=uid" json:"uid,omitempty"`
	Pos              *Position `protobuf:"bytes,3,req,name=pos" json:"pos,omitempty"`
	Hp               *int64    `protobuf:"varint,4,req,name=hp" json:"hp,omitempty"`
	HpMax            *int64    `protobuf:"varint,5,req,name=hpMax" json:"hpMax,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ObjectReliveData) Reset()                    { *m = ObjectReliveData{} }
func (m *ObjectReliveData) String() string            { return proto.CompactTextString(m) }
func (*ObjectReliveData) ProtoMessage()               {}
func (*ObjectReliveData) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{20} }

func (m *ObjectReliveData) GetSceneId() int32 {
	if m != nil && m.SceneId != nil {
		return *m.SceneId
	}
	return 0
}

func (m *ObjectReliveData) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *ObjectReliveData) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *ObjectReliveData) GetHp() int64 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *ObjectReliveData) GetHpMax() int64 {
	if m != nil && m.HpMax != nil {
		return *m.HpMax
	}
	return 0
}

type SCPlayerRelive struct {
	ReliveData       *ObjectReliveData `protobuf:"bytes,1,req,name=reliveData" json:"reliveData,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCPlayerRelive) Reset()                    { *m = SCPlayerRelive{} }
func (m *SCPlayerRelive) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerRelive) ProtoMessage()               {}
func (*SCPlayerRelive) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{21} }

func (m *SCPlayerRelive) GetReliveData() *ObjectReliveData {
	if m != nil {
		return m.ReliveData
	}
	return nil
}

type CSItemGet struct {
	ItemId           []int64 `protobuf:"varint,1,rep,name=ItemId" json:"ItemId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSItemGet) Reset()                    { *m = CSItemGet{} }
func (m *CSItemGet) String() string            { return proto.CompactTextString(m) }
func (*CSItemGet) ProtoMessage()               {}
func (*CSItemGet) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{22} }

func (m *CSItemGet) GetItemId() []int64 {
	if m != nil {
		return m.ItemId
	}
	return nil
}

type SCItemGet struct {
	ItemId           []int64 `protobuf:"varint,1,rep,name=ItemId" json:"ItemId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCItemGet) Reset()                    { *m = SCItemGet{} }
func (m *SCItemGet) String() string            { return proto.CompactTextString(m) }
func (*SCItemGet) ProtoMessage()               {}
func (*SCItemGet) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{23} }

func (m *SCItemGet) GetItemId() []int64 {
	if m != nil {
		return m.ItemId
	}
	return nil
}

type SCExitScene struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCExitScene) Reset()                    { *m = SCExitScene{} }
func (m *SCExitScene) String() string            { return proto.CompactTextString(m) }
func (*SCExitScene) ProtoMessage()               {}
func (*SCExitScene) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{24} }

func (m *SCExitScene) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type SCObjectFixPosition struct {
	Uid              *int64    `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	ObjecType        *int32    `protobuf:"varint,2,req,name=objecType" json:"objecType,omitempty"`
	Pos              *Position `protobuf:"bytes,3,req,name=pos" json:"pos,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *SCObjectFixPosition) Reset()                    { *m = SCObjectFixPosition{} }
func (m *SCObjectFixPosition) String() string            { return proto.CompactTextString(m) }
func (*SCObjectFixPosition) ProtoMessage()               {}
func (*SCObjectFixPosition) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{25} }

func (m *SCObjectFixPosition) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *SCObjectFixPosition) GetObjecType() int32 {
	if m != nil && m.ObjecType != nil {
		return *m.ObjecType
	}
	return 0
}

func (m *SCObjectFixPosition) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

type SCMonsterCampChanged struct {
	Uid              *int64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	ObjecType        *int32 `protobuf:"varint,2,req,name=objecType" json:"objecType,omitempty"`
	Enemy            *bool  `protobuf:"varint,3,req,name=enemy" json:"enemy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCMonsterCampChanged) Reset()                    { *m = SCMonsterCampChanged{} }
func (m *SCMonsterCampChanged) String() string            { return proto.CompactTextString(m) }
func (*SCMonsterCampChanged) ProtoMessage()               {}
func (*SCMonsterCampChanged) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{26} }

func (m *SCMonsterCampChanged) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *SCMonsterCampChanged) GetObjecType() int32 {
	if m != nil && m.ObjecType != nil {
		return *m.ObjecType
	}
	return 0
}

func (m *SCMonsterCampChanged) GetEnemy() bool {
	if m != nil && m.Enemy != nil {
		return *m.Enemy
	}
	return false
}

type SCItemOwnerChanged struct {
	ItemId           *int64 `protobuf:"varint,1,req,name=itemId" json:"itemId,omitempty"`
	State            *bool  `protobuf:"varint,2,req,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCItemOwnerChanged) Reset()                    { *m = SCItemOwnerChanged{} }
func (m *SCItemOwnerChanged) String() string            { return proto.CompactTextString(m) }
func (*SCItemOwnerChanged) ProtoMessage()               {}
func (*SCItemOwnerChanged) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{27} }

func (m *SCItemOwnerChanged) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *SCItemOwnerChanged) GetState() bool {
	if m != nil && m.State != nil {
		return *m.State
	}
	return false
}

type CSWorldEnterScene struct {
	WorldMapId       *int32 `protobuf:"varint,1,req,name=worldMapId" json:"worldMapId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSWorldEnterScene) Reset()                    { *m = CSWorldEnterScene{} }
func (m *CSWorldEnterScene) String() string            { return proto.CompactTextString(m) }
func (*CSWorldEnterScene) ProtoMessage()               {}
func (*CSWorldEnterScene) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{28} }

func (m *CSWorldEnterScene) GetWorldMapId() int32 {
	if m != nil && m.WorldMapId != nil {
		return *m.WorldMapId
	}
	return 0
}

type CSEnterPortal struct {
	PortalId         *int32 `protobuf:"varint,1,req,name=portalId" json:"portalId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSEnterPortal) Reset()                    { *m = CSEnterPortal{} }
func (m *CSEnterPortal) String() string            { return proto.CompactTextString(m) }
func (*CSEnterPortal) ProtoMessage()               {}
func (*CSEnterPortal) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{29} }

func (m *CSEnterPortal) GetPortalId() int32 {
	if m != nil && m.PortalId != nil {
		return *m.PortalId
	}
	return 0
}

type SCEnterPortal struct {
	PortalId         *int32 `protobuf:"varint,1,req,name=portalId" json:"portalId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCEnterPortal) Reset()                    { *m = SCEnterPortal{} }
func (m *SCEnterPortal) String() string            { return proto.CompactTextString(m) }
func (*SCEnterPortal) ProtoMessage()               {}
func (*SCEnterPortal) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{30} }

func (m *SCEnterPortal) GetPortalId() int32 {
	if m != nil && m.PortalId != nil {
		return *m.PortalId
	}
	return 0
}

type CSReenterScene struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSReenterScene) Reset()                    { *m = CSReenterScene{} }
func (m *CSReenterScene) String() string            { return proto.CompactTextString(m) }
func (*CSReenterScene) ProtoMessage()               {}
func (*CSReenterScene) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{31} }

type CSSceneHeartBeat struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSSceneHeartBeat) Reset()                    { *m = CSSceneHeartBeat{} }
func (m *CSSceneHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*CSSceneHeartBeat) ProtoMessage()               {}
func (*CSSceneHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{32} }

type SCSceneHeartBeat struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCSceneHeartBeat) Reset()                    { *m = SCSceneHeartBeat{} }
func (m *SCSceneHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*SCSceneHeartBeat) ProtoMessage()               {}
func (*SCSceneHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{33} }

type CSPetAttack struct {
	Pos              *Position `protobuf:"bytes,1,req,name=pos" json:"pos,omitempty"`
	Angle            *float32  `protobuf:"fixed32,2,req,name=angle" json:"angle,omitempty"`
	SkillId          *int32    `protobuf:"varint,3,req,name=skillId" json:"skillId,omitempty"`
	ObjectType       *int32    `protobuf:"varint,4,req,name=objectType" json:"objectType,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CSPetAttack) Reset()                    { *m = CSPetAttack{} }
func (m *CSPetAttack) String() string            { return proto.CompactTextString(m) }
func (*CSPetAttack) ProtoMessage()               {}
func (*CSPetAttack) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{34} }

func (m *CSPetAttack) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CSPetAttack) GetAngle() float32 {
	if m != nil && m.Angle != nil {
		return *m.Angle
	}
	return 0
}

func (m *CSPetAttack) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *CSPetAttack) GetObjectType() int32 {
	if m != nil && m.ObjectType != nil {
		return *m.ObjectType
	}
	return 0
}

type SCPetAttack struct {
	AttackData       *ObjectAttackData `protobuf:"bytes,2,req,name=attackData" json:"attackData,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCPetAttack) Reset()                    { *m = SCPetAttack{} }
func (m *SCPetAttack) String() string            { return proto.CompactTextString(m) }
func (*SCPetAttack) ProtoMessage()               {}
func (*SCPetAttack) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{35} }

func (m *SCPetAttack) GetAttackData() *ObjectAttackData {
	if m != nil {
		return m.AttackData
	}
	return nil
}

func init() {
	proto.RegisterType((*CSPing)(nil), "scene.CSPing")
	proto.RegisterType((*SCPing)(nil), "scene.SCPing")
	proto.RegisterType((*CSEnterScene)(nil), "scene.CSEnterScene")
	proto.RegisterType((*SCEnterScene)(nil), "scene.SCEnterScene")
	proto.RegisterType((*SCObjectEnterScope)(nil), "scene.SCObjectEnterScope")
	proto.RegisterType((*ExitObject)(nil), "scene.ExitObject")
	proto.RegisterType((*SCObjectExitScope)(nil), "scene.SCObjectExitScope")
	proto.RegisterType((*ObjectMoveData)(nil), "scene.ObjectMoveData")
	proto.RegisterType((*CSObjectMove)(nil), "scene.CSObjectMove")
	proto.RegisterType((*SCObjectMove)(nil), "scene.SCObjectMove")
	proto.RegisterType((*ObjectAttackData)(nil), "scene.ObjectAttackData")
	proto.RegisterType((*CSObjectAttack)(nil), "scene.CSObjectAttack")
	proto.RegisterType((*SCObjectAttack)(nil), "scene.SCObjectAttack")
	proto.RegisterType((*ObjectDamage)(nil), "scene.ObjectDamage")
	proto.RegisterType((*SCObjectDamage)(nil), "scene.SCObjectDamage")
	proto.RegisterType((*SCObjectBuff)(nil), "scene.SCObjectBuff")
	proto.RegisterType((*SCObjectBuffRemove)(nil), "scene.SCObjectBuffRemove")
	proto.RegisterType((*SCObjectBattle)(nil), "scene.SCObjectBattle")
	proto.RegisterType((*SCPlayerDataChanged)(nil), "scene.SCPlayerDataChanged")
	proto.RegisterType((*CSPlayerRelive)(nil), "scene.CSPlayerRelive")
	proto.RegisterType((*ObjectReliveData)(nil), "scene.ObjectReliveData")
	proto.RegisterType((*SCPlayerRelive)(nil), "scene.SCPlayerRelive")
	proto.RegisterType((*CSItemGet)(nil), "scene.CSItemGet")
	proto.RegisterType((*SCItemGet)(nil), "scene.SCItemGet")
	proto.RegisterType((*SCExitScene)(nil), "scene.SCExitScene")
	proto.RegisterType((*SCObjectFixPosition)(nil), "scene.SCObjectFixPosition")
	proto.RegisterType((*SCMonsterCampChanged)(nil), "scene.SCMonsterCampChanged")
	proto.RegisterType((*SCItemOwnerChanged)(nil), "scene.SCItemOwnerChanged")
	proto.RegisterType((*CSWorldEnterScene)(nil), "scene.CSWorldEnterScene")
	proto.RegisterType((*CSEnterPortal)(nil), "scene.CSEnterPortal")
	proto.RegisterType((*SCEnterPortal)(nil), "scene.SCEnterPortal")
	proto.RegisterType((*CSReenterScene)(nil), "scene.CSReenterScene")
	proto.RegisterType((*CSSceneHeartBeat)(nil), "scene.CSSceneHeartBeat")
	proto.RegisterType((*SCSceneHeartBeat)(nil), "scene.SCSceneHeartBeat")
	proto.RegisterType((*CSPetAttack)(nil), "scene.CSPetAttack")
	proto.RegisterType((*SCPetAttack)(nil), "scene.SCPetAttack")
}

func init() { proto.RegisterFile("scene.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 914 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x6d, 0x6f, 0x1b, 0x45,
	0x10, 0x96, 0xef, 0x62, 0xe7, 0x32, 0x76, 0x2e, 0xf6, 0xa6, 0x50, 0x2b, 0x20, 0xd5, 0xac, 0x84,
	0x6a, 0x5a, 0x1a, 0x21, 0x10, 0x42, 0x02, 0x15, 0x89, 0x6c, 0x03, 0x44, 0x22, 0xaa, 0x95, 0x45,
	0xf0, 0x81, 0x0f, 0x68, 0x63, 0xaf, 0x9d, 0xa3, 0x77, 0xb7, 0xa7, 0xbb, 0x75, 0x5e, 0xfe, 0x05,
	0x3f, 0x80, 0x4f, 0xfc, 0x52, 0xb4, 0xb3, 0x7b, 0x6f, 0x6d, 0x82, 0x5b, 0x35, 0xdf, 0xe6, 0x66,
	0x67, 0x67, 0xe6, 0x79, 0xe6, 0xb9, 0xb9, 0x83, 0x7e, 0x31, 0x97, 0xa9, 0x3c, 0xcc, 0x72, 0xa5,
	0x15, 0xe9, 0xe2, 0xc3, 0xc1, 0x60, 0xae, 0x92, 0x44, 0xa5, 0xd6, 0x79, 0x30, 0xc8, 0x62, 0x71,
	0x23, 0x73, 0xf7, 0xb4, 0x9b, 0xa8, 0xb4, 0xd0, 0xd5, 0x23, 0x44, 0x5a, 0x26, 0xa5, 0x7d, 0xbe,
	0x5e, 0x2e, 0xad, 0x4d, 0x03, 0xe8, 0x31, 0x3e, 0x8b, 0xd2, 0x95, 0xb1, 0x38, 0x43, 0xeb, 0x3b,
	0x18, 0x30, 0x7e, 0x9c, 0x6a, 0x99, 0x73, 0x53, 0x86, 0xec, 0x42, 0x37, 0x11, 0xd9, 0xc9, 0x62,
	0xdc, 0x99, 0x78, 0xd3, 0x2e, 0xf9, 0x18, 0xfc, 0x4c, 0x15, 0x63, 0x6f, 0xd2, 0x99, 0xf6, 0xbf,
	0xdc, 0x3b, 0xb4, 0x7d, 0xcd, 0x54, 0x11, 0xe9, 0x48, 0xa5, 0x74, 0x05, 0x03, 0xce, 0xde, 0xe2,
	0xb2, 0x77, 0xcb, 0x65, 0xf2, 0x04, 0xc0, 0x82, 0x78, 0x21, 0xb4, 0x18, 0xfb, 0x18, 0xf4, 0xa1,
	0x0b, 0xc2, 0x74, 0xb3, 0xea, 0x94, 0xfe, 0xdb, 0x01, 0xc2, 0xd9, 0xcb, 0xf3, 0xbf, 0xe4, 0x5c,
	0xbb, 0x7a, 0x2a, 0x93, 0xe4, 0x10, 0xc2, 0x3a, 0xc5, 0x2f, 0x51, 0xa1, 0xc7, 0x9d, 0x89, 0x7f,
	0x77, 0x1a, 0xf2, 0x05, 0xec, 0x39, 0xa6, 0xaa, 0x0b, 0x1e, 0x5e, 0x78, 0xd8, 0xbc, 0x70, 0x5a,
	0x87, 0x90, 0x27, 0x30, 0x30, 0x64, 0x56, 0xe1, 0x3e, 0x86, 0x3f, 0x68, 0x86, 0x9f, 0xb8, 0x73,
	0xfa, 0x39, 0xc0, 0xf1, 0x75, 0xa4, 0x6d, 0x97, 0xa4, 0x0f, 0xfe, 0x3a, 0xb2, 0x4c, 0xf8, 0x64,
	0x04, 0x3b, 0xca, 0xb8, 0x7f, 0xbd, 0xc9, 0x24, 0xf2, 0xd1, 0xa5, 0xdf, 0xc3, 0xa8, 0x42, 0x74,
	0x1d, 0x69, 0x0b, 0xe8, 0x33, 0x08, 0x65, 0x95, 0xa2, 0x01, 0x68, 0xe4, 0x0a, 0xd6, 0xf9, 0xe9,
	0xdf, 0x1d, 0x08, 0xad, 0x79, 0xaa, 0x2e, 0x25, 0x36, 0xbb, 0xa1, 0x64, 0x39, 0x0f, 0xff, 0xf6,
	0x79, 0x8c, 0x60, 0x27, 0x51, 0x97, 0x92, 0x67, 0x52, 0x2e, 0xc6, 0x5b, 0x13, 0x6f, 0xea, 0x99,
	0x79, 0x8a, 0x74, 0x15, 0xcb, 0x71, 0x17, 0x1f, 0x87, 0x10, 0x98, 0x08, 0xcc, 0xd8, 0xc3, 0x8c,
	0x03, 0xd8, 0x5a, 0xc6, 0x62, 0x35, 0xde, 0x9e, 0x74, 0xa6, 0x01, 0xfd, 0xa7, 0x63, 0xc4, 0x54,
	0x37, 0x55, 0x16, 0xec, 0xbc, 0x45, 0x41, 0xaf, 0x5d, 0xd0, 0x7f, 0xa3, 0xe0, 0x16, 0x16, 0x74,
	0x10, 0xbb, 0x08, 0xb1, 0xac, 0xde, 0x33, 0xd5, 0xc9, 0x23, 0xe8, 0xcd, 0xd7, 0xf9, 0x4c, 0x15,
	0xd8, 0xcd, 0x2d, 0x6a, 0xfd, 0xc6, 0xa8, 0xb5, 0xd1, 0xdd, 0x63, 0x9b, 0x1d, 0xe5, 0x67, 0x5b,
	0xfc, 0xc0, 0x5d, 0x69, 0xf3, 0x4a, 0x33, 0x18, 0x5a, 0xcf, 0x0f, 0x5a, 0x8b, 0xf9, 0xab, 0x7b,
	0xe0, 0xba, 0xc2, 0x69, 0x79, 0xde, 0x83, 0xed, 0xe2, 0x55, 0x14, 0xc7, 0x27, 0x16, 0x59, 0x97,
	0xfe, 0x01, 0x61, 0x49, 0xa4, 0xad, 0xb9, 0x81, 0xca, 0x2a, 0x9f, 0xf7, 0x7a, 0x3e, 0xbf, 0x49,
	0x9b, 0xa9, 0xe6, 0xd3, 0xe7, 0x10, 0x96, 0x3c, 0xb8, 0xe4, 0x4f, 0x01, 0x44, 0x05, 0xcd, 0xbd,
	0xaf, 0x0f, 0x5b, 0x5c, 0xd4, 0xc8, 0x69, 0x01, 0x03, 0xeb, 0x7b, 0x21, 0x12, 0xb1, 0x92, 0x1b,
	0x99, 0x00, 0xf0, 0x2e, 0x32, 0xec, 0xc3, 0x27, 0x04, 0x60, 0x81, 0xb7, 0x1a, 0x23, 0x1d, 0xc1,
	0x8e, 0xf5, 0xfd, 0x26, 0x62, 0x37, 0xd8, 0x21, 0x04, 0xb6, 0x9f, 0x93, 0x05, 0x0e, 0xd7, 0xa7,
	0xb3, 0xba, 0x67, 0x57, 0xb6, 0x81, 0xd1, 0x6e, 0x9b, 0x67, 0x30, 0x54, 0x8d, 0x80, 0xc6, 0xdb,
	0xbd, 0xdf, 0x82, 0x62, 0x8f, 0xe9, 0xf3, 0x5a, 0x0d, 0x47, 0xeb, 0xe5, 0x92, 0x3c, 0x83, 0x50,
	0x55, 0x4f, 0x8d, 0x57, 0xaf, 0xad, 0x09, 0x73, 0x88, 0x2c, 0xb0, 0x7a, 0x21, 0x19, 0xdf, 0x99,
	0x34, 0x52, 0x7a, 0xd7, 0x24, 0x9f, 0xd6, 0xa8, 0x8e, 0x84, 0xd6, 0xb1, 0x24, 0xfb, 0xd0, 0x3f,
	0x47, 0x8b, 0x6b, 0xa1, 0x25, 0x22, 0x0b, 0xe8, 0x31, 0xec, 0x73, 0x56, 0xaf, 0x31, 0x76, 0x21,
	0xd2, 0x95, 0x5c, 0x90, 0xc3, 0xd6, 0x02, 0xb5, 0xca, 0x38, 0x78, 0x73, 0xf3, 0xf1, 0x0b, 0x75,
	0x85, 0xd5, 0xbe, 0x36, 0xa2, 0xb2, 0xbe, 0x33, 0x19, 0x47, 0x97, 0xd2, 0x8c, 0x23, 0x47, 0x0b,
	0xc7, 0x61, 0x69, 0xdc, 0x83, 0x6d, 0xb1, 0xd6, 0xea, 0x68, 0x7d, 0x83, 0x5b, 0x3f, 0xa0, 0x51,
	0xa9, 0x7e, 0x7b, 0x09, 0xd5, 0x6f, 0xc8, 0xc7, 0xdd, 0x57, 0x92, 0xef, 0x44, 0xe0, 0xe1, 0xf8,
	0xfe, 0x5f, 0xfb, 0x56, 0x0f, 0x28, 0x45, 0xa3, 0xdb, 0x8b, 0xec, 0x54, 0x5c, 0xdb, 0xb9, 0x5b,
	0x65, 0xb6, 0x3a, 0x7c, 0x5a, 0x76, 0xd8, 0xc0, 0xd8, 0x56, 0x66, 0xdd, 0x15, 0xfd, 0x08, 0x76,
	0x18, 0x37, 0xeb, 0xf8, 0x27, 0xa9, 0x49, 0x08, 0x3d, 0x63, 0x62, 0x87, 0xfe, 0xd4, 0x37, 0x87,
	0x9c, 0xdd, 0x75, 0xf8, 0x08, 0xfa, 0x9c, 0xd9, 0x35, 0x6c, 0xbe, 0x63, 0x43, 0x08, 0x2c, 0xb3,
	0x0e, 0x9f, 0x4f, 0xb9, 0x19, 0x81, 0x2d, 0xf8, 0x63, 0x74, 0x5d, 0x61, 0x79, 0xaf, 0x2d, 0x40,
	0x8f, 0xe1, 0x01, 0x67, 0xee, 0x6b, 0xc3, 0x44, 0x92, 0x95, 0x83, 0xdd, 0x94, 0x75, 0x17, 0xba,
	0x32, 0x95, 0xc9, 0x0d, 0xe6, 0x0d, 0xe8, 0x57, 0x46, 0x8a, 0x06, 0xce, 0xcb, 0xab, 0x54, 0xe6,
	0x65, 0x92, 0x10, 0x7a, 0x51, 0x09, 0xd1, 0x51, 0x5d, 0xa0, 0xa6, 0x3c, 0xbc, 0xf4, 0x18, 0x46,
	0x8c, 0xff, 0xae, 0xf2, 0x78, 0xd1, 0xf8, 0x7e, 0x13, 0x80, 0x2b, 0xe3, 0x3a, 0xad, 0x3f, 0xe2,
	0xf4, 0x13, 0xd8, 0x75, 0x3f, 0x08, 0x33, 0x95, 0x6b, 0x11, 0x23, 0x39, 0x68, 0x35, 0x43, 0xdc,
	0x6f, 0xc0, 0x9d, 0x21, 0x43, 0xa3, 0xbd, 0x33, 0x29, 0xab, 0x5a, 0x94, 0xc0, 0x90, 0x71, 0x34,
	0x7f, 0x96, 0x22, 0xd7, 0x47, 0x52, 0x68, 0xe3, 0xe3, 0xec, 0x35, 0xdf, 0x9f, 0xd0, 0x67, 0x7c,
	0x26, 0xef, 0x67, 0x0f, 0x12, 0x00, 0xfb, 0x7e, 0xd6, 0xfb, 0x87, 0x7e, 0x6b, 0x66, 0x5f, 0x17,
	0x78, 0x97, 0x5d, 0xf8, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xca, 0x42, 0xa4, 0xed, 0xa9, 0x09,
	0x00, 0x00,
}
