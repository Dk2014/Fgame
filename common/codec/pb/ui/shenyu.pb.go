// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shenyu.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SCShenYuSceneInfoNotice struct {
	KeyNum           *int32           `protobuf:"varint,1,req,name=keyNum" json:"keyNum,omitempty"`
	Round            *int32           `protobuf:"varint,2,req,name=round" json:"round,omitempty"`
	RankInfoList     []*SceneRankInfo `protobuf:"bytes,3,rep,name=rankInfoList" json:"rankInfoList,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SCShenYuSceneInfoNotice) Reset()                    { *m = SCShenYuSceneInfoNotice{} }
func (m *SCShenYuSceneInfoNotice) String() string            { return proto.CompactTextString(m) }
func (*SCShenYuSceneInfoNotice) ProtoMessage()               {}
func (*SCShenYuSceneInfoNotice) Descriptor() ([]byte, []int) { return fileDescriptor101, []int{0} }

func (m *SCShenYuSceneInfoNotice) GetKeyNum() int32 {
	if m != nil && m.KeyNum != nil {
		return *m.KeyNum
	}
	return 0
}

func (m *SCShenYuSceneInfoNotice) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *SCShenYuSceneInfoNotice) GetRankInfoList() []*SceneRankInfo {
	if m != nil {
		return m.RankInfoList
	}
	return nil
}

type SCShenYuKeyNumChangeNotice struct {
	KeyNum           *int32 `protobuf:"varint,1,req,name=keyNum" json:"keyNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShenYuKeyNumChangeNotice) Reset()                    { *m = SCShenYuKeyNumChangeNotice{} }
func (m *SCShenYuKeyNumChangeNotice) String() string            { return proto.CompactTextString(m) }
func (*SCShenYuKeyNumChangeNotice) ProtoMessage()               {}
func (*SCShenYuKeyNumChangeNotice) Descriptor() ([]byte, []int) { return fileDescriptor101, []int{1} }

func (m *SCShenYuKeyNumChangeNotice) GetKeyNum() int32 {
	if m != nil && m.KeyNum != nil {
		return *m.KeyNum
	}
	return 0
}

type SCShenYuFinishRew struct {
	DropList         []*DropInfo `protobuf:"bytes,1,rep,name=dropList" json:"dropList,omitempty"`
	Ranking          *int32      `protobuf:"varint,2,req,name=ranking" json:"ranking,omitempty"`
	Round            *int32      `protobuf:"varint,3,req,name=round" json:"round,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCShenYuFinishRew) Reset()                    { *m = SCShenYuFinishRew{} }
func (m *SCShenYuFinishRew) String() string            { return proto.CompactTextString(m) }
func (*SCShenYuFinishRew) ProtoMessage()               {}
func (*SCShenYuFinishRew) Descriptor() ([]byte, []int) { return fileDescriptor101, []int{2} }

func (m *SCShenYuFinishRew) GetDropList() []*DropInfo {
	if m != nil {
		return m.DropList
	}
	return nil
}

func (m *SCShenYuFinishRew) GetRanking() int32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

func (m *SCShenYuFinishRew) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func init() {
	proto.RegisterType((*SCShenYuSceneInfoNotice)(nil), "ui.SCShenYuSceneInfoNotice")
	proto.RegisterType((*SCShenYuKeyNumChangeNotice)(nil), "ui.SCShenYuKeyNumChangeNotice")
	proto.RegisterType((*SCShenYuFinishRew)(nil), "ui.SCShenYuFinishRew")
}

func init() { proto.RegisterFile("shenyu.proto", fileDescriptor101) }

var fileDescriptor101 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x31, 0x4f, 0x86, 0x30,
	0x10, 0x86, 0xf3, 0x41, 0x3e, 0x35, 0x07, 0x6a, 0xe8, 0x22, 0x61, 0x30, 0x84, 0x45, 0x06, 0xc3,
	0xe0, 0x5f, 0xc0, 0x98, 0x18, 0x0d, 0x03, 0x9d, 0x1c, 0x09, 0x9c, 0xb4, 0x21, 0x5e, 0x49, 0x4b,
	0x63, 0xf8, 0xf7, 0xa6, 0x05, 0x9c, 0xbe, 0xf1, 0x69, 0xef, 0xde, 0xe7, 0x3d, 0x88, 0x8d, 0x40,
	0x5a, 0x6d, 0x35, 0x6b, 0xb5, 0x28, 0x16, 0x58, 0x99, 0xc1, 0xa0, 0xd5, 0xbc, 0x71, 0x16, 0x99,
	0x1e, 0x09, 0x37, 0x28, 0x3a, 0x78, 0xe0, 0x35, 0x17, 0x48, 0x5f, 0x96, 0xbb, 0xe7, 0x77, 0xfa,
	0x56, 0x8d, 0x5a, 0x64, 0x8f, 0xec, 0x0e, 0xae, 0x26, 0x5c, 0x1b, 0xfb, 0x93, 0x9e, 0xf2, 0xa0,
	0x3c, 0xb3, 0x5b, 0x38, 0x6b, 0x65, 0x69, 0x48, 0x03, 0x8f, 0x4f, 0x10, 0xeb, 0x8e, 0x26, 0xb7,
	0xf0, 0x29, 0xcd, 0x92, 0x86, 0x79, 0x58, 0x46, 0x2f, 0x49, 0x65, 0x65, 0xe5, 0x93, 0xda, 0xfd,
	0xb3, 0x78, 0x86, 0xec, 0x50, 0x7c, 0xf8, 0xbc, 0x5a, 0x74, 0x34, 0xe2, 0x65, 0x4b, 0xc1, 0x21,
	0x39, 0xa6, 0xdf, 0x24, 0x49, 0x23, 0x5a, 0xfc, 0x65, 0x8f, 0x70, 0xe3, 0x0e, 0xf0, 0x9e, 0x93,
	0xf7, 0xc4, 0xce, 0xf3, 0xaa, 0xd5, 0xec, 0x14, 0xec, 0x1e, 0xae, 0x5d, 0x17, 0x49, 0xe3, 0x5e,
	0xee, 0xbf, 0x6b, 0xe8, 0xf0, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x5a, 0xa0, 0xed, 0x09, 0x11, 0x01,
	0x00, 0x00,
}
