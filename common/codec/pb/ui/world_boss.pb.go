// Code generated by protoc-gen-go. DO NOT EDIT.
// source: world_boss.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BossInfo struct {
	BiologyId        *int32    `protobuf:"varint,1,req,name=biologyId" json:"biologyId,omitempty"`
	IsDead           *bool     `protobuf:"varint,2,req,name=isDead" json:"isDead,omitempty"`
	DeadTime         *int64    `protobuf:"varint,3,req,name=deadTime" json:"deadTime,omitempty"`
	Pos              *Position `protobuf:"bytes,4,req,name=pos" json:"pos,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *BossInfo) Reset()                    { *m = BossInfo{} }
func (m *BossInfo) String() string            { return proto.CompactTextString(m) }
func (*BossInfo) ProtoMessage()               {}
func (*BossInfo) Descriptor() ([]byte, []int) { return fileDescriptor131, []int{0} }

func (m *BossInfo) GetBiologyId() int32 {
	if m != nil && m.BiologyId != nil {
		return *m.BiologyId
	}
	return 0
}

func (m *BossInfo) GetIsDead() bool {
	if m != nil && m.IsDead != nil {
		return *m.IsDead
	}
	return false
}

func (m *BossInfo) GetDeadTime() int64 {
	if m != nil && m.DeadTime != nil {
		return *m.DeadTime
	}
	return 0
}

func (m *BossInfo) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

type CSWorldBossList struct {
	BossType         *int32 `protobuf:"varint,1,opt,name=bossType" json:"bossType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSWorldBossList) Reset()                    { *m = CSWorldBossList{} }
func (m *CSWorldBossList) String() string            { return proto.CompactTextString(m) }
func (*CSWorldBossList) ProtoMessage()               {}
func (*CSWorldBossList) Descriptor() ([]byte, []int) { return fileDescriptor131, []int{1} }

func (m *CSWorldBossList) GetBossType() int32 {
	if m != nil && m.BossType != nil {
		return *m.BossType
	}
	return 0
}

type SCWorldBossList struct {
	BossInfoList     []*BossInfo `protobuf:"bytes,1,rep,name=bossInfoList" json:"bossInfoList,omitempty"`
	CurPilao         *int32      `protobuf:"varint,2,opt,name=curPilao" json:"curPilao,omitempty"`
	CurBuyTimes      *int32      `protobuf:"varint,3,opt,name=curBuyTimes" json:"curBuyTimes,omitempty"`
	CurZhuoQi        *int32      `protobuf:"varint,4,opt,name=curZhuoQi" json:"curZhuoQi,omitempty"`
	BossType         *int32      `protobuf:"varint,5,opt,name=bossType" json:"bossType,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCWorldBossList) Reset()                    { *m = SCWorldBossList{} }
func (m *SCWorldBossList) String() string            { return proto.CompactTextString(m) }
func (*SCWorldBossList) ProtoMessage()               {}
func (*SCWorldBossList) Descriptor() ([]byte, []int) { return fileDescriptor131, []int{2} }

func (m *SCWorldBossList) GetBossInfoList() []*BossInfo {
	if m != nil {
		return m.BossInfoList
	}
	return nil
}

func (m *SCWorldBossList) GetCurPilao() int32 {
	if m != nil && m.CurPilao != nil {
		return *m.CurPilao
	}
	return 0
}

func (m *SCWorldBossList) GetCurBuyTimes() int32 {
	if m != nil && m.CurBuyTimes != nil {
		return *m.CurBuyTimes
	}
	return 0
}

func (m *SCWorldBossList) GetCurZhuoQi() int32 {
	if m != nil && m.CurZhuoQi != nil {
		return *m.CurZhuoQi
	}
	return 0
}

func (m *SCWorldBossList) GetBossType() int32 {
	if m != nil && m.BossType != nil {
		return *m.BossType
	}
	return 0
}

type CSChallengeWorldBoss struct {
	BiologyId        *int32 `protobuf:"varint,1,req,name=biologyId" json:"biologyId,omitempty"`
	BossType         *int32 `protobuf:"varint,2,opt,name=bossType" json:"bossType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSChallengeWorldBoss) Reset()                    { *m = CSChallengeWorldBoss{} }
func (m *CSChallengeWorldBoss) String() string            { return proto.CompactTextString(m) }
func (*CSChallengeWorldBoss) ProtoMessage()               {}
func (*CSChallengeWorldBoss) Descriptor() ([]byte, []int) { return fileDescriptor131, []int{3} }

func (m *CSChallengeWorldBoss) GetBiologyId() int32 {
	if m != nil && m.BiologyId != nil {
		return *m.BiologyId
	}
	return 0
}

func (m *CSChallengeWorldBoss) GetBossType() int32 {
	if m != nil && m.BossType != nil {
		return *m.BossType
	}
	return 0
}

type SCChallengeWorldBoss struct {
	Pos              *Position `protobuf:"bytes,1,req,name=pos" json:"pos,omitempty"`
	BossType         *int32    `protobuf:"varint,2,opt,name=bossType" json:"bossType,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *SCChallengeWorldBoss) Reset()                    { *m = SCChallengeWorldBoss{} }
func (m *SCChallengeWorldBoss) String() string            { return proto.CompactTextString(m) }
func (*SCChallengeWorldBoss) ProtoMessage()               {}
func (*SCChallengeWorldBoss) Descriptor() ([]byte, []int) { return fileDescriptor131, []int{4} }

func (m *SCChallengeWorldBoss) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *SCChallengeWorldBoss) GetBossType() int32 {
	if m != nil && m.BossType != nil {
		return *m.BossType
	}
	return 0
}

type SCWorldBossInfoBroadcast struct {
	BossInfo         *BossInfo `protobuf:"bytes,1,req,name=bossInfo" json:"bossInfo,omitempty"`
	BossTyp          *int32    `protobuf:"varint,2,req,name=bossTyp" json:"bossTyp,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *SCWorldBossInfoBroadcast) Reset()                    { *m = SCWorldBossInfoBroadcast{} }
func (m *SCWorldBossInfoBroadcast) String() string            { return proto.CompactTextString(m) }
func (*SCWorldBossInfoBroadcast) ProtoMessage()               {}
func (*SCWorldBossInfoBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor131, []int{5} }

func (m *SCWorldBossInfoBroadcast) GetBossInfo() *BossInfo {
	if m != nil {
		return m.BossInfo
	}
	return nil
}

func (m *SCWorldBossInfoBroadcast) GetBossTyp() int32 {
	if m != nil && m.BossTyp != nil {
		return *m.BossTyp
	}
	return 0
}

type SCWorldBossListInfoNotice struct {
	BossInfoList     []*BossInfo `protobuf:"bytes,1,rep,name=bossInfoList" json:"bossInfoList,omitempty"`
	BossTyp          *int32      `protobuf:"varint,2,req,name=bossTyp" json:"bossTyp,omitempty"`
	ReliveTime       *int32      `protobuf:"varint,3,opt,name=reliveTime" json:"reliveTime,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCWorldBossListInfoNotice) Reset()                    { *m = SCWorldBossListInfoNotice{} }
func (m *SCWorldBossListInfoNotice) String() string            { return proto.CompactTextString(m) }
func (*SCWorldBossListInfoNotice) ProtoMessage()               {}
func (*SCWorldBossListInfoNotice) Descriptor() ([]byte, []int) { return fileDescriptor131, []int{6} }

func (m *SCWorldBossListInfoNotice) GetBossInfoList() []*BossInfo {
	if m != nil {
		return m.BossInfoList
	}
	return nil
}

func (m *SCWorldBossListInfoNotice) GetBossTyp() int32 {
	if m != nil && m.BossTyp != nil {
		return *m.BossTyp
	}
	return 0
}

func (m *SCWorldBossListInfoNotice) GetReliveTime() int32 {
	if m != nil && m.ReliveTime != nil {
		return *m.ReliveTime
	}
	return 0
}

type SCWorldBossReliveTimeNotice struct {
	BossTyp          *int32 `protobuf:"varint,1,req,name=bossTyp" json:"bossTyp,omitempty"`
	ReliveTime       *int32 `protobuf:"varint,2,req,name=reliveTime" json:"reliveTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCWorldBossReliveTimeNotice) Reset()                    { *m = SCWorldBossReliveTimeNotice{} }
func (m *SCWorldBossReliveTimeNotice) String() string            { return proto.CompactTextString(m) }
func (*SCWorldBossReliveTimeNotice) ProtoMessage()               {}
func (*SCWorldBossReliveTimeNotice) Descriptor() ([]byte, []int) { return fileDescriptor131, []int{7} }

func (m *SCWorldBossReliveTimeNotice) GetBossTyp() int32 {
	if m != nil && m.BossTyp != nil {
		return *m.BossTyp
	}
	return 0
}

func (m *SCWorldBossReliveTimeNotice) GetReliveTime() int32 {
	if m != nil && m.ReliveTime != nil {
		return *m.ReliveTime
	}
	return 0
}

func init() {
	proto.RegisterType((*BossInfo)(nil), "ui.BossInfo")
	proto.RegisterType((*CSWorldBossList)(nil), "ui.CSWorldBossList")
	proto.RegisterType((*SCWorldBossList)(nil), "ui.SCWorldBossList")
	proto.RegisterType((*CSChallengeWorldBoss)(nil), "ui.CSChallengeWorldBoss")
	proto.RegisterType((*SCChallengeWorldBoss)(nil), "ui.SCChallengeWorldBoss")
	proto.RegisterType((*SCWorldBossInfoBroadcast)(nil), "ui.SCWorldBossInfoBroadcast")
	proto.RegisterType((*SCWorldBossListInfoNotice)(nil), "ui.SCWorldBossListInfoNotice")
	proto.RegisterType((*SCWorldBossReliveTimeNotice)(nil), "ui.SCWorldBossReliveTimeNotice")
}

func init() { proto.RegisterFile("world_boss.proto", fileDescriptor131) }

var fileDescriptor131 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xc1, 0x6f, 0xaa, 0x40,
	0x10, 0x87, 0x03, 0xc8, 0x7b, 0x38, 0x9a, 0xa7, 0xee, 0xf3, 0xb0, 0xbe, 0x97, 0x34, 0x84, 0x5e,
	0x38, 0x79, 0xe8, 0xb5, 0x37, 0xe8, 0xc5, 0xb4, 0x69, 0x6c, 0x31, 0x69, 0xe2, 0xa5, 0x41, 0x76,
	0xab, 0x9b, 0x20, 0x63, 0x76, 0xd9, 0x36, 0x1e, 0xfb, 0x9f, 0x37, 0x8b, 0x94, 0x50, 0xcb, 0xa1,
	0x47, 0x86, 0x99, 0x6f, 0xbe, 0xfd, 0x0d, 0x8c, 0xdf, 0x50, 0xe6, 0xec, 0x79, 0x83, 0x4a, 0xcd,
	0x0f, 0x12, 0x4b, 0x24, 0xb6, 0x16, 0xff, 0x86, 0x19, 0xee, 0xf7, 0x58, 0x9c, 0x2a, 0xc1, 0x1a,
	0xbc, 0x08, 0x95, 0x5a, 0x14, 0x2f, 0x48, 0x26, 0xd0, 0xdf, 0x08, 0xcc, 0x71, 0x7b, 0x5c, 0x30,
	0x6a, 0xf9, 0x76, 0xe8, 0x92, 0x3f, 0xf0, 0x4b, 0xa8, 0x1b, 0x9e, 0x32, 0x6a, 0xfb, 0x76, 0xe8,
	0x91, 0x31, 0x78, 0x8c, 0xa7, 0x6c, 0x25, 0xf6, 0x9c, 0x3a, 0xbe, 0x1d, 0x3a, 0x64, 0x06, 0xce,
	0x01, 0x15, 0xed, 0xf9, 0x76, 0x38, 0xb8, 0x1a, 0xce, 0xb5, 0x98, 0x2f, 0x51, 0x89, 0x52, 0x60,
	0x11, 0x5c, 0xc2, 0x28, 0x4e, 0x9e, 0x8c, 0x83, 0x59, 0x71, 0x27, 0x54, 0x69, 0xe6, 0x8d, 0xce,
	0xea, 0x78, 0xe0, 0xd4, 0xf2, 0xad, 0xd0, 0x0d, 0xde, 0x2d, 0x18, 0x25, 0xf1, 0xd7, 0xae, 0x00,
	0x86, 0x9b, 0x5a, 0xca, 0x7c, 0x53, 0xcb, 0x77, 0x3e, 0xe1, 0x8d, 0xec, 0x18, 0xbc, 0x4c, 0xcb,
	0xa5, 0xc8, 0x53, 0xa4, 0xb6, 0x21, 0x91, 0xbf, 0x30, 0xc8, 0xb4, 0x8c, 0xf4, 0xd1, 0xd8, 0x29,
	0xea, 0x54, 0xc5, 0x09, 0xf4, 0x33, 0x2d, 0xd7, 0x3b, 0x8d, 0x0f, 0x82, 0xf6, 0xaa, 0x52, 0xdb,
	0xc1, 0xad, 0x1c, 0xae, 0x61, 0x1a, 0x27, 0xf1, 0x2e, 0xcd, 0x73, 0x5e, 0x6c, 0x79, 0xe3, 0xd2,
	0x15, 0x48, 0x7b, 0xb8, 0x5a, 0x1b, 0xc4, 0x30, 0x4d, 0xe2, 0x8e, 0xe1, 0x3a, 0x18, 0xeb, 0x7b,
	0x30, 0x1d, 0x90, 0x5b, 0xa0, 0xad, 0x10, 0xcc, 0x03, 0x23, 0x89, 0x29, 0xcb, 0x52, 0x55, 0x92,
	0x8b, 0x53, 0xb7, 0x29, 0xb6, 0x69, 0x4d, 0x12, 0x23, 0xf8, 0x5d, 0xd3, 0xaa, 0x23, 0xb9, 0x01,
	0x83, 0xd9, 0x59, 0xa2, 0xa6, 0xef, 0x1e, 0x4b, 0x91, 0xf1, 0x1f, 0x65, 0x7b, 0x4e, 0x24, 0x04,
	0x40, 0xf2, 0x5c, 0xbc, 0xf2, 0xfa, 0xf0, 0x46, 0x39, 0x82, 0xff, 0xad, 0x2d, 0x8f, 0xcd, 0xef,
	0x7a, 0x4f, 0x8b, 0x61, 0x75, 0x30, 0x2a, 0xee, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xc0,
	0x19, 0xe0, 0xa2, 0x02, 0x00, 0x00,
}
