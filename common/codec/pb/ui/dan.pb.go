// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dan.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DanInfo struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DanInfo) Reset()                    { *m = DanInfo{} }
func (m *DanInfo) String() string            { return proto.CompactTextString(m) }
func (*DanInfo) ProtoMessage()               {}
func (*DanInfo) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{0} }

func (m *DanInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *DanInfo) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type AlchemyInfo struct {
	KindId           *int32 `protobuf:"varint,1,req,name=kindId" json:"kindId,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	State            *int32 `protobuf:"varint,3,req,name=state" json:"state,omitempty"`
	StartTime        *int64 `protobuf:"varint,4,req,name=startTime" json:"startTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AlchemyInfo) Reset()                    { *m = AlchemyInfo{} }
func (m *AlchemyInfo) String() string            { return proto.CompactTextString(m) }
func (*AlchemyInfo) ProtoMessage()               {}
func (*AlchemyInfo) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{1} }

func (m *AlchemyInfo) GetKindId() int32 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

func (m *AlchemyInfo) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *AlchemyInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *AlchemyInfo) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

type CSDanGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSDanGet) Reset()                    { *m = CSDanGet{} }
func (m *CSDanGet) String() string            { return proto.CompactTextString(m) }
func (*CSDanGet) ProtoMessage()               {}
func (*CSDanGet) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{2} }

type SCDanGet struct {
	Level            *int32     `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	DanList          []*DanInfo `protobuf:"bytes,2,rep,name=danList" json:"danList,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SCDanGet) Reset()                    { *m = SCDanGet{} }
func (m *SCDanGet) String() string            { return proto.CompactTextString(m) }
func (*SCDanGet) ProtoMessage()               {}
func (*SCDanGet) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{3} }

func (m *SCDanGet) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *SCDanGet) GetDanList() []*DanInfo {
	if m != nil {
		return m.DanList
	}
	return nil
}

type CSDanUse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSDanUse) Reset()                    { *m = CSDanUse{} }
func (m *CSDanUse) String() string            { return proto.CompactTextString(m) }
func (*CSDanUse) ProtoMessage()               {}
func (*CSDanUse) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{4} }

type SCDanUse struct {
	DanList          []*DanInfo `protobuf:"bytes,1,rep,name=danList" json:"danList,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SCDanUse) Reset()                    { *m = SCDanUse{} }
func (m *SCDanUse) String() string            { return proto.CompactTextString(m) }
func (*SCDanUse) ProtoMessage()               {}
func (*SCDanUse) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{5} }

func (m *SCDanUse) GetDanList() []*DanInfo {
	if m != nil {
		return m.DanList
	}
	return nil
}

type CSDanUpgrade struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSDanUpgrade) Reset()                    { *m = CSDanUpgrade{} }
func (m *CSDanUpgrade) String() string            { return proto.CompactTextString(m) }
func (*CSDanUpgrade) ProtoMessage()               {}
func (*CSDanUpgrade) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{6} }

type SCDanUpgrade struct {
	Level            *int32 `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCDanUpgrade) Reset()                    { *m = SCDanUpgrade{} }
func (m *SCDanUpgrade) String() string            { return proto.CompactTextString(m) }
func (*SCDanUpgrade) ProtoMessage()               {}
func (*SCDanUpgrade) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{7} }

func (m *SCDanUpgrade) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

type CSAlchemyGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSAlchemyGet) Reset()                    { *m = CSAlchemyGet{} }
func (m *CSAlchemyGet) String() string            { return proto.CompactTextString(m) }
func (*CSAlchemyGet) ProtoMessage()               {}
func (*CSAlchemyGet) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{8} }

type SCAlchemyGet struct {
	AlchemyList      []*AlchemyInfo `protobuf:"bytes,1,rep,name=alchemyList" json:"alchemyList,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SCAlchemyGet) Reset()                    { *m = SCAlchemyGet{} }
func (m *SCAlchemyGet) String() string            { return proto.CompactTextString(m) }
func (*SCAlchemyGet) ProtoMessage()               {}
func (*SCAlchemyGet) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{9} }

func (m *SCAlchemyGet) GetAlchemyList() []*AlchemyInfo {
	if m != nil {
		return m.AlchemyList
	}
	return nil
}

type CSAlchemyStart struct {
	KindId           *int32 `protobuf:"varint,1,req,name=kindId" json:"kindId,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSAlchemyStart) Reset()                    { *m = CSAlchemyStart{} }
func (m *CSAlchemyStart) String() string            { return proto.CompactTextString(m) }
func (*CSAlchemyStart) ProtoMessage()               {}
func (*CSAlchemyStart) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{10} }

func (m *CSAlchemyStart) GetKindId() int32 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

func (m *CSAlchemyStart) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type SCAlchemyStart struct {
	AlchemyInfo      *AlchemyInfo `protobuf:"bytes,1,req,name=alchemyInfo" json:"alchemyInfo,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SCAlchemyStart) Reset()                    { *m = SCAlchemyStart{} }
func (m *SCAlchemyStart) String() string            { return proto.CompactTextString(m) }
func (*SCAlchemyStart) ProtoMessage()               {}
func (*SCAlchemyStart) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{11} }

func (m *SCAlchemyStart) GetAlchemyInfo() *AlchemyInfo {
	if m != nil {
		return m.AlchemyInfo
	}
	return nil
}

type CSAlchemyAccelerate struct {
	KindId           *int32 `protobuf:"varint,1,req,name=kindId" json:"kindId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSAlchemyAccelerate) Reset()                    { *m = CSAlchemyAccelerate{} }
func (m *CSAlchemyAccelerate) String() string            { return proto.CompactTextString(m) }
func (*CSAlchemyAccelerate) ProtoMessage()               {}
func (*CSAlchemyAccelerate) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{12} }

func (m *CSAlchemyAccelerate) GetKindId() int32 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

type SCAlchemyAccelerate struct {
	KindId           *int32 `protobuf:"varint,1,req,name=kindId" json:"kindId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCAlchemyAccelerate) Reset()                    { *m = SCAlchemyAccelerate{} }
func (m *SCAlchemyAccelerate) String() string            { return proto.CompactTextString(m) }
func (*SCAlchemyAccelerate) ProtoMessage()               {}
func (*SCAlchemyAccelerate) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{13} }

func (m *SCAlchemyAccelerate) GetKindId() int32 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

type CSAlchemyReceive struct {
	KindId           *int32 `protobuf:"varint,1,req,name=kindId" json:"kindId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSAlchemyReceive) Reset()                    { *m = CSAlchemyReceive{} }
func (m *CSAlchemyReceive) String() string            { return proto.CompactTextString(m) }
func (*CSAlchemyReceive) ProtoMessage()               {}
func (*CSAlchemyReceive) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{14} }

func (m *CSAlchemyReceive) GetKindId() int32 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

type SCAlchemyReceive struct {
	KindId           *int32 `protobuf:"varint,1,opt,name=kindId" json:"kindId,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCAlchemyReceive) Reset()                    { *m = SCAlchemyReceive{} }
func (m *SCAlchemyReceive) String() string            { return proto.CompactTextString(m) }
func (*SCAlchemyReceive) ProtoMessage()               {}
func (*SCAlchemyReceive) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{15} }

func (m *SCAlchemyReceive) GetKindId() int32 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

func (m *SCAlchemyReceive) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func init() {
	proto.RegisterType((*DanInfo)(nil), "ui.DanInfo")
	proto.RegisterType((*AlchemyInfo)(nil), "ui.AlchemyInfo")
	proto.RegisterType((*CSDanGet)(nil), "ui.CSDanGet")
	proto.RegisterType((*SCDanGet)(nil), "ui.SCDanGet")
	proto.RegisterType((*CSDanUse)(nil), "ui.CSDanUse")
	proto.RegisterType((*SCDanUse)(nil), "ui.SCDanUse")
	proto.RegisterType((*CSDanUpgrade)(nil), "ui.CSDanUpgrade")
	proto.RegisterType((*SCDanUpgrade)(nil), "ui.SCDanUpgrade")
	proto.RegisterType((*CSAlchemyGet)(nil), "ui.CSAlchemyGet")
	proto.RegisterType((*SCAlchemyGet)(nil), "ui.SCAlchemyGet")
	proto.RegisterType((*CSAlchemyStart)(nil), "ui.CSAlchemyStart")
	proto.RegisterType((*SCAlchemyStart)(nil), "ui.SCAlchemyStart")
	proto.RegisterType((*CSAlchemyAccelerate)(nil), "ui.CSAlchemyAccelerate")
	proto.RegisterType((*SCAlchemyAccelerate)(nil), "ui.SCAlchemyAccelerate")
	proto.RegisterType((*CSAlchemyReceive)(nil), "ui.CSAlchemyReceive")
	proto.RegisterType((*SCAlchemyReceive)(nil), "ui.SCAlchemyReceive")
}

func init() { proto.RegisterFile("dan.proto", fileDescriptor23) }

var fileDescriptor23 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x69, 0xea, 0xdc, 0xf6, 0x3a, 0xeb, 0xac, 0x97, 0x1e, 0x14, 0x4a, 0x50, 0xe8, 0xc5,
	0x0a, 0x22, 0x7a, 0x1e, 0x1b, 0xc8, 0x60, 0x27, 0xeb, 0x3e, 0x40, 0x68, 0x9f, 0x1a, 0x6c, 0xd3,
	0xd1, 0xa6, 0x03, 0xbf, 0xfd, 0x48, 0x53, 0xb2, 0xd2, 0x95, 0xdd, 0xf2, 0xe0, 0xf7, 0xff, 0xfd,
	0x5f, 0x1e, 0x4c, 0x53, 0x26, 0xa2, 0x5d, 0x59, 0xc8, 0xc2, 0x23, 0x35, 0xa7, 0x14, 0xc6, 0x2b,
	0x26, 0xd6, 0xe2, 0xbb, 0xf0, 0x00, 0x08, 0x4f, 0x7d, 0x2b, 0x20, 0xe1, 0xc8, 0x73, 0xc0, 0x16,
	0x75, 0xee, 0x13, 0x35, 0xd0, 0x0d, 0x38, 0x8b, 0x2c, 0xf9, 0xc5, 0xfc, 0xbf, 0xe1, 0x5c, 0xb8,
	0xfc, 0xe3, 0x22, 0x5d, 0x0f, 0xb1, 0xde, 0x15, 0x8c, 0x2a, 0xc9, 0x24, 0xfa, 0x76, 0x33, 0xde,
	0xc0, 0xb4, 0x92, 0xac, 0x94, 0x5f, 0x3c, 0x47, 0xff, 0x22, 0x20, 0xa1, 0x4d, 0x01, 0x26, 0xcb,
	0x78, 0xc5, 0xc4, 0x07, 0x4a, 0xfa, 0x0e, 0x93, 0x78, 0xa9, 0xdf, 0x2a, 0x99, 0xe1, 0x1e, 0xb3,
	0xd6, 0x7a, 0x07, 0xe3, 0x94, 0x89, 0x0d, 0xaf, 0xa4, 0x4f, 0x02, 0x3b, 0x74, 0x5e, 0x9c, 0xa8,
	0xe6, 0x51, 0xbb, 0xab, 0x91, 0x6c, 0x2b, 0xa4, 0x61, 0x2b, 0xd9, 0x56, 0xd8, 0x4d, 0x59, 0xa7,
	0x29, 0x17, 0x66, 0x3a, 0xb5, 0xfb, 0x29, 0x59, 0x8a, 0xf4, 0x1e, 0x66, 0x3a, 0xa9, 0xe7, 0xde,
	0x0a, 0x1a, 0x6f, 0x7f, 0xae, 0xb6, 0x7d, 0x55, 0xf8, 0x71, 0xf6, 0x1e, 0xc0, 0x61, 0x7a, 0xea,
	0x14, 0x5e, 0xab, 0xc2, 0xce, 0xb9, 0xe8, 0x13, 0xb8, 0xc6, 0x12, 0xab, 0x5b, 0x9c, 0x3d, 0x20,
	0x7d, 0x03, 0xd7, 0x94, 0x68, 0xfc, 0x58, 0xa3, 0x7c, 0x4d, 0x66, 0xa0, 0xe6, 0x11, 0x6e, 0x4d,
	0xcd, 0x22, 0x49, 0x30, 0xc3, 0x92, 0x49, 0xec, 0x77, 0x29, 0xcc, 0xe8, 0xcf, 0x60, 0x14, 0xe6,
	0xc6, 0xf6, 0x89, 0x09, 0xf2, 0xfd, 0x29, 0xf3, 0x0c, 0x73, 0xa3, 0x1a, 0x62, 0xac, 0xde, 0xd7,
	0x0e, 0x01, 0x00, 0x00, 0xff, 0xff, 0x97, 0xc1, 0xc9, 0x7d, 0x7b, 0x02, 0x00, 0x00,
}
