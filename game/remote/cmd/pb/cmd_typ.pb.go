// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmd_typ.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CmdType int32

const (
	CmdType_CMD_KICK_OUT_PLAYER_TYPE           CmdType = 1
	CmdType_CMD_FORBID_PLAYER_TYPE             CmdType = 2
	CmdType_CMD_UNFORBID_PLAYER_TYPE           CmdType = 3
	CmdType_CMD_FORBID_PLAYER_CHAT_TYPE        CmdType = 4
	CmdType_CMD_UNFORBID_PLAYER_CHAT_TYPE      CmdType = 5
	CmdType_CMD_IGNORE_PLAYER_CHAT_TYPE        CmdType = 6
	CmdType_CMD_UNIGNORE_PLAYER_CHAT_TYPE      CmdType = 7
	CmdType_CMD_FORBID_USER_TYPE               CmdType = 8
	CmdType_CMD_UNFORBID_USER_TYPE             CmdType = 9
	CmdType_CMD_CHAT_SET_TYPE                  CmdType = 10
	CmdType_CMD_REGISTER_SET_TYPE              CmdType = 11
	CmdType_CMD_SEND_SERVER_COMPENSATE_TYPE    CmdType = 12
	CmdType_CMD_SEND_PLAYER_COMPENSATE_TYPE    CmdType = 13
	CmdType_CMD_PRIVILEGE_SET_TYPE             CmdType = 14
	CmdType_CMD_PRIVILEGE_CHARGE_TYPE          CmdType = 15
	CmdType_CMD_CHARGE_TYPE                    CmdType = 16
	CmdType_CMD_BROADCAST_NOTICE               CmdType = 17
	CmdType_CMD_TRADE_SELL_TYPE                CmdType = 18
	CmdType_CMD_MARRY_SET_TYPE                 CmdType = 19
	CmdType_CMD_CREATE_ROLE_TYPE               CmdType = 20
	CmdType_CMD_ALLIANCE_NOTICE_TYPE           CmdType = 21
	CmdType_CMD_CUSTOM_TRADE_RECYCLE_GOLD_TYPE CmdType = 22
	CmdType_CMD_PING_TYPE                      CmdType = 23
	CmdType_CMD_EXCHANGE_TYPE                  CmdType = 24
	CmdType_CMD_FIRST_CHARGE_RESET_TYPE        CmdType = 25
	CmdType_CMD_ALLIANCE_DISMISS_TYPE          CmdType = 26
)

var CmdType_name = map[int32]string{
	1:  "CMD_KICK_OUT_PLAYER_TYPE",
	2:  "CMD_FORBID_PLAYER_TYPE",
	3:  "CMD_UNFORBID_PLAYER_TYPE",
	4:  "CMD_FORBID_PLAYER_CHAT_TYPE",
	5:  "CMD_UNFORBID_PLAYER_CHAT_TYPE",
	6:  "CMD_IGNORE_PLAYER_CHAT_TYPE",
	7:  "CMD_UNIGNORE_PLAYER_CHAT_TYPE",
	8:  "CMD_FORBID_USER_TYPE",
	9:  "CMD_UNFORBID_USER_TYPE",
	10: "CMD_CHAT_SET_TYPE",
	11: "CMD_REGISTER_SET_TYPE",
	12: "CMD_SEND_SERVER_COMPENSATE_TYPE",
	13: "CMD_SEND_PLAYER_COMPENSATE_TYPE",
	14: "CMD_PRIVILEGE_SET_TYPE",
	15: "CMD_PRIVILEGE_CHARGE_TYPE",
	16: "CMD_CHARGE_TYPE",
	17: "CMD_BROADCAST_NOTICE",
	18: "CMD_TRADE_SELL_TYPE",
	19: "CMD_MARRY_SET_TYPE",
	20: "CMD_CREATE_ROLE_TYPE",
	21: "CMD_ALLIANCE_NOTICE_TYPE",
	22: "CMD_CUSTOM_TRADE_RECYCLE_GOLD_TYPE",
	23: "CMD_PING_TYPE",
	24: "CMD_EXCHANGE_TYPE",
	25: "CMD_FIRST_CHARGE_RESET_TYPE",
	26: "CMD_ALLIANCE_DISMISS_TYPE",
}
var CmdType_value = map[string]int32{
	"CMD_KICK_OUT_PLAYER_TYPE":           1,
	"CMD_FORBID_PLAYER_TYPE":             2,
	"CMD_UNFORBID_PLAYER_TYPE":           3,
	"CMD_FORBID_PLAYER_CHAT_TYPE":        4,
	"CMD_UNFORBID_PLAYER_CHAT_TYPE":      5,
	"CMD_IGNORE_PLAYER_CHAT_TYPE":        6,
	"CMD_UNIGNORE_PLAYER_CHAT_TYPE":      7,
	"CMD_FORBID_USER_TYPE":               8,
	"CMD_UNFORBID_USER_TYPE":             9,
	"CMD_CHAT_SET_TYPE":                  10,
	"CMD_REGISTER_SET_TYPE":              11,
	"CMD_SEND_SERVER_COMPENSATE_TYPE":    12,
	"CMD_SEND_PLAYER_COMPENSATE_TYPE":    13,
	"CMD_PRIVILEGE_SET_TYPE":             14,
	"CMD_PRIVILEGE_CHARGE_TYPE":          15,
	"CMD_CHARGE_TYPE":                    16,
	"CMD_BROADCAST_NOTICE":               17,
	"CMD_TRADE_SELL_TYPE":                18,
	"CMD_MARRY_SET_TYPE":                 19,
	"CMD_CREATE_ROLE_TYPE":               20,
	"CMD_ALLIANCE_NOTICE_TYPE":           21,
	"CMD_CUSTOM_TRADE_RECYCLE_GOLD_TYPE": 22,
	"CMD_PING_TYPE":                      23,
	"CMD_EXCHANGE_TYPE":                  24,
	"CMD_FIRST_CHARGE_RESET_TYPE":        25,
	"CMD_ALLIANCE_DISMISS_TYPE":          26,
}

func (x CmdType) Enum() *CmdType {
	p := new(CmdType)
	*p = x
	return p
}
func (x CmdType) String() string {
	return proto.EnumName(CmdType_name, int32(x))
}
func (x *CmdType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CmdType_value, data, "CmdType")
	if err != nil {
		return err
	}
	*x = CmdType(value)
	return nil
}
func (CmdType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func init() {
	proto.RegisterEnum("pb.CmdType", CmdType_name, CmdType_value)
}

func init() { proto.RegisterFile("cmd_typ.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x41, 0x8f, 0xd3, 0x30,
	0x10, 0x85, 0xc5, 0x02, 0xbb, 0x30, 0x50, 0xb6, 0x9d, 0x6e, 0xbb, 0xed, 0xc2, 0x6a, 0x05, 0x48,
	0x1c, 0x38, 0xf0, 0x1f, 0xbc, 0xce, 0x90, 0x5a, 0x75, 0xec, 0x68, 0xec, 0x54, 0xe4, 0x14, 0x09,
	0xca, 0xb1, 0x6a, 0x84, 0x7a, 0xe9, 0x8d, 0x9f, 0x8e, 0xdc, 0xc4, 0x09, 0xa5, 0xe5, 0x92, 0x83,
	0xbf, 0xf7, 0xe6, 0xbd, 0x71, 0x0c, 0x83, 0x1f, 0x9b, 0x75, 0xb5, 0xdb, 0xd7, 0x5f, 0xea, 0x5f,
	0xdb, 0xdd, 0x16, 0x2f, 0xea, 0xef, 0x9f, 0x7f, 0x5f, 0xc2, 0x95, 0xdc, 0xac, 0xfd, 0xbe, 0xfe,
	0x89, 0xef, 0x60, 0x26, 0xb3, 0xa4, 0x5a, 0x2a, 0xb9, 0xac, 0x6c, 0xe1, 0xab, 0x5c, 0x8b, 0x92,
	0xb8, 0xf2, 0x65, 0x4e, 0xc3, 0x27, 0x78, 0x07, 0xd3, 0x40, 0xbf, 0x5a, 0x7e, 0x54, 0xc9, 0x11,
	0xbb, 0x88, 0xce, 0xc2, 0x9c, 0xa1, 0x4f, 0xf1, 0x01, 0xde, 0x9e, 0x3a, 0xe5, 0x42, 0xf8, 0x46,
	0xf0, 0x0c, 0xdf, 0xc3, 0xfd, 0x39, 0x7b, 0x2f, 0x79, 0x1e, 0x67, 0xa8, 0xd4, 0x58, 0xa6, 0x53,
	0xc1, 0x65, 0x3f, 0xe3, 0x7f, 0x92, 0x2b, 0x9c, 0xc1, 0xcd, 0x5f, 0x3d, 0x0a, 0x17, 0x1b, 0xbe,
	0x88, 0xbb, 0x75, 0x05, 0x7a, 0xf6, 0x12, 0x27, 0x30, 0x0a, 0xec, 0x30, 0xc8, 0x51, 0x3b, 0x0c,
	0x70, 0x0e, 0x93, 0x70, 0xcc, 0x94, 0x2a, 0xe7, 0x89, 0x7b, 0xf4, 0x0a, 0x3f, 0xc2, 0x43, 0x40,
	0x8e, 0x4c, 0xf8, 0xf0, 0x2a, 0xd4, 0xb0, 0x59, 0x4e, 0xc6, 0x09, 0x4f, 0x8d, 0xe8, 0xf5, 0x91,
	0x28, 0x76, 0xfd, 0x47, 0x34, 0x88, 0xbd, 0x72, 0x56, 0x2b, 0xa5, 0x29, 0xa5, 0x3e, 0xe5, 0x0d,
	0xde, 0xc3, 0xfc, 0x98, 0xc9, 0x85, 0xe0, 0xb4, 0xb5, 0x5e, 0xe3, 0x18, 0xae, 0xdb, 0xda, 0xdd,
	0xe1, 0x30, 0xde, 0xc0, 0x23, 0x5b, 0x91, 0x48, 0xe1, 0x7c, 0x65, 0xac, 0x57, 0x92, 0x86, 0x23,
	0xbc, 0x85, 0x71, 0x20, 0x9e, 0x45, 0x12, 0x52, 0xb4, 0x6e, 0x2c, 0x88, 0x53, 0xc0, 0x00, 0x32,
	0xc1, 0x5c, 0xf6, 0xf1, 0xe3, 0x38, 0x4a, 0x32, 0x85, 0xbe, 0x6c, 0x75, 0x1b, 0x72, 0x13, 0x1f,
	0x83, 0xd0, 0x5a, 0x09, 0x23, 0xa9, 0xcd, 0x68, 0xe8, 0x04, 0x3f, 0xc1, 0x87, 0x83, 0xaf, 0x70,
	0xde, 0x66, 0x6d, 0x1e, 0x93, 0x2c, 0xa5, 0xa6, 0x2a, 0xb5, 0x3a, 0x69, 0x74, 0x53, 0x1c, 0xc1,
	0xe0, 0xb0, 0x9e, 0x32, 0x69, 0x73, 0x74, 0x1b, 0xff, 0x04, 0x7d, 0x93, 0x0b, 0x61, 0xe2, 0x52,
	0xb3, 0xee, 0x79, 0x29, 0x76, 0x3e, 0xee, 0xcb, 0xd4, 0x55, 0x9d, 0xc7, 0x9b, 0xea, 0x0a, 0x25,
	0xca, 0x65, 0xca, 0xb9, 0x06, 0xdf, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x8a, 0xc9, 0xfe, 0x22,
	0x16, 0x03, 0x00, 0x00,
}
