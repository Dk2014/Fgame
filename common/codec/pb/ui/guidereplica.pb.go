// Code generated by protoc-gen-go. DO NOT EDIT.
// source: guidereplica.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CSGuideReplicaChallenge struct {
	QuestId          *int32 `protobuf:"varint,1,req,name=questId" json:"questId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSGuideReplicaChallenge) Reset()                    { *m = CSGuideReplicaChallenge{} }
func (m *CSGuideReplicaChallenge) String() string            { return proto.CompactTextString(m) }
func (*CSGuideReplicaChallenge) ProtoMessage()               {}
func (*CSGuideReplicaChallenge) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{0} }

func (m *CSGuideReplicaChallenge) GetQuestId() int32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

type SCGuideReplicaChallenge struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCGuideReplicaChallenge) Reset()                    { *m = SCGuideReplicaChallenge{} }
func (m *SCGuideReplicaChallenge) String() string            { return proto.CompactTextString(m) }
func (*SCGuideReplicaChallenge) ProtoMessage()               {}
func (*SCGuideReplicaChallenge) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{1} }

type SCGuideReplicaChallengeResult struct {
	IsSuccess        *bool       `protobuf:"varint,1,req,name=isSuccess" json:"isSuccess,omitempty"`
	DropList         []*DropInfo `protobuf:"bytes,2,rep,name=dropList" json:"dropList,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCGuideReplicaChallengeResult) Reset()                    { *m = SCGuideReplicaChallengeResult{} }
func (m *SCGuideReplicaChallengeResult) String() string            { return proto.CompactTextString(m) }
func (*SCGuideReplicaChallengeResult) ProtoMessage()               {}
func (*SCGuideReplicaChallengeResult) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{2} }

func (m *SCGuideReplicaChallengeResult) GetIsSuccess() bool {
	if m != nil && m.IsSuccess != nil {
		return *m.IsSuccess
	}
	return false
}

func (m *SCGuideReplicaChallengeResult) GetDropList() []*DropInfo {
	if m != nil {
		return m.DropList
	}
	return nil
}

type CatDogKillInfo struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CatDogKillInfo) Reset()                    { *m = CatDogKillInfo{} }
func (m *CatDogKillInfo) String() string            { return proto.CompactTextString(m) }
func (*CatDogKillInfo) ProtoMessage()               {}
func (*CatDogKillInfo) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{3} }

func (m *CatDogKillInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CatDogKillInfo) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type CatDogInfo struct {
	KillInfo         []*CatDogKillInfo `protobuf:"bytes,1,rep,name=killInfo" json:"killInfo,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CatDogInfo) Reset()                    { *m = CatDogInfo{} }
func (m *CatDogInfo) String() string            { return proto.CompactTextString(m) }
func (*CatDogInfo) ProtoMessage()               {}
func (*CatDogInfo) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{4} }

func (m *CatDogInfo) GetKillInfo() []*CatDogKillInfo {
	if m != nil {
		return m.KillInfo
	}
	return nil
}

type SCGuideReplicaSceneInfo struct {
	CreateTime       *int64      `protobuf:"varint,1,req,name=createTime" json:"createTime,omitempty"`
	MapId            *int32      `protobuf:"varint,2,req,name=mapId" json:"mapId,omitempty"`
	GuideType        *int32      `protobuf:"varint,3,req,name=guideType" json:"guideType,omitempty"`
	CatDogInfo       *CatDogInfo `protobuf:"bytes,4,opt,name=catDogInfo" json:"catDogInfo,omitempty"`
	QuestId          *int32      `protobuf:"varint,5,req,name=questId" json:"questId,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCGuideReplicaSceneInfo) Reset()                    { *m = SCGuideReplicaSceneInfo{} }
func (m *SCGuideReplicaSceneInfo) String() string            { return proto.CompactTextString(m) }
func (*SCGuideReplicaSceneInfo) ProtoMessage()               {}
func (*SCGuideReplicaSceneInfo) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{5} }

func (m *SCGuideReplicaSceneInfo) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *SCGuideReplicaSceneInfo) GetMapId() int32 {
	if m != nil && m.MapId != nil {
		return *m.MapId
	}
	return 0
}

func (m *SCGuideReplicaSceneInfo) GetGuideType() int32 {
	if m != nil && m.GuideType != nil {
		return *m.GuideType
	}
	return 0
}

func (m *SCGuideReplicaSceneInfo) GetCatDogInfo() *CatDogInfo {
	if m != nil {
		return m.CatDogInfo
	}
	return nil
}

func (m *SCGuideReplicaSceneInfo) GetQuestId() int32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

type SCGuideReplicaSceneDataChangedNotice struct {
	GuideType        *int32      `protobuf:"varint,1,req,name=guideType" json:"guideType,omitempty"`
	CatDogInfo       *CatDogInfo `protobuf:"bytes,2,opt,name=catDogInfo" json:"catDogInfo,omitempty"`
	HerbsFlag        *bool       `protobuf:"varint,3,opt,name=herbsFlag" json:"herbsFlag,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCGuideReplicaSceneDataChangedNotice) Reset()         { *m = SCGuideReplicaSceneDataChangedNotice{} }
func (m *SCGuideReplicaSceneDataChangedNotice) String() string { return proto.CompactTextString(m) }
func (*SCGuideReplicaSceneDataChangedNotice) ProtoMessage()    {}
func (*SCGuideReplicaSceneDataChangedNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor47, []int{6}
}

func (m *SCGuideReplicaSceneDataChangedNotice) GetGuideType() int32 {
	if m != nil && m.GuideType != nil {
		return *m.GuideType
	}
	return 0
}

func (m *SCGuideReplicaSceneDataChangedNotice) GetCatDogInfo() *CatDogInfo {
	if m != nil {
		return m.CatDogInfo
	}
	return nil
}

func (m *SCGuideReplicaSceneDataChangedNotice) GetHerbsFlag() bool {
	if m != nil && m.HerbsFlag != nil {
		return *m.HerbsFlag
	}
	return false
}

type CSGuideReplicaPlayerCommonOperate struct {
	GuideType        *int32 `protobuf:"varint,1,req,name=guideType" json:"guideType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSGuideReplicaPlayerCommonOperate) Reset()         { *m = CSGuideReplicaPlayerCommonOperate{} }
func (m *CSGuideReplicaPlayerCommonOperate) String() string { return proto.CompactTextString(m) }
func (*CSGuideReplicaPlayerCommonOperate) ProtoMessage()    {}
func (*CSGuideReplicaPlayerCommonOperate) Descriptor() ([]byte, []int) {
	return fileDescriptor47, []int{7}
}

func (m *CSGuideReplicaPlayerCommonOperate) GetGuideType() int32 {
	if m != nil && m.GuideType != nil {
		return *m.GuideType
	}
	return 0
}

type SCGuideReplicaPlayerCommonOperate struct {
	GuideType        *int32 `protobuf:"varint,1,req,name=guideType" json:"guideType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCGuideReplicaPlayerCommonOperate) Reset()         { *m = SCGuideReplicaPlayerCommonOperate{} }
func (m *SCGuideReplicaPlayerCommonOperate) String() string { return proto.CompactTextString(m) }
func (*SCGuideReplicaPlayerCommonOperate) ProtoMessage()    {}
func (*SCGuideReplicaPlayerCommonOperate) Descriptor() ([]byte, []int) {
	return fileDescriptor47, []int{8}
}

func (m *SCGuideReplicaPlayerCommonOperate) GetGuideType() int32 {
	if m != nil && m.GuideType != nil {
		return *m.GuideType
	}
	return 0
}

func init() {
	proto.RegisterType((*CSGuideReplicaChallenge)(nil), "ui.CSGuideReplicaChallenge")
	proto.RegisterType((*SCGuideReplicaChallenge)(nil), "ui.SCGuideReplicaChallenge")
	proto.RegisterType((*SCGuideReplicaChallengeResult)(nil), "ui.SCGuideReplicaChallengeResult")
	proto.RegisterType((*CatDogKillInfo)(nil), "ui.CatDogKillInfo")
	proto.RegisterType((*CatDogInfo)(nil), "ui.CatDogInfo")
	proto.RegisterType((*SCGuideReplicaSceneInfo)(nil), "ui.SCGuideReplicaSceneInfo")
	proto.RegisterType((*SCGuideReplicaSceneDataChangedNotice)(nil), "ui.SCGuideReplicaSceneDataChangedNotice")
	proto.RegisterType((*CSGuideReplicaPlayerCommonOperate)(nil), "ui.CSGuideReplicaPlayerCommonOperate")
	proto.RegisterType((*SCGuideReplicaPlayerCommonOperate)(nil), "ui.SCGuideReplicaPlayerCommonOperate")
}

func init() { proto.RegisterFile("guidereplica.proto", fileDescriptor47) }

var fileDescriptor47 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x51, 0x4f, 0xb3, 0x30,
	0x14, 0x86, 0x03, 0x6c, 0xf9, 0xd8, 0xd9, 0xbe, 0x99, 0xf5, 0x66, 0x68, 0xa2, 0x41, 0xb2, 0x0b,
	0xa2, 0xc9, 0x2e, 0x76, 0xe1, 0x1f, 0x60, 0xd1, 0x2c, 0x1a, 0x35, 0x63, 0x7f, 0xa0, 0xc2, 0x91,
	0x35, 0x16, 0x5a, 0x4b, 0xb9, 0xd8, 0xbd, 0x3f, 0xdc, 0xb4, 0x18, 0x15, 0x83, 0x89, 0x97, 0x94,
	0xf7, 0xbc, 0xcf, 0xd3, 0x53, 0x20, 0x45, 0xc3, 0x72, 0x54, 0x28, 0x39, 0xcb, 0xe8, 0x52, 0x2a,
	0xa1, 0x05, 0x71, 0x1b, 0x76, 0x02, 0xb9, 0x12, 0xb2, 0xfd, 0x8e, 0x2e, 0x60, 0x9e, 0xa4, 0x37,
	0x26, 0xb7, 0x6d, 0x73, 0xc9, 0x9e, 0x72, 0x8e, 0x55, 0x81, 0xe4, 0x08, 0xfe, 0xbd, 0x36, 0x58,
	0xeb, 0x4d, 0x1e, 0x38, 0xa1, 0x1b, 0x0f, 0xa3, 0x63, 0x98, 0xa7, 0x49, 0x6f, 0x36, 0xda, 0xc2,
	0xe9, 0x2f, 0xbf, 0xb6, 0x58, 0x37, 0x5c, 0x93, 0x19, 0x8c, 0x58, 0x9d, 0x36, 0x59, 0x86, 0x75,
	0x6d, 0xeb, 0x7c, 0x72, 0x06, 0xbe, 0x11, 0xb9, 0x63, 0xb5, 0x0e, 0xdc, 0xd0, 0x8b, 0xc7, 0xab,
	0xc9, 0xb2, 0x61, 0xcb, 0xb5, 0x12, 0x72, 0x53, 0x3d, 0x8b, 0xe8, 0x12, 0xa6, 0x09, 0xd5, 0x6b,
	0x51, 0xdc, 0x32, 0xce, 0xcd, 0x09, 0x99, 0xc0, 0x40, 0x1f, 0x24, 0xb6, 0x3a, 0x64, 0x0c, 0x5e,
	0xd5, 0x94, 0x81, 0x6b, 0xdd, 0x56, 0x00, 0x6d, 0xd8, 0x06, 0x17, 0xe0, 0xbf, 0x7c, 0x0c, 0x05,
	0x8e, 0xad, 0x26, 0xa6, 0xba, 0x5b, 0x17, 0xbd, 0x39, 0x3f, 0x2f, 0x94, 0x66, 0x58, 0xa1, 0x6d,
	0x20, 0x00, 0x99, 0x42, 0xaa, 0x71, 0xc7, 0xca, 0x16, 0xe8, 0x91, 0xff, 0x30, 0x2c, 0xa9, 0xdc,
	0xe4, 0x2d, 0xd2, 0x5c, 0xc9, 0x2e, 0x78, 0x67, 0x94, 0x3c, 0x7b, 0x14, 0x01, 0x64, 0x9f, 0x16,
	0xc1, 0x20, 0x74, 0xe2, 0xf1, 0x6a, 0xfa, 0x45, 0xb6, 0xcd, 0xdf, 0xd6, 0x3a, 0xb4, 0xea, 0x12,
	0x16, 0x3d, 0x16, 0x6b, 0xaa, 0xcd, 0x12, 0xab, 0x02, 0xf3, 0x7b, 0xa1, 0x59, 0x86, 0x5d, 0x9e,
	0xd3, 0xc3, 0x73, 0x7b, 0x79, 0x33, 0x18, 0xed, 0x51, 0x3d, 0xd5, 0xd7, 0x9c, 0x16, 0x81, 0x17,
	0x3a, 0xb1, 0x1f, 0x5d, 0xc1, 0x79, 0xf7, 0xd1, 0x1f, 0x39, 0x3d, 0xa0, 0x4a, 0x44, 0x59, 0x8a,
	0xea, 0x41, 0xa2, 0xa2, 0xba, 0x0f, 0x67, 0xe6, 0xba, 0xa6, 0x7f, 0x9b, 0x7b, 0x0f, 0x00, 0x00,
	0xff, 0xff, 0x40, 0xe5, 0x93, 0xc9, 0x89, 0x02, 0x00, 0x00,
}
