// Code generated by protoc-gen-go. DO NOT EDIT.
// source: christmas.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SCChristmasCollectRefreshBroadcast struct {
	GroupId          *int32 `protobuf:"varint,1,opt,name=groupId" json:"groupId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCChristmasCollectRefreshBroadcast) Reset()         { *m = SCChristmasCollectRefreshBroadcast{} }
func (m *SCChristmasCollectRefreshBroadcast) String() string { return proto.CompactTextString(m) }
func (*SCChristmasCollectRefreshBroadcast) ProtoMessage()    {}
func (*SCChristmasCollectRefreshBroadcast) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{0}
}

func (m *SCChristmasCollectRefreshBroadcast) GetGroupId() int32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

type SCChristmasCollectNumNotice struct {
	CollectNum       *int32 `protobuf:"varint,1,req,name=collectNum" json:"collectNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCChristmasCollectNumNotice) Reset()                    { *m = SCChristmasCollectNumNotice{} }
func (m *SCChristmasCollectNumNotice) String() string            { return proto.CompactTextString(m) }
func (*SCChristmasCollectNumNotice) ProtoMessage()               {}
func (*SCChristmasCollectNumNotice) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{1} }

func (m *SCChristmasCollectNumNotice) GetCollectNum() int32 {
	if m != nil && m.CollectNum != nil {
		return *m.CollectNum
	}
	return 0
}

func init() {
	proto.RegisterType((*SCChristmasCollectRefreshBroadcast)(nil), "ui.SCChristmasCollectRefreshBroadcast")
	proto.RegisterType((*SCChristmasCollectNumNotice)(nil), "ui.SCChristmasCollectNumNotice")
}

func init() { proto.RegisterFile("christmas.proto", fileDescriptor17) }

var fileDescriptor17 = []byte{
	// 122 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xce, 0x28, 0xca,
	0x2c, 0x2e, 0xc9, 0x4d, 0x2c, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0xcd, 0x54,
	0x32, 0xe5, 0x52, 0x0a, 0x76, 0x76, 0x86, 0x49, 0x38, 0xe7, 0xe7, 0xe4, 0xa4, 0x26, 0x97, 0x04,
	0xa5, 0xa6, 0x15, 0xa5, 0x16, 0x67, 0x38, 0x15, 0xe5, 0x27, 0xa6, 0x24, 0x27, 0x16, 0x97, 0x08,
	0xf1, 0x73, 0xb1, 0xa7, 0x17, 0xe5, 0x97, 0x16, 0x78, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0,
	0x2a, 0x19, 0x72, 0x49, 0x63, 0x6a, 0xf3, 0x2b, 0xcd, 0xf5, 0xcb, 0x2f, 0xc9, 0x4c, 0x4e, 0x15,
	0x12, 0xe2, 0xe2, 0x4a, 0x86, 0x8b, 0x49, 0x30, 0x2a, 0x30, 0x69, 0xb0, 0x02, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x74, 0xba, 0x62, 0xa4, 0x7f, 0x00, 0x00, 0x00,
}
