// Code generated by protoc-gen-go. DO NOT EDIT.
// source: error.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ErrorCode int32

const (
	ErrorCode_Unknown                   ErrorCode = 1
	ErrorCode_GMFormatWrong             ErrorCode = 10001
	ErrorCode_RepeatCreateJob           ErrorCode = 12001
	ErrorCode_NameAlreadyExist          ErrorCode = 12002
	ErrorCode_NameInvalid               ErrorCode = 12003
	ErrorCode_JobInvalid                ErrorCode = 12004
	ErrorCode_SexInvalid                ErrorCode = 12005
	ErrorCode_InventorySlotNoEnough     ErrorCode = 13001
	ErrorCode_InventoryArgumentInvalid  ErrorCode = 13002
	ErrorCode_InventoryCanNotSell       ErrorCode = 13003
	ErrorCode_InventoryCanNotAddSlot    ErrorCode = 13004
	ErrorCode_MiscRealNameAuthAlready   ErrorCode = 14001
	ErrorCode_MiscRealNameAuthCodeWrong ErrorCode = 14002
	ErrorCode_MiscRealNamePhoneInvalid  ErrorCode = 14003
	ErrorCode_MiscRealNameAuthInfoWrong ErrorCode = 14004
)

var ErrorCode_name = map[int32]string{
	1:     "Unknown",
	10001: "GMFormatWrong",
	12001: "RepeatCreateJob",
	12002: "NameAlreadyExist",
	12003: "NameInvalid",
	12004: "JobInvalid",
	12005: "SexInvalid",
	13001: "InventorySlotNoEnough",
	13002: "InventoryArgumentInvalid",
	13003: "InventoryCanNotSell",
	13004: "InventoryCanNotAddSlot",
	14001: "MiscRealNameAuthAlready",
	14002: "MiscRealNameAuthCodeWrong",
	14003: "MiscRealNamePhoneInvalid",
	14004: "MiscRealNameAuthInfoWrong",
}
var ErrorCode_value = map[string]int32{
	"Unknown":                   1,
	"GMFormatWrong":             10001,
	"RepeatCreateJob":           12001,
	"NameAlreadyExist":          12002,
	"NameInvalid":               12003,
	"JobInvalid":                12004,
	"SexInvalid":                12005,
	"InventorySlotNoEnough":     13001,
	"InventoryArgumentInvalid":  13002,
	"InventoryCanNotSell":       13003,
	"InventoryCanNotAddSlot":    13004,
	"MiscRealNameAuthAlready":   14001,
	"MiscRealNameAuthCodeWrong": 14002,
	"MiscRealNamePhoneInvalid":  14003,
	"MiscRealNameAuthInfoWrong": 14004,
}

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}
func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (x *ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorCode_value, data, "ErrorCode")
	if err != nil {
		return err
	}
	*x = ErrorCode(value)
	return nil
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{0} }

func init() {
	proto.RegisterEnum("ui.ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("error.proto", fileDescriptor30) }

var fileDescriptor30 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4b, 0x4e, 0x02, 0x41,
	0x10, 0x86, 0x23, 0x1b, 0x63, 0x11, 0x43, 0xa7, 0x14, 0xc5, 0xe7, 0x01, 0x5c, 0x78, 0x07, 0x42,
	0xd0, 0x40, 0xc2, 0xc4, 0x40, 0x8c, 0xab, 0x59, 0x34, 0x4e, 0x39, 0x33, 0xb1, 0xbb, 0x8a, 0x34,
	0x3d, 0x08, 0xc7, 0xf0, 0x28, 0x3e, 0x2e, 0xe1, 0xe3, 0x12, 0xbe, 0x6e, 0xe1, 0xc2, 0x0c, 0x38,
	0x13, 0x43, 0xdc, 0x7e, 0x5f, 0xfe, 0x4a, 0xfd, 0x3f, 0x54, 0xc9, 0x39, 0x71, 0xc7, 0x23, 0x27,
	0x5e, 0xb0, 0x92, 0xa5, 0x47, 0xdf, 0x15, 0x58, 0x6b, 0xe7, 0xac, 0x25, 0x11, 0x61, 0x15, 0x56,
	0xcf, 0xf9, 0x9a, 0xe5, 0x86, 0xd5, 0x0a, 0x22, 0xac, 0x9f, 0xf6, 0x4e, 0xc4, 0x59, 0xed, 0x2f,
	0x9c, 0x70, 0xac, 0x6e, 0x03, 0xdc, 0x84, 0x5a, 0x9f, 0x46, 0xa4, 0x7d, 0xcb, 0x91, 0xf6, 0xd4,
	0x95, 0xa1, 0x7a, 0x0b, 0xb1, 0x0e, 0x2a, 0xd0, 0x96, 0x9a, 0xc6, 0x91, 0x8e, 0x66, 0xed, 0x69,
	0x3a, 0xf6, 0xea, 0x3d, 0x44, 0x05, 0xd5, 0x1c, 0x77, 0x78, 0xa2, 0x4d, 0x1a, 0xa9, 0x8f, 0x10,
	0x6b, 0x00, 0x5d, 0x19, 0x16, 0xe0, 0x73, 0x0e, 0x06, 0x34, 0x2d, 0xc0, 0x57, 0x88, 0xbb, 0x50,
	0xef, 0xf0, 0x84, 0xd8, 0x8b, 0x9b, 0x0d, 0x8c, 0xf8, 0x40, 0xda, 0x2c, 0x59, 0x9c, 0xa8, 0x27,
	0xc2, 0x03, 0x68, 0x94, 0xae, 0xe9, 0xe2, 0xcc, 0x12, 0xfb, 0x22, 0xfa, 0x4c, 0xd8, 0x80, 0x8d,
	0x52, 0xb7, 0x34, 0x07, 0xe2, 0x07, 0x64, 0x8c, 0x7a, 0x21, 0xdc, 0x83, 0xad, 0x25, 0xd3, 0x8c,
	0xa2, 0xfc, 0xba, 0x7a, 0x25, 0xdc, 0x87, 0xed, 0x5e, 0x3a, 0xbe, 0xec, 0x93, 0x36, 0xf3, 0x12,
	0x99, 0x4f, 0x7e, 0x8b, 0xa8, 0x3b, 0x8b, 0x87, 0xb0, 0xb3, 0x6c, 0xf3, 0xa5, 0x16, 0x83, 0xdc,
	0xdb, 0xfc, 0xa7, 0xbf, 0xfe, 0x2c, 0x11, 0x2e, 0x0b, 0x3f, 0xfc, 0x1b, 0xef, 0xf0, 0x95, 0x2c,
	0xe2, 0x8f, 0xf6, 0x27, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x08, 0xe2, 0x13, 0x90, 0x01, 0x00, 0x00,
}
