// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shangguzhiling.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LingShouInfo struct {
	Type             *int32          `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Level            *int32          `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Exp              *int64          `protobuf:"varint,3,req,name=exp" json:"exp,omitempty"`
	Rank             *int32          `protobuf:"varint,4,req,name=rank" json:"rank,omitempty"`
	UprankBless      *int64          `protobuf:"varint,5,req,name=uprankBless" json:"uprankBless,omitempty"`
	UprankTimes      *int32          `protobuf:"varint,6,req,name=uprankTimes" json:"uprankTimes,omitempty"`
	LingwenList      []*LingWenInfo  `protobuf:"bytes,7,rep,name=lingwenList" json:"lingwenList,omitempty"`
	LinglianList     []*LingLianInfo `protobuf:"bytes,8,rep,name=linglianList" json:"linglianList,omitempty"`
	LinglianTimes    *int32          `protobuf:"varint,9,req,name=linglianTimes" json:"linglianTimes,omitempty"`
	ReceiveTime      *int64          `protobuf:"varint,10,req,name=receiveTime" json:"receiveTime,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *LingShouInfo) Reset()                    { *m = LingShouInfo{} }
func (m *LingShouInfo) String() string            { return proto.CompactTextString(m) }
func (*LingShouInfo) ProtoMessage()               {}
func (*LingShouInfo) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{0} }

func (m *LingShouInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *LingShouInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *LingShouInfo) GetExp() int64 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *LingShouInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *LingShouInfo) GetUprankBless() int64 {
	if m != nil && m.UprankBless != nil {
		return *m.UprankBless
	}
	return 0
}

func (m *LingShouInfo) GetUprankTimes() int32 {
	if m != nil && m.UprankTimes != nil {
		return *m.UprankTimes
	}
	return 0
}

func (m *LingShouInfo) GetLingwenList() []*LingWenInfo {
	if m != nil {
		return m.LingwenList
	}
	return nil
}

func (m *LingShouInfo) GetLinglianList() []*LingLianInfo {
	if m != nil {
		return m.LinglianList
	}
	return nil
}

func (m *LingShouInfo) GetLinglianTimes() int32 {
	if m != nil && m.LinglianTimes != nil {
		return *m.LinglianTimes
	}
	return 0
}

func (m *LingShouInfo) GetReceiveTime() int64 {
	if m != nil && m.ReceiveTime != nil {
		return *m.ReceiveTime
	}
	return 0
}

type LingWenInfo struct {
	SubType          *int32 `protobuf:"varint,1,req,name=subType" json:"subType,omitempty"`
	Level            *int32 `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Exp              *int64 `protobuf:"varint,3,req,name=exp" json:"exp,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LingWenInfo) Reset()                    { *m = LingWenInfo{} }
func (m *LingWenInfo) String() string            { return proto.CompactTextString(m) }
func (*LingWenInfo) ProtoMessage()               {}
func (*LingWenInfo) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{1} }

func (m *LingWenInfo) GetSubType() int32 {
	if m != nil && m.SubType != nil {
		return *m.SubType
	}
	return 0
}

func (m *LingWenInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *LingWenInfo) GetExp() int64 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

type LingLianInfo struct {
	SubType          *int32 `protobuf:"varint,1,req,name=subType" json:"subType,omitempty"`
	PoolMark         *int32 `protobuf:"varint,2,req,name=poolMark" json:"poolMark,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LingLianInfo) Reset()                    { *m = LingLianInfo{} }
func (m *LingLianInfo) String() string            { return proto.CompactTextString(m) }
func (*LingLianInfo) ProtoMessage()               {}
func (*LingLianInfo) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{2} }

func (m *LingLianInfo) GetSubType() int32 {
	if m != nil && m.SubType != nil {
		return *m.SubType
	}
	return 0
}

func (m *LingLianInfo) GetPoolMark() int32 {
	if m != nil && m.PoolMark != nil {
		return *m.PoolMark
	}
	return 0
}

type CSShangguzhilingInfo struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSShangguzhilingInfo) Reset()                    { *m = CSShangguzhilingInfo{} }
func (m *CSShangguzhilingInfo) String() string            { return proto.CompactTextString(m) }
func (*CSShangguzhilingInfo) ProtoMessage()               {}
func (*CSShangguzhilingInfo) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{3} }

type SCShangguzhilingInfo struct {
	LingshouList     []*LingShouInfo `protobuf:"bytes,1,rep,name=lingshouList" json:"lingshouList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SCShangguzhilingInfo) Reset()                    { *m = SCShangguzhilingInfo{} }
func (m *SCShangguzhilingInfo) String() string            { return proto.CompactTextString(m) }
func (*SCShangguzhilingInfo) ProtoMessage()               {}
func (*SCShangguzhilingInfo) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{4} }

func (m *SCShangguzhilingInfo) GetLingshouList() []*LingShouInfo {
	if m != nil {
		return m.LingshouList
	}
	return nil
}

type CSShangguzhilingUplevel struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	ItemId           *int32 `protobuf:"varint,2,req,name=itemId" json:"itemId,omitempty"`
	AutoFlag         *bool  `protobuf:"varint,3,req,name=autoFlag" json:"autoFlag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSShangguzhilingUplevel) Reset()                    { *m = CSShangguzhilingUplevel{} }
func (m *CSShangguzhilingUplevel) String() string            { return proto.CompactTextString(m) }
func (*CSShangguzhilingUplevel) ProtoMessage()               {}
func (*CSShangguzhilingUplevel) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{5} }

func (m *CSShangguzhilingUplevel) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSShangguzhilingUplevel) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CSShangguzhilingUplevel) GetAutoFlag() bool {
	if m != nil && m.AutoFlag != nil {
		return *m.AutoFlag
	}
	return false
}

type SCShangguzhilingUplevel struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Level            *int32 `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Exp              *int64 `protobuf:"varint,3,req,name=exp" json:"exp,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShangguzhilingUplevel) Reset()                    { *m = SCShangguzhilingUplevel{} }
func (m *SCShangguzhilingUplevel) String() string            { return proto.CompactTextString(m) }
func (*SCShangguzhilingUplevel) ProtoMessage()               {}
func (*SCShangguzhilingUplevel) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{6} }

func (m *SCShangguzhilingUplevel) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *SCShangguzhilingUplevel) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *SCShangguzhilingUplevel) GetExp() int64 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

type CSShangguzhilingLingWenUplevel struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	SubType          *int32 `protobuf:"varint,2,req,name=subType" json:"subType,omitempty"`
	ItemId           *int32 `protobuf:"varint,3,req,name=itemId" json:"itemId,omitempty"`
	AutoFlag         *bool  `protobuf:"varint,4,req,name=autoFlag" json:"autoFlag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSShangguzhilingLingWenUplevel) Reset()                    { *m = CSShangguzhilingLingWenUplevel{} }
func (m *CSShangguzhilingLingWenUplevel) String() string            { return proto.CompactTextString(m) }
func (*CSShangguzhilingLingWenUplevel) ProtoMessage()               {}
func (*CSShangguzhilingLingWenUplevel) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{7} }

func (m *CSShangguzhilingLingWenUplevel) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSShangguzhilingLingWenUplevel) GetSubType() int32 {
	if m != nil && m.SubType != nil {
		return *m.SubType
	}
	return 0
}

func (m *CSShangguzhilingLingWenUplevel) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CSShangguzhilingLingWenUplevel) GetAutoFlag() bool {
	if m != nil && m.AutoFlag != nil {
		return *m.AutoFlag
	}
	return false
}

type SCShangguzhilingLingWenUplevel struct {
	Type             *int32       `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Lingwen          *LingWenInfo `protobuf:"bytes,2,req,name=lingwen" json:"lingwen,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SCShangguzhilingLingWenUplevel) Reset()                    { *m = SCShangguzhilingLingWenUplevel{} }
func (m *SCShangguzhilingLingWenUplevel) String() string            { return proto.CompactTextString(m) }
func (*SCShangguzhilingLingWenUplevel) ProtoMessage()               {}
func (*SCShangguzhilingLingWenUplevel) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{8} }

func (m *SCShangguzhilingLingWenUplevel) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *SCShangguzhilingLingWenUplevel) GetLingwen() *LingWenInfo {
	if m != nil {
		return m.Lingwen
	}
	return nil
}

type CSShangguzhilingUpRank struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	AutoFlag         *bool  `protobuf:"varint,2,req,name=autoFlag" json:"autoFlag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSShangguzhilingUpRank) Reset()                    { *m = CSShangguzhilingUpRank{} }
func (m *CSShangguzhilingUpRank) String() string            { return proto.CompactTextString(m) }
func (*CSShangguzhilingUpRank) ProtoMessage()               {}
func (*CSShangguzhilingUpRank) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{9} }

func (m *CSShangguzhilingUpRank) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSShangguzhilingUpRank) GetAutoFlag() bool {
	if m != nil && m.AutoFlag != nil {
		return *m.AutoFlag
	}
	return false
}

type SCShangguzhilingUpRank struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Rank             *int32 `protobuf:"varint,2,req,name=rank" json:"rank,omitempty"`
	UprankBless      *int64 `protobuf:"varint,3,req,name=uprankBless" json:"uprankBless,omitempty"`
	UprankTimes      *int32 `protobuf:"varint,4,req,name=uprankTimes" json:"uprankTimes,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCShangguzhilingUpRank) Reset()                    { *m = SCShangguzhilingUpRank{} }
func (m *SCShangguzhilingUpRank) String() string            { return proto.CompactTextString(m) }
func (*SCShangguzhilingUpRank) ProtoMessage()               {}
func (*SCShangguzhilingUpRank) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{10} }

func (m *SCShangguzhilingUpRank) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *SCShangguzhilingUpRank) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *SCShangguzhilingUpRank) GetUprankBless() int64 {
	if m != nil && m.UprankBless != nil {
		return *m.UprankBless
	}
	return 0
}

func (m *SCShangguzhilingUpRank) GetUprankTimes() int32 {
	if m != nil && m.UprankTimes != nil {
		return *m.UprankTimes
	}
	return 0
}

type CSShangguzhilingLingLian struct {
	Type                    *int32  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	ChangeStatusSubTypeList []int32 `protobuf:"varint,2,rep,name=changeStatusSubTypeList" json:"changeStatusSubTypeList,omitempty"`
	AutoFlag                *bool   `protobuf:"varint,3,req,name=autoFlag" json:"autoFlag,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CSShangguzhilingLingLian) Reset()                    { *m = CSShangguzhilingLingLian{} }
func (m *CSShangguzhilingLingLian) String() string            { return proto.CompactTextString(m) }
func (*CSShangguzhilingLingLian) ProtoMessage()               {}
func (*CSShangguzhilingLingLian) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{11} }

func (m *CSShangguzhilingLingLian) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSShangguzhilingLingLian) GetChangeStatusSubTypeList() []int32 {
	if m != nil {
		return m.ChangeStatusSubTypeList
	}
	return nil
}

func (m *CSShangguzhilingLingLian) GetAutoFlag() bool {
	if m != nil && m.AutoFlag != nil {
		return *m.AutoFlag
	}
	return false
}

type SCShangguzhilingLingLian struct {
	Type             *int32          `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Linglian         []*LingLianInfo `protobuf:"bytes,2,rep,name=linglian" json:"linglian,omitempty"`
	LinglianTimes    *int32          `protobuf:"varint,3,req,name=linglianTimes" json:"linglianTimes,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SCShangguzhilingLingLian) Reset()                    { *m = SCShangguzhilingLingLian{} }
func (m *SCShangguzhilingLingLian) String() string            { return proto.CompactTextString(m) }
func (*SCShangguzhilingLingLian) ProtoMessage()               {}
func (*SCShangguzhilingLingLian) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{12} }

func (m *SCShangguzhilingLingLian) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *SCShangguzhilingLingLian) GetLinglian() []*LingLianInfo {
	if m != nil {
		return m.Linglian
	}
	return nil
}

func (m *SCShangguzhilingLingLian) GetLinglianTimes() int32 {
	if m != nil && m.LinglianTimes != nil {
		return *m.LinglianTimes
	}
	return 0
}

type CSShangguzhilingReceive struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSShangguzhilingReceive) Reset()                    { *m = CSShangguzhilingReceive{} }
func (m *CSShangguzhilingReceive) String() string            { return proto.CompactTextString(m) }
func (*CSShangguzhilingReceive) ProtoMessage()               {}
func (*CSShangguzhilingReceive) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{13} }

func (m *CSShangguzhilingReceive) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type SCShangguzhilingReceive struct {
	Type             *int32    `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	ReceiveTime      *int64    `protobuf:"varint,2,req,name=receiveTime" json:"receiveTime,omitempty"`
	DropInfo         *DropInfo `protobuf:"bytes,3,req,name=dropInfo" json:"dropInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *SCShangguzhilingReceive) Reset()                    { *m = SCShangguzhilingReceive{} }
func (m *SCShangguzhilingReceive) String() string            { return proto.CompactTextString(m) }
func (*SCShangguzhilingReceive) ProtoMessage()               {}
func (*SCShangguzhilingReceive) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{14} }

func (m *SCShangguzhilingReceive) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *SCShangguzhilingReceive) GetReceiveTime() int64 {
	if m != nil && m.ReceiveTime != nil {
		return *m.ReceiveTime
	}
	return 0
}

func (m *SCShangguzhilingReceive) GetDropInfo() *DropInfo {
	if m != nil {
		return m.DropInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*LingShouInfo)(nil), "ui.LingShouInfo")
	proto.RegisterType((*LingWenInfo)(nil), "ui.LingWenInfo")
	proto.RegisterType((*LingLianInfo)(nil), "ui.LingLianInfo")
	proto.RegisterType((*CSShangguzhilingInfo)(nil), "ui.CSShangguzhilingInfo")
	proto.RegisterType((*SCShangguzhilingInfo)(nil), "ui.SCShangguzhilingInfo")
	proto.RegisterType((*CSShangguzhilingUplevel)(nil), "ui.CSShangguzhilingUplevel")
	proto.RegisterType((*SCShangguzhilingUplevel)(nil), "ui.SCShangguzhilingUplevel")
	proto.RegisterType((*CSShangguzhilingLingWenUplevel)(nil), "ui.CSShangguzhilingLingWenUplevel")
	proto.RegisterType((*SCShangguzhilingLingWenUplevel)(nil), "ui.SCShangguzhilingLingWenUplevel")
	proto.RegisterType((*CSShangguzhilingUpRank)(nil), "ui.CSShangguzhilingUpRank")
	proto.RegisterType((*SCShangguzhilingUpRank)(nil), "ui.SCShangguzhilingUpRank")
	proto.RegisterType((*CSShangguzhilingLingLian)(nil), "ui.CSShangguzhilingLingLian")
	proto.RegisterType((*SCShangguzhilingLingLian)(nil), "ui.SCShangguzhilingLingLian")
	proto.RegisterType((*CSShangguzhilingReceive)(nil), "ui.CSShangguzhilingReceive")
	proto.RegisterType((*SCShangguzhilingReceive)(nil), "ui.SCShangguzhilingReceive")
}

func init() { proto.RegisterFile("shangguzhiling.proto", fileDescriptor94) }

var fileDescriptor94 = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xdf, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0x55, 0xa7, 0x5d, 0xc3, 0xa5, 0x63, 0x55, 0x29, 0xad, 0xc5, 0x43, 0x89, 0x2c, 0x04,
	0x7d, 0xaa, 0xc4, 0x9e, 0x10, 0x0f, 0x3c, 0x50, 0x84, 0x54, 0xa9, 0x48, 0x68, 0x19, 0xe2, 0x01,
	0x84, 0x64, 0x3a, 0x93, 0x5a, 0xcd, 0xe2, 0x28, 0x89, 0xc7, 0x8f, 0x3f, 0x99, 0xbf, 0x62, 0xf2,
	0xa5, 0x99, 0x5a, 0xdb, 0x9a, 0xf6, 0x68, 0xe7, 0xeb, 0xbb, 0xcf, 0x7d, 0xef, 0x2e, 0x30, 0xae,
	0xb6, 0x3c, 0x4f, 0x53, 0xfd, 0x6f, 0x2b, 0x33, 0x99, 0xa7, 0x8b, 0xa2, 0x54, 0xb5, 0x1a, 0x11,
	0x2d, 0x9f, 0xc1, 0x55, 0xa9, 0x8a, 0xe6, 0xcc, 0xfe, 0x77, 0x60, 0xb0, 0x96, 0x79, 0x9a, 0x6c,
	0x95, 0x5e, 0xe5, 0xbf, 0xd4, 0x68, 0x00, 0xdd, 0xfa, 0x6f, 0x21, 0x68, 0x27, 0x26, 0xf3, 0xde,
	0xe8, 0x14, 0x7a, 0x99, 0xb8, 0x11, 0x19, 0x25, 0x78, 0x8c, 0x20, 0x10, 0x7f, 0x0a, 0x1a, 0xc4,
	0x64, 0x1e, 0x18, 0x65, 0xc9, 0xf3, 0x1d, 0xed, 0xe2, 0xa7, 0x27, 0x10, 0xe9, 0xc2, 0x9c, 0xdf,
	0x67, 0xa2, 0xaa, 0x68, 0x0f, 0x25, 0x77, 0x97, 0x97, 0xf2, 0x5a, 0x54, 0xf4, 0x04, 0x95, 0x2f,
	0x20, 0x32, 0x40, 0xbf, 0x45, 0xbe, 0x96, 0x55, 0x4d, 0xfb, 0x71, 0x30, 0x8f, 0xce, 0xcf, 0x16,
	0x5a, 0x2e, 0x0c, 0xc8, 0x57, 0x91, 0x23, 0xc7, 0x4b, 0x18, 0x18, 0x55, 0x26, 0x79, 0x23, 0x0b,
	0x51, 0x36, 0x6c, 0x65, 0x6b, 0xc9, 0x1b, 0xdd, 0x53, 0x38, 0x6d, 0x75, 0x4d, 0x92, 0x47, 0x2d,
	0x4e, 0x29, 0x36, 0x42, 0xde, 0x08, 0x73, 0x4b, 0xc1, 0xe0, 0xb0, 0xb7, 0x10, 0x1d, 0xa6, 0x38,
	0x83, 0x7e, 0xa5, 0x7f, 0x5e, 0x3e, 0xa8, 0x5a, 0xf6, 0xba, 0xf1, 0xe9, 0x2e, 0xaf, 0xf3, 0x78,
	0x08, 0x61, 0xa1, 0x54, 0xf6, 0x89, 0x97, 0xbb, 0xe6, 0x3d, 0x9b, 0xc0, 0x78, 0x99, 0x24, 0x47,
	0x5d, 0x30, 0x4f, 0xd9, 0x3b, 0x18, 0x27, 0x4b, 0xf7, 0xbe, 0x2d, 0xb9, 0xda, 0x2a, 0x8d, 0x25,
	0x77, 0x8e, 0x4b, 0x6e, 0x5b, 0xc4, 0x56, 0x30, 0xb5, 0xe3, 0x7e, 0x29, 0x10, 0xdc, 0xea, 0xde,
	0x63, 0x38, 0x91, 0xb5, 0xb8, 0x5e, 0x5d, 0xed, 0x0b, 0x1a, 0x42, 0xc8, 0x75, 0xad, 0x3e, 0x66,
	0x3c, 0xc5, 0xaa, 0x42, 0xb6, 0x84, 0xa9, 0x8d, 0xe2, 0x0f, 0x75, 0x9f, 0x35, 0x1c, 0x66, 0x36,
	0xcf, 0xde, 0x66, 0x7f, 0xac, 0x03, 0xeb, 0x88, 0xc5, 0x19, 0x38, 0x9c, 0x5d, 0xe4, 0xfc, 0x0c,
	0x33, 0x9b, 0xf3, 0xde, 0x14, 0x31, 0xf4, 0xf7, 0x33, 0x86, 0x29, 0xdc, 0xf9, 0x62, 0x6f, 0x60,
	0xe2, 0x9a, 0x78, 0xc1, 0xf3, 0x9d, 0x15, 0xe9, 0x90, 0x85, 0x20, 0xcb, 0x0f, 0x98, 0xb8, 0x9e,
	0x79, 0x5e, 0xb6, 0xfb, 0x41, 0x7c, 0xfb, 0x11, 0xf8, 0xf6, 0x03, 0x37, 0x89, 0x7d, 0x03, 0xea,
	0xb3, 0xd3, 0x4c, 0x9e, 0x95, 0xe1, 0x39, 0x4c, 0x37, 0x46, 0x27, 0x92, 0x9a, 0xd7, 0xba, 0x4a,
	0x1a, 0x53, 0x71, 0x76, 0x48, 0x1c, 0x78, 0x1b, 0xbe, 0x01, 0xea, 0x33, 0xd2, 0x13, 0x9c, 0x41,
	0xd8, 0x2e, 0x16, 0x46, 0x7b, 0xd0, 0xf2, 0x61, 0xff, 0xd8, 0x2b, 0x77, 0x40, 0x2f, 0x9a, 0x65,
	0x3c, 0xce, 0xc1, 0xbe, 0xbb, 0xe3, 0xe7, 0x15, 0xda, 0xeb, 0x4c, 0xd0, 0xbd, 0x19, 0x84, 0xe6,
	0x4f, 0x66, 0x48, 0x30, 0x71, 0x74, 0x3e, 0x30, 0x84, 0x1f, 0xf6, 0x77, 0xb7, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x1a, 0x79, 0x35, 0xfc, 0x02, 0x05, 0x00, 0x00,
}
