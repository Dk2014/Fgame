// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pk.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CSPkStateSwitch struct {
	PkState          *int32 `protobuf:"varint,1,req,name=pkState" json:"pkState,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSPkStateSwitch) Reset()                    { *m = CSPkStateSwitch{} }
func (m *CSPkStateSwitch) String() string            { return proto.CompactTextString(m) }
func (*CSPkStateSwitch) ProtoMessage()               {}
func (*CSPkStateSwitch) Descriptor() ([]byte, []int) { return fileDescriptor80, []int{0} }

func (m *CSPkStateSwitch) GetPkState() int32 {
	if m != nil && m.PkState != nil {
		return *m.PkState
	}
	return 0
}

type SCPkStateSwitch struct {
	PkState          *int32 `protobuf:"varint,1,req,name=pkState" json:"pkState,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPkStateSwitch) Reset()                    { *m = SCPkStateSwitch{} }
func (m *SCPkStateSwitch) String() string            { return proto.CompactTextString(m) }
func (*SCPkStateSwitch) ProtoMessage()               {}
func (*SCPkStateSwitch) Descriptor() ([]byte, []int) { return fileDescriptor80, []int{1} }

func (m *SCPkStateSwitch) GetPkState() int32 {
	if m != nil && m.PkState != nil {
		return *m.PkState
	}
	return 0
}

type SCPKValueChanged struct {
	PkValue          *int32 `protobuf:"varint,1,opt,name=pkValue,def=-1" json:"pkValue,omitempty"`
	OnlineTime       *int64 `protobuf:"varint,2,opt,name=onlineTime,def=-1" json:"onlineTime,omitempty"`
	LoginTime        *int64 `protobuf:"varint,3,opt,name=loginTime,def=-1" json:"loginTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPKValueChanged) Reset()                    { *m = SCPKValueChanged{} }
func (m *SCPKValueChanged) String() string            { return proto.CompactTextString(m) }
func (*SCPKValueChanged) ProtoMessage()               {}
func (*SCPKValueChanged) Descriptor() ([]byte, []int) { return fileDescriptor80, []int{2} }

const Default_SCPKValueChanged_PkValue int32 = -1
const Default_SCPKValueChanged_OnlineTime int64 = -1
const Default_SCPKValueChanged_LoginTime int64 = -1

func (m *SCPKValueChanged) GetPkValue() int32 {
	if m != nil && m.PkValue != nil {
		return *m.PkValue
	}
	return Default_SCPKValueChanged_PkValue
}

func (m *SCPKValueChanged) GetOnlineTime() int64 {
	if m != nil && m.OnlineTime != nil {
		return *m.OnlineTime
	}
	return Default_SCPKValueChanged_OnlineTime
}

func (m *SCPKValueChanged) GetLoginTime() int64 {
	if m != nil && m.LoginTime != nil {
		return *m.LoginTime
	}
	return Default_SCPKValueChanged_LoginTime
}

func init() {
	proto.RegisterType((*CSPkStateSwitch)(nil), "ui.CSPkStateSwitch")
	proto.RegisterType((*SCPkStateSwitch)(nil), "ui.SCPkStateSwitch")
	proto.RegisterType((*SCPKValueChanged)(nil), "ui.SCPKValueChanged")
}

func init() { proto.RegisterFile("pk.proto", fileDescriptor80) }

var fileDescriptor80 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0xc8, 0xd6, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0xcd, 0x54, 0x52, 0xe2, 0xe2, 0x77, 0x0e, 0x0e, 0xc8,
	0x0e, 0x2e, 0x49, 0x2c, 0x49, 0x0d, 0x2e, 0xcf, 0x2c, 0x49, 0xce, 0x10, 0xe2, 0xe7, 0x62, 0x2f,
	0x80, 0x08, 0x48, 0x30, 0x2a, 0x30, 0x69, 0xb0, 0x82, 0xd4, 0x04, 0x3b, 0x13, 0x50, 0x13, 0xc6,
	0x25, 0x10, 0xec, 0x1c, 0xe0, 0x1d, 0x96, 0x98, 0x53, 0x9a, 0xea, 0x9c, 0x91, 0x98, 0x97, 0x9e,
	0x9a, 0x22, 0x24, 0x0c, 0x52, 0x04, 0x16, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0xb5, 0x62, 0xd2,
	0x35, 0x14, 0x12, 0xe3, 0xe2, 0xca, 0xcf, 0xcb, 0xc9, 0xcc, 0x4b, 0x0d, 0xc9, 0xcc, 0x4d, 0x95,
	0x60, 0x52, 0x60, 0xd4, 0x60, 0x06, 0x8b, 0x8b, 0x72, 0x71, 0xe6, 0xe4, 0xa7, 0x67, 0xe6, 0x81,
	0x85, 0x99, 0x61, 0xc2, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x1c, 0xfa, 0x64, 0xae, 0x00,
	0x00, 0x00,
}
