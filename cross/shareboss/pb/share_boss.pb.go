// Code generated by protoc-gen-go. DO NOT EDIT.
// source: share_boss.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	share_boss.proto

It has these top-level messages:
	Position
	BossInfo
	ShareBossInfoListRequest
	ShareBossInfoListResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Position struct {
	X float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
}

func (m *Position) Reset()                    { *m = Position{} }
func (m *Position) String() string            { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()               {}
func (*Position) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Position) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Position) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Position) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

type BossInfo struct {
	BiologyId int32     `protobuf:"varint,1,opt,name=biologyId" json:"biologyId,omitempty"`
	IsDead    bool      `protobuf:"varint,2,opt,name=isDead" json:"isDead,omitempty"`
	DeadTime  int64     `protobuf:"varint,3,opt,name=deadTime" json:"deadTime,omitempty"`
	Pos       *Position `protobuf:"bytes,4,opt,name=pos" json:"pos,omitempty"`
}

func (m *BossInfo) Reset()                    { *m = BossInfo{} }
func (m *BossInfo) String() string            { return proto.CompactTextString(m) }
func (*BossInfo) ProtoMessage()               {}
func (*BossInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BossInfo) GetBiologyId() int32 {
	if m != nil {
		return m.BiologyId
	}
	return 0
}

func (m *BossInfo) GetIsDead() bool {
	if m != nil {
		return m.IsDead
	}
	return false
}

func (m *BossInfo) GetDeadTime() int64 {
	if m != nil {
		return m.DeadTime
	}
	return 0
}

func (m *BossInfo) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

// 获取跨服boss列表
type ShareBossInfoListRequest struct {
	BossType int32 `protobuf:"varint,1,opt,name=bossType" json:"bossType,omitempty"`
}

func (m *ShareBossInfoListRequest) Reset()                    { *m = ShareBossInfoListRequest{} }
func (m *ShareBossInfoListRequest) String() string            { return proto.CompactTextString(m) }
func (*ShareBossInfoListRequest) ProtoMessage()               {}
func (*ShareBossInfoListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ShareBossInfoListRequest) GetBossType() int32 {
	if m != nil {
		return m.BossType
	}
	return 0
}

// 跨服boss列表回复
type ShareBossInfoListResponse struct {
	BossType     int32       `protobuf:"varint,1,opt,name=bossType" json:"bossType,omitempty"`
	BossInfoList []*BossInfo `protobuf:"bytes,2,rep,name=bossInfoList" json:"bossInfoList,omitempty"`
}

func (m *ShareBossInfoListResponse) Reset()                    { *m = ShareBossInfoListResponse{} }
func (m *ShareBossInfoListResponse) String() string            { return proto.CompactTextString(m) }
func (*ShareBossInfoListResponse) ProtoMessage()               {}
func (*ShareBossInfoListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ShareBossInfoListResponse) GetBossType() int32 {
	if m != nil {
		return m.BossType
	}
	return 0
}

func (m *ShareBossInfoListResponse) GetBossInfoList() []*BossInfo {
	if m != nil {
		return m.BossInfoList
	}
	return nil
}

func init() {
	proto.RegisterType((*Position)(nil), "pb.Position")
	proto.RegisterType((*BossInfo)(nil), "pb.BossInfo")
	proto.RegisterType((*ShareBossInfoListRequest)(nil), "pb.ShareBossInfoListRequest")
	proto.RegisterType((*ShareBossInfoListResponse)(nil), "pb.ShareBossInfoListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ShareBoss service

type ShareBossClient interface {
	// 获取
	GetAllShareBossList(ctx context.Context, in *ShareBossInfoListRequest, opts ...grpc.CallOption) (*ShareBossInfoListResponse, error)
}

type shareBossClient struct {
	cc *grpc.ClientConn
}

func NewShareBossClient(cc *grpc.ClientConn) ShareBossClient {
	return &shareBossClient{cc}
}

func (c *shareBossClient) GetAllShareBossList(ctx context.Context, in *ShareBossInfoListRequest, opts ...grpc.CallOption) (*ShareBossInfoListResponse, error) {
	out := new(ShareBossInfoListResponse)
	err := grpc.Invoke(ctx, "/pb.ShareBoss/GetAllShareBossList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ShareBoss service

type ShareBossServer interface {
	// 获取
	GetAllShareBossList(context.Context, *ShareBossInfoListRequest) (*ShareBossInfoListResponse, error)
}

func RegisterShareBossServer(s *grpc.Server, srv ShareBossServer) {
	s.RegisterService(&_ShareBoss_serviceDesc, srv)
}

func _ShareBoss_GetAllShareBossList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareBossInfoListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShareBossServer).GetAllShareBossList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShareBoss/GetAllShareBossList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShareBossServer).GetAllShareBossList(ctx, req.(*ShareBossInfoListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShareBoss_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ShareBoss",
	HandlerType: (*ShareBossServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllShareBossList",
			Handler:    _ShareBoss_GetAllShareBossList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "share_boss.proto",
}

func init() { proto.RegisterFile("share_boss.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x6d, 0xab, 0xa3, 0x7b, 0xf6, 0x20, 0x11, 0x24, 0x8e, 0x29, 0x25, 0xa7, 0x9d, 0x8a,
	0x4c, 0xf1, 0xae, 0x08, 0x32, 0xf0, 0x20, 0xb1, 0x77, 0x69, 0x68, 0xd4, 0x40, 0xed, 0x8b, 0x7b,
	0x11, 0xd6, 0xe1, 0x1f, 0x2f, 0x69, 0xd7, 0xaa, 0xe0, 0x76, 0xfc, 0xbd, 0xf7, 0xbe, 0x2f, 0xdf,
	0x47, 0xe0, 0x88, 0xde, 0x8a, 0xa5, 0x7e, 0x56, 0x48, 0x94, 0xd9, 0x25, 0x3a, 0x64, 0xa1, 0x55,
	0xe2, 0x0a, 0xe2, 0x47, 0x24, 0xe3, 0x0c, 0xd6, 0x2c, 0x81, 0x60, 0xc5, 0x83, 0x34, 0x98, 0x85,
	0x32, 0x58, 0x79, 0x6a, 0x78, 0xd8, 0x51, 0xe3, 0x69, 0xcd, 0xa3, 0x8e, 0xd6, 0xe2, 0x0b, 0xe2,
	0x5b, 0x24, 0x5a, 0xd4, 0x2f, 0xc8, 0xa6, 0x30, 0x56, 0x06, 0x2b, 0x7c, 0x6d, 0x16, 0x65, 0xab,
	0x3e, 0x90, 0x3f, 0x03, 0x76, 0x02, 0x23, 0x43, 0x77, 0xba, 0x28, 0x5b, 0xab, 0x58, 0x6e, 0x88,
	0x4d, 0x20, 0x2e, 0x75, 0x51, 0xe6, 0xe6, 0x5d, 0xb7, 0xb6, 0x91, 0x1c, 0x98, 0x9d, 0x43, 0x64,
	0x91, 0xf8, 0x7e, 0x1a, 0xcc, 0x0e, 0xe7, 0x49, 0x66, 0x55, 0xd6, 0x47, 0x94, 0x7e, 0x21, 0xae,
	0x81, 0x3f, 0xf9, 0x2e, 0x7d, 0x84, 0x07, 0x43, 0x4e, 0xea, 0x8f, 0x4f, 0x4d, 0xce, 0xfb, 0xfa,
	0x86, 0x79, 0x63, 0xf5, 0x26, 0xcc, 0xc0, 0xc2, 0xc0, 0xe9, 0x3f, 0x3a, 0xb2, 0x58, 0x93, 0xde,
	0x25, 0x64, 0x17, 0x90, 0xa8, 0x5f, 0x1a, 0x1e, 0xa6, 0x51, 0x9f, 0xac, 0xf7, 0x92, 0x7f, 0x2e,
	0xe6, 0x05, 0x8c, 0x87, 0xa7, 0x58, 0x0e, 0xc7, 0xf7, 0xda, 0xdd, 0x54, 0xd5, 0x30, 0xf2, 0x37,
	0x6c, 0xea, 0xf5, 0xdb, 0x8a, 0x4c, 0xce, 0xb6, 0x6c, 0xbb, 0xb8, 0x62, 0x4f, 0x8d, 0xda, 0x4f,
	0xbc, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x8f, 0xd8, 0x49, 0x4f, 0xd8, 0x01, 0x00, 0x00,
}
