// Code generated by protoc-gen-go. DO NOT EDIT.
// source: login_manage.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 自己账户登陆请求
type SelfLoginRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *SelfLoginRequest) Reset()                    { *m = SelfLoginRequest{} }
func (m *SelfLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*SelfLoginRequest) ProtoMessage()               {}
func (*SelfLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *SelfLoginRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SelfLoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// 自己账户登陆返回
type SelfLoginResponse struct {
	Platform       int32  `protobuf:"varint,1,opt,name=platform" json:"platform,omitempty"`
	PlatformUserId string `protobuf:"bytes,2,opt,name=platformUserId" json:"platformUserId,omitempty"`
}

func (m *SelfLoginResponse) Reset()                    { *m = SelfLoginResponse{} }
func (m *SelfLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*SelfLoginResponse) ProtoMessage()               {}
func (*SelfLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *SelfLoginResponse) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *SelfLoginResponse) GetPlatformUserId() string {
	if m != nil {
		return m.PlatformUserId
	}
	return ""
}

// 登陆请求
type LoginRequest struct {
	Platform       int32  `protobuf:"varint,1,opt,name=platform" json:"platform,omitempty"`
	DevicePlatform int32  `protobuf:"varint,2,opt,name=devicePlatform" json:"devicePlatform,omitempty"`
	UserId         string `protobuf:"bytes,3,opt,name=userId" json:"userId,omitempty"`
	Ip             string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *LoginRequest) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *LoginRequest) GetDevicePlatform() int32 {
	if m != nil {
		return m.DevicePlatform
	}
	return 0
}

func (m *LoginRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LoginRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

// 登陆回复
type LoginResponse struct {
	UserId      int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Token       string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	ExpiredTime int64  `protobuf:"varint,3,opt,name=expiredTime" json:"expiredTime,omitempty"`
	Gm          int32  `protobuf:"varint,4,opt,name=gm" json:"gm,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *LoginResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetExpiredTime() int64 {
	if m != nil {
		return m.ExpiredTime
	}
	return 0
}

func (m *LoginResponse) GetGm() int32 {
	if m != nil {
		return m.Gm
	}
	return 0
}

type LoginVerifyRequest struct {
	Token          string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	ServerId       int32  `protobuf:"varint,2,opt,name=serverId" json:"serverId,omitempty"`
	OriginServerId int32  `protobuf:"varint,3,opt,name=originServerId" json:"originServerId,omitempty"`
}

func (m *LoginVerifyRequest) Reset()                    { *m = LoginVerifyRequest{} }
func (m *LoginVerifyRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginVerifyRequest) ProtoMessage()               {}
func (*LoginVerifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *LoginVerifyRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginVerifyRequest) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *LoginVerifyRequest) GetOriginServerId() int32 {
	if m != nil {
		return m.OriginServerId
	}
	return 0
}

type LoginVerifyResponse struct {
	SdkType            int32  `protobuf:"varint,1,opt,name=sdkType" json:"sdkType,omitempty"`
	DevicePlatformType int32  `protobuf:"varint,2,opt,name=devicePlatformType" json:"devicePlatformType,omitempty"`
	UserId             int64  `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	PlatformUserId     string `protobuf:"bytes,4,opt,name=platformUserId" json:"platformUserId,omitempty"`
	Gm                 int32  `protobuf:"varint,5,opt,name=gm" json:"gm,omitempty"`
	IosVersion         string `protobuf:"bytes,6,opt,name=iosVersion" json:"iosVersion,omitempty"`
	AndroidVersion     string `protobuf:"bytes,7,opt,name=androidVersion" json:"androidVersion,omitempty"`
}

func (m *LoginVerifyResponse) Reset()                    { *m = LoginVerifyResponse{} }
func (m *LoginVerifyResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginVerifyResponse) ProtoMessage()               {}
func (*LoginVerifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *LoginVerifyResponse) GetSdkType() int32 {
	if m != nil {
		return m.SdkType
	}
	return 0
}

func (m *LoginVerifyResponse) GetDevicePlatformType() int32 {
	if m != nil {
		return m.DevicePlatformType
	}
	return 0
}

func (m *LoginVerifyResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *LoginVerifyResponse) GetPlatformUserId() string {
	if m != nil {
		return m.PlatformUserId
	}
	return ""
}

func (m *LoginVerifyResponse) GetGm() int32 {
	if m != nil {
		return m.Gm
	}
	return 0
}

func (m *LoginVerifyResponse) GetIosVersion() string {
	if m != nil {
		return m.IosVersion
	}
	return ""
}

func (m *LoginVerifyResponse) GetAndroidVersion() string {
	if m != nil {
		return m.AndroidVersion
	}
	return ""
}

// 内挂登陆
type GMLoginRequest struct {
	SdkType  int32  `protobuf:"varint,1,opt,name=sdkType" json:"sdkType,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
}

func (m *GMLoginRequest) Reset()                    { *m = GMLoginRequest{} }
func (m *GMLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*GMLoginRequest) ProtoMessage()               {}
func (*GMLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *GMLoginRequest) GetSdkType() int32 {
	if m != nil {
		return m.SdkType
	}
	return 0
}

func (m *GMLoginRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GMLoginRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GMLoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// 登陆回复
type GMLoginResponse struct {
	UserId      int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Token       string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	ExpiredTime int64  `protobuf:"varint,3,opt,name=expiredTime" json:"expiredTime,omitempty"`
}

func (m *GMLoginResponse) Reset()                    { *m = GMLoginResponse{} }
func (m *GMLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*GMLoginResponse) ProtoMessage()               {}
func (*GMLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *GMLoginResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GMLoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GMLoginResponse) GetExpiredTime() int64 {
	if m != nil {
		return m.ExpiredTime
	}
	return 0
}

func init() {
	proto.RegisterType((*SelfLoginRequest)(nil), "pb.SelfLoginRequest")
	proto.RegisterType((*SelfLoginResponse)(nil), "pb.SelfLoginResponse")
	proto.RegisterType((*LoginRequest)(nil), "pb.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "pb.LoginResponse")
	proto.RegisterType((*LoginVerifyRequest)(nil), "pb.LoginVerifyRequest")
	proto.RegisterType((*LoginVerifyResponse)(nil), "pb.LoginVerifyResponse")
	proto.RegisterType((*GMLoginRequest)(nil), "pb.GMLoginRequest")
	proto.RegisterType((*GMLoginResponse)(nil), "pb.GMLoginResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LoginManage service

type LoginManageClient interface {
	// 自己账户登陆
	SelfLogin(ctx context.Context, in *SelfLoginRequest, opts ...grpc.CallOption) (*SelfLoginResponse, error)
	// 登陆
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// 登陆验证
	LoginVerify(ctx context.Context, in *LoginVerifyRequest, opts ...grpc.CallOption) (*LoginVerifyResponse, error)
	// GM
	GMLogin(ctx context.Context, in *GMLoginRequest, opts ...grpc.CallOption) (*GMLoginResponse, error)
}

type loginManageClient struct {
	cc *grpc.ClientConn
}

func NewLoginManageClient(cc *grpc.ClientConn) LoginManageClient {
	return &loginManageClient{cc}
}

func (c *loginManageClient) SelfLogin(ctx context.Context, in *SelfLoginRequest, opts ...grpc.CallOption) (*SelfLoginResponse, error) {
	out := new(SelfLoginResponse)
	err := grpc.Invoke(ctx, "/pb.LoginManage/SelfLogin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loginManageClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/pb.LoginManage/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loginManageClient) LoginVerify(ctx context.Context, in *LoginVerifyRequest, opts ...grpc.CallOption) (*LoginVerifyResponse, error) {
	out := new(LoginVerifyResponse)
	err := grpc.Invoke(ctx, "/pb.LoginManage/LoginVerify", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loginManageClient) GMLogin(ctx context.Context, in *GMLoginRequest, opts ...grpc.CallOption) (*GMLoginResponse, error) {
	out := new(GMLoginResponse)
	err := grpc.Invoke(ctx, "/pb.LoginManage/GMLogin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LoginManage service

type LoginManageServer interface {
	// 自己账户登陆
	SelfLogin(context.Context, *SelfLoginRequest) (*SelfLoginResponse, error)
	// 登陆
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	// 登陆验证
	LoginVerify(context.Context, *LoginVerifyRequest) (*LoginVerifyResponse, error)
	// GM
	GMLogin(context.Context, *GMLoginRequest) (*GMLoginResponse, error)
}

func RegisterLoginManageServer(s *grpc.Server, srv LoginManageServer) {
	s.RegisterService(&_LoginManage_serviceDesc, srv)
}

func _LoginManage_SelfLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelfLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginManageServer).SelfLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LoginManage/SelfLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginManageServer).SelfLogin(ctx, req.(*SelfLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoginManage_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginManageServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LoginManage/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginManageServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoginManage_LoginVerify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginVerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginManageServer).LoginVerify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LoginManage/LoginVerify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginManageServer).LoginVerify(ctx, req.(*LoginVerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoginManage_GMLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GMLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginManageServer).GMLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LoginManage/GMLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginManageServer).GMLogin(ctx, req.(*GMLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoginManage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.LoginManage",
	HandlerType: (*LoginManageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SelfLogin",
			Handler:    _LoginManage_SelfLogin_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _LoginManage_Login_Handler,
		},
		{
			MethodName: "LoginVerify",
			Handler:    _LoginManage_LoginVerify_Handler,
		},
		{
			MethodName: "GMLogin",
			Handler:    _LoginManage_GMLogin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "login_manage.proto",
}

func init() { proto.RegisterFile("login_manage.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 474 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x31, 0x6f, 0xd4, 0x30,
	0x14, 0x26, 0xc9, 0xe5, 0xae, 0x7d, 0x85, 0xa3, 0x7d, 0x2d, 0x25, 0xca, 0x80, 0x2a, 0x0f, 0x88,
	0x29, 0x03, 0x30, 0x31, 0x21, 0x16, 0x84, 0x44, 0x25, 0x94, 0x96, 0x32, 0xa2, 0x1c, 0xf1, 0x45,
	0x56, 0x2f, 0xb6, 0xb1, 0xd3, 0x42, 0xf9, 0xd7, 0x4c, 0xac, 0x28, 0x76, 0xec, 0x8b, 0xd3, 0x56,
	0x4c, 0x6c, 0x79, 0x5f, 0xbe, 0xf7, 0x7d, 0x79, 0x9f, 0xfd, 0x02, 0xb8, 0x11, 0x0d, 0xe3, 0x5f,
	0xdb, 0x8a, 0x57, 0x0d, 0x2d, 0xa4, 0x12, 0x9d, 0xc0, 0x58, 0xae, 0xc8, 0x3b, 0xd8, 0x3f, 0xa3,
	0x9b, 0xf5, 0xc7, 0xfe, 0x6d, 0x49, 0xbf, 0x5f, 0x51, 0xdd, 0x21, 0xc2, 0x8c, 0x57, 0x2d, 0xcd,
	0xa2, 0x93, 0xe8, 0xc5, 0x6e, 0x69, 0x9e, 0x31, 0x87, 0x1d, 0x59, 0x69, 0xfd, 0x43, 0xa8, 0x3a,
	0x8b, 0x0d, 0xee, 0x6b, 0xf2, 0x05, 0x0e, 0x46, 0x1a, 0x5a, 0x0a, 0xae, 0x6d, 0xc3, 0xa6, 0xea,
	0xd6, 0x42, 0xb5, 0x46, 0x28, 0x2d, 0x7d, 0x8d, 0xcf, 0x61, 0xe9, 0x9e, 0x3f, 0x6b, 0xaa, 0x3e,
	0x38, 0xc9, 0x09, 0x4a, 0x7e, 0xc1, 0xc3, 0xe0, 0xc3, 0xfe, 0xa1, 0x59, 0xd3, 0x6b, 0xf6, 0x8d,
	0x7e, 0x72, 0x8c, 0xd8, 0x30, 0x26, 0x28, 0x1e, 0xc3, 0xfc, 0xca, 0x7a, 0x26, 0xc6, 0x73, 0xa8,
	0x70, 0x09, 0x31, 0x93, 0xd9, 0xcc, 0x60, 0x31, 0x93, 0x44, 0xc0, 0xa3, 0x70, 0xa0, 0x6d, 0x63,
	0x6f, 0x9d, 0xf8, 0xc6, 0x23, 0x48, 0x3b, 0x71, 0x49, 0xf9, 0x30, 0x83, 0x2d, 0xf0, 0x04, 0xf6,
	0xe8, 0x4f, 0xc9, 0x14, 0xad, 0xcf, 0x59, 0x4b, 0x8d, 0x57, 0x52, 0x8e, 0xa1, 0xde, 0xb0, 0x69,
	0x8d, 0x61, 0x5a, 0xc6, 0x4d, 0x4b, 0x38, 0xa0, 0x31, 0xbc, 0xa0, 0x8a, 0xad, 0x6f, 0xdc, 0xc8,
	0x5e, 0x3d, 0x1a, 0xab, 0xe7, 0xb0, 0xa3, 0xa9, 0xba, 0xf6, 0xd1, 0xa5, 0xa5, 0xaf, 0xfb, 0x20,
	0x84, 0x62, 0x0d, 0xe3, 0x67, 0x8e, 0x91, 0xd8, 0x20, 0x42, 0x94, 0xfc, 0x89, 0xe0, 0x30, 0x30,
	0x1c, 0xe6, 0xcc, 0x60, 0xa1, 0xeb, 0xcb, 0xf3, 0x1b, 0x49, 0x87, 0x8c, 0x5d, 0x89, 0x05, 0x60,
	0x18, 0xa6, 0x21, 0x59, 0xff, 0x3b, 0xde, 0x4c, 0xa2, 0xde, 0x26, 0x76, 0xfb, 0xf8, 0x67, 0x77,
	0x1d, 0xff, 0x90, 0x50, 0xea, 0x12, 0xc2, 0x67, 0x00, 0x4c, 0xe8, 0x0b, 0xaa, 0x34, 0x13, 0x3c,
	0x9b, 0x9b, 0x9e, 0x11, 0xd2, 0xeb, 0x56, 0xbc, 0x56, 0x82, 0xd5, 0x8e, 0xb3, 0xb0, 0xba, 0x21,
	0x4a, 0x14, 0x2c, 0xdf, 0x9f, 0x06, 0x17, 0xeb, 0xfe, 0x99, 0xb7, 0x33, 0xc4, 0xc1, 0x75, 0x71,
	0x3b, 0x92, 0xdc, 0xb3, 0x23, 0xb3, 0xc9, 0x8e, 0x54, 0xf0, 0xd8, 0x7b, 0xfe, 0x9f, 0x0b, 0xf5,
	0xf2, 0x77, 0x04, 0x7b, 0xc6, 0xe1, 0xd4, 0x2c, 0x39, 0xbe, 0x81, 0x5d, 0xbf, 0x96, 0x78, 0x54,
	0xc8, 0x55, 0x31, 0xdd, 0xf4, 0xfc, 0xc9, 0x04, 0xb5, 0x5f, 0x46, 0x1e, 0x60, 0x01, 0xa9, 0xed,
	0xdb, 0xef, 0x19, 0x41, 0xcf, 0xc1, 0x08, 0xf1, 0xfc, 0xb7, 0x83, 0xb5, 0xbd, 0x4b, 0x78, 0xec,
	0x39, 0xc1, 0x6d, 0xce, 0x9f, 0xde, 0xc2, 0xbd, 0xc2, 0x6b, 0x58, 0x0c, 0x01, 0x21, 0xf6, 0xac,
	0xf0, 0x84, 0xf2, 0xc3, 0x00, 0x73, 0x5d, 0xab, 0xb9, 0xf9, 0x93, 0xbd, 0xfa, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0x02, 0xd5, 0xe1, 0x23, 0xdf, 0x04, 0x00, 0x00,
}
