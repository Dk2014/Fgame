// Code generated by protoc-gen-go. DO NOT EDIT.
// source: major.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CSMajorInvite struct {
	MajorType        *int32 `protobuf:"varint,1,opt,name=majorType" json:"majorType,omitempty"`
	FubenId          *int32 `protobuf:"varint,2,req,name=fubenId" json:"fubenId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSMajorInvite) Reset()                    { *m = CSMajorInvite{} }
func (m *CSMajorInvite) String() string            { return proto.CompactTextString(m) }
func (*CSMajorInvite) ProtoMessage()               {}
func (*CSMajorInvite) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{0} }

func (m *CSMajorInvite) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *CSMajorInvite) GetFubenId() int32 {
	if m != nil && m.FubenId != nil {
		return *m.FubenId
	}
	return 0
}

type SCMajorInvite struct {
	InviteTime       *int64 `protobuf:"varint,1,req,name=inviteTime" json:"inviteTime,omitempty"`
	MajorType        *int32 `protobuf:"varint,2,req,name=majorType" json:"majorType,omitempty"`
	FubenId          *int32 `protobuf:"varint,3,req,name=fubenId" json:"fubenId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCMajorInvite) Reset()                    { *m = SCMajorInvite{} }
func (m *SCMajorInvite) String() string            { return proto.CompactTextString(m) }
func (*SCMajorInvite) ProtoMessage()               {}
func (*SCMajorInvite) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{1} }

func (m *SCMajorInvite) GetInviteTime() int64 {
	if m != nil && m.InviteTime != nil {
		return *m.InviteTime
	}
	return 0
}

func (m *SCMajorInvite) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *SCMajorInvite) GetFubenId() int32 {
	if m != nil && m.FubenId != nil {
		return *m.FubenId
	}
	return 0
}

type CSMajorInviteCancle struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSMajorInviteCancle) Reset()                    { *m = CSMajorInviteCancle{} }
func (m *CSMajorInviteCancle) String() string            { return proto.CompactTextString(m) }
func (*CSMajorInviteCancle) ProtoMessage()               {}
func (*CSMajorInviteCancle) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{2} }

type SCMajorInviteCancle struct {
	Result           *int32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCMajorInviteCancle) Reset()                    { *m = SCMajorInviteCancle{} }
func (m *SCMajorInviteCancle) String() string            { return proto.CompactTextString(m) }
func (*SCMajorInviteCancle) ProtoMessage()               {}
func (*SCMajorInviteCancle) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{3} }

func (m *SCMajorInviteCancle) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type SCMajorInvitePushSpouse struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	MajorType        *int32 `protobuf:"varint,2,req,name=majorType" json:"majorType,omitempty"`
	FubenId          *int32 `protobuf:"varint,3,req,name=fubenId" json:"fubenId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCMajorInvitePushSpouse) Reset()                    { *m = SCMajorInvitePushSpouse{} }
func (m *SCMajorInvitePushSpouse) String() string            { return proto.CompactTextString(m) }
func (*SCMajorInvitePushSpouse) ProtoMessage()               {}
func (*SCMajorInvitePushSpouse) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{4} }

func (m *SCMajorInvitePushSpouse) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *SCMajorInvitePushSpouse) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *SCMajorInvitePushSpouse) GetFubenId() int32 {
	if m != nil && m.FubenId != nil {
		return *m.FubenId
	}
	return 0
}

type SCMajorInvitePushCancle struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	MajorType        *int32  `protobuf:"varint,2,req,name=majorType" json:"majorType,omitempty"`
	FubenId          *int32  `protobuf:"varint,3,req,name=fubenId" json:"fubenId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCMajorInvitePushCancle) Reset()                    { *m = SCMajorInvitePushCancle{} }
func (m *SCMajorInvitePushCancle) String() string            { return proto.CompactTextString(m) }
func (*SCMajorInvitePushCancle) ProtoMessage()               {}
func (*SCMajorInvitePushCancle) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{5} }

func (m *SCMajorInvitePushCancle) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SCMajorInvitePushCancle) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *SCMajorInvitePushCancle) GetFubenId() int32 {
	if m != nil && m.FubenId != nil {
		return *m.FubenId
	}
	return 0
}

type CSMajorInviteDeal struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSMajorInviteDeal) Reset()                    { *m = CSMajorInviteDeal{} }
func (m *CSMajorInviteDeal) String() string            { return proto.CompactTextString(m) }
func (*CSMajorInviteDeal) ProtoMessage()               {}
func (*CSMajorInviteDeal) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{6} }

func (m *CSMajorInviteDeal) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type SCMajorInviteDeal struct {
	Result           *int32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCMajorInviteDeal) Reset()                    { *m = SCMajorInviteDeal{} }
func (m *SCMajorInviteDeal) String() string            { return proto.CompactTextString(m) }
func (*SCMajorInviteDeal) ProtoMessage()               {}
func (*SCMajorInviteDeal) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{7} }

func (m *SCMajorInviteDeal) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type SCMajorSpouseRefused struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	MajorType        *int32  `protobuf:"varint,2,req,name=majorType" json:"majorType,omitempty"`
	FubenId          *int32  `protobuf:"varint,3,req,name=fubenId" json:"fubenId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCMajorSpouseRefused) Reset()                    { *m = SCMajorSpouseRefused{} }
func (m *SCMajorSpouseRefused) String() string            { return proto.CompactTextString(m) }
func (*SCMajorSpouseRefused) ProtoMessage()               {}
func (*SCMajorSpouseRefused) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{8} }

func (m *SCMajorSpouseRefused) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SCMajorSpouseRefused) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *SCMajorSpouseRefused) GetFubenId() int32 {
	if m != nil && m.FubenId != nil {
		return *m.FubenId
	}
	return 0
}

type SCMajorResult struct {
	Sucess           *bool  `protobuf:"varint,1,req,name=sucess" json:"sucess,omitempty"`
	MajorType        *int32 `protobuf:"varint,2,req,name=majorType" json:"majorType,omitempty"`
	FubenId          *int32 `protobuf:"varint,3,req,name=fubenId" json:"fubenId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCMajorResult) Reset()                    { *m = SCMajorResult{} }
func (m *SCMajorResult) String() string            { return proto.CompactTextString(m) }
func (*SCMajorResult) ProtoMessage()               {}
func (*SCMajorResult) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{9} }

func (m *SCMajorResult) GetSucess() bool {
	if m != nil && m.Sucess != nil {
		return *m.Sucess
	}
	return false
}

func (m *SCMajorResult) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *SCMajorResult) GetFubenId() int32 {
	if m != nil && m.FubenId != nil {
		return *m.FubenId
	}
	return 0
}

type SCMajorSceneInfo struct {
	CreateTime       *int64 `protobuf:"varint,1,req,name=createTime" json:"createTime,omitempty"`
	OwnerId          *int64 `protobuf:"varint,2,req,name=ownerId" json:"ownerId,omitempty"`
	SpouseId         *int64 `protobuf:"varint,3,req,name=spouseId" json:"spouseId,omitempty"`
	MajorType        *int32 `protobuf:"varint,4,req,name=majorType" json:"majorType,omitempty"`
	FubenId          *int32 `protobuf:"varint,5,req,name=fubenId" json:"fubenId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCMajorSceneInfo) Reset()                    { *m = SCMajorSceneInfo{} }
func (m *SCMajorSceneInfo) String() string            { return proto.CompactTextString(m) }
func (*SCMajorSceneInfo) ProtoMessage()               {}
func (*SCMajorSceneInfo) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{10} }

func (m *SCMajorSceneInfo) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *SCMajorSceneInfo) GetOwnerId() int64 {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return 0
}

func (m *SCMajorSceneInfo) GetSpouseId() int64 {
	if m != nil && m.SpouseId != nil {
		return *m.SpouseId
	}
	return 0
}

func (m *SCMajorSceneInfo) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *SCMajorSceneInfo) GetFubenId() int32 {
	if m != nil && m.FubenId != nil {
		return *m.FubenId
	}
	return 0
}

type CSMajorNum struct {
	MajorType        *int32 `protobuf:"varint,1,opt,name=majorType" json:"majorType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSMajorNum) Reset()                    { *m = CSMajorNum{} }
func (m *CSMajorNum) String() string            { return proto.CompactTextString(m) }
func (*CSMajorNum) ProtoMessage()               {}
func (*CSMajorNum) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{11} }

func (m *CSMajorNum) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

type SCMajorNum struct {
	MajorType        *int32 `protobuf:"varint,1,req,name=majorType" json:"majorType,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCMajorNum) Reset()                    { *m = SCMajorNum{} }
func (m *SCMajorNum) String() string            { return proto.CompactTextString(m) }
func (*SCMajorNum) ProtoMessage()               {}
func (*SCMajorNum) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{12} }

func (m *SCMajorNum) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *SCMajorNum) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type MajorNumInfo struct {
	MajorType        *int32 `protobuf:"varint,1,req,name=majorType" json:"majorType,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MajorNumInfo) Reset()                    { *m = MajorNumInfo{} }
func (m *MajorNumInfo) String() string            { return proto.CompactTextString(m) }
func (*MajorNumInfo) ProtoMessage()               {}
func (*MajorNumInfo) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{13} }

func (m *MajorNumInfo) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *MajorNumInfo) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type SCMajorNumNotice struct {
	InfoList         []*MajorNumInfo `protobuf:"bytes,1,rep,name=infoList" json:"infoList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SCMajorNumNotice) Reset()                    { *m = SCMajorNumNotice{} }
func (m *SCMajorNumNotice) String() string            { return proto.CompactTextString(m) }
func (*SCMajorNumNotice) ProtoMessage()               {}
func (*SCMajorNumNotice) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{14} }

func (m *SCMajorNumNotice) GetInfoList() []*MajorNumInfo {
	if m != nil {
		return m.InfoList
	}
	return nil
}

type CSMajorSaoDang struct {
	MajorType        *int32 `protobuf:"varint,1,req,name=majorType" json:"majorType,omitempty"`
	FubenId          *int32 `protobuf:"varint,2,req,name=fubenId" json:"fubenId,omitempty"`
	Num              *int32 `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSMajorSaoDang) Reset()                    { *m = CSMajorSaoDang{} }
func (m *CSMajorSaoDang) String() string            { return proto.CompactTextString(m) }
func (*CSMajorSaoDang) ProtoMessage()               {}
func (*CSMajorSaoDang) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{15} }

func (m *CSMajorSaoDang) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *CSMajorSaoDang) GetFubenId() int32 {
	if m != nil && m.FubenId != nil {
		return *m.FubenId
	}
	return 0
}

func (m *CSMajorSaoDang) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type SCMajorSaoDang struct {
	MajorType        *int32               `protobuf:"varint,1,req,name=majorType" json:"majorType,omitempty"`
	FubenId          *int32               `protobuf:"varint,2,req,name=fubenId" json:"fubenId,omitempty"`
	SweepDropList    []*MaterialSweepDrop `protobuf:"bytes,3,rep,name=sweepDropList" json:"sweepDropList,omitempty"`
	SaodangNum       *int32               `protobuf:"varint,4,req,name=saodangNum" json:"saodangNum,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SCMajorSaoDang) Reset()                    { *m = SCMajorSaoDang{} }
func (m *SCMajorSaoDang) String() string            { return proto.CompactTextString(m) }
func (*SCMajorSaoDang) ProtoMessage()               {}
func (*SCMajorSaoDang) Descriptor() ([]byte, []int) { return fileDescriptor67, []int{16} }

func (m *SCMajorSaoDang) GetMajorType() int32 {
	if m != nil && m.MajorType != nil {
		return *m.MajorType
	}
	return 0
}

func (m *SCMajorSaoDang) GetFubenId() int32 {
	if m != nil && m.FubenId != nil {
		return *m.FubenId
	}
	return 0
}

func (m *SCMajorSaoDang) GetSweepDropList() []*MaterialSweepDrop {
	if m != nil {
		return m.SweepDropList
	}
	return nil
}

func (m *SCMajorSaoDang) GetSaodangNum() int32 {
	if m != nil && m.SaodangNum != nil {
		return *m.SaodangNum
	}
	return 0
}

func init() {
	proto.RegisterType((*CSMajorInvite)(nil), "ui.CSMajorInvite")
	proto.RegisterType((*SCMajorInvite)(nil), "ui.SCMajorInvite")
	proto.RegisterType((*CSMajorInviteCancle)(nil), "ui.CSMajorInviteCancle")
	proto.RegisterType((*SCMajorInviteCancle)(nil), "ui.SCMajorInviteCancle")
	proto.RegisterType((*SCMajorInvitePushSpouse)(nil), "ui.SCMajorInvitePushSpouse")
	proto.RegisterType((*SCMajorInvitePushCancle)(nil), "ui.SCMajorInvitePushCancle")
	proto.RegisterType((*CSMajorInviteDeal)(nil), "ui.CSMajorInviteDeal")
	proto.RegisterType((*SCMajorInviteDeal)(nil), "ui.SCMajorInviteDeal")
	proto.RegisterType((*SCMajorSpouseRefused)(nil), "ui.SCMajorSpouseRefused")
	proto.RegisterType((*SCMajorResult)(nil), "ui.SCMajorResult")
	proto.RegisterType((*SCMajorSceneInfo)(nil), "ui.SCMajorSceneInfo")
	proto.RegisterType((*CSMajorNum)(nil), "ui.CSMajorNum")
	proto.RegisterType((*SCMajorNum)(nil), "ui.SCMajorNum")
	proto.RegisterType((*MajorNumInfo)(nil), "ui.MajorNumInfo")
	proto.RegisterType((*SCMajorNumNotice)(nil), "ui.SCMajorNumNotice")
	proto.RegisterType((*CSMajorSaoDang)(nil), "ui.CSMajorSaoDang")
	proto.RegisterType((*SCMajorSaoDang)(nil), "ui.SCMajorSaoDang")
}

func init() { proto.RegisterFile("major.proto", fileDescriptor67) }

var fileDescriptor67 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0xa5, 0x49, 0x63, 0xb7, 0x77, 0xbb, 0xdb, 0x6d, 0x6a, 0xb1, 0xf8, 0x62, 0x19, 0x11, 0xf6,
	0xa1, 0xec, 0x83, 0x82, 0xef, 0x92, 0x05, 0x0d, 0x6a, 0x94, 0xa6, 0x7f, 0x60, 0x4c, 0x6e, 0xea,
	0x48, 0x66, 0x26, 0x64, 0x32, 0x2d, 0xfd, 0xf7, 0x32, 0x1f, 0x29, 0x9b, 0x10, 0xb0, 0xeb, 0x5b,
	0x18, 0xce, 0x3d, 0x1f, 0xf7, 0xdc, 0xc0, 0x9c, 0xd3, 0x3f, 0xb2, 0xdd, 0x34, 0xad, 0xec, 0x64,
	0x1c, 0x68, 0xf6, 0x7a, 0xc9, 0x69, 0x87, 0x2d, 0xa3, 0xb5, 0x7b, 0x23, 0x1f, 0x60, 0x91, 0xe4,
	0xdf, 0x0d, 0x28, 0x15, 0xf7, 0xac, 0xc3, 0xf8, 0x0c, 0x8e, 0xed, 0xcc, 0xed, 0x63, 0x83, 0x97,
	0x07, 0x57, 0x07, 0xeb, 0x28, 0x3e, 0x85, 0xa3, 0x4a, 0xff, 0x42, 0x91, 0x96, 0x97, 0xc1, 0x55,
	0xb0, 0x8e, 0xc8, 0x67, 0x58, 0xe4, 0xc9, 0xee, 0x50, 0x0c, 0xc0, 0xec, 0xd7, 0x2d, 0xe3, 0x66,
	0x2a, 0x58, 0x87, 0x43, 0x22, 0x3b, 0xb7, 0x4b, 0x14, 0x5a, 0xa2, 0x0b, 0x38, 0x1f, 0xa8, 0x27,
	0x54, 0x14, 0x35, 0x92, 0x77, 0x70, 0x3e, 0xe0, 0x77, 0xcf, 0xf1, 0x12, 0x5e, 0xb4, 0xa8, 0x74,
	0xdd, 0x59, 0x85, 0x88, 0xfc, 0x80, 0x57, 0x03, 0xd8, 0x4f, 0xad, 0x7e, 0xe7, 0x8d, 0xd4, 0x0a,
	0xe3, 0x15, 0xcc, 0x9a, 0x9a, 0x3e, 0x62, 0x9b, 0x96, 0x7b, 0xd8, 0xf9, 0x3a, 0x41, 0xe8, 0xb5,
	0x4f, 0xe0, 0x50, 0x50, 0x9f, 0xed, 0xf8, 0x59, 0x64, 0x6f, 0xe1, 0x6c, 0x90, 0x6d, 0x8b, 0xb4,
	0x1e, 0x45, 0x98, 0x19, 0xd0, 0x40, 0x71, 0x02, 0x14, 0x91, 0x2f, 0xf0, 0xd2, 0x83, 0x5c, 0xba,
	0x1b, 0xac, 0xb4, 0xc2, 0xf2, 0x3f, 0x3c, 0x25, 0x4f, 0xc5, 0xdd, 0x58, 0x01, 0x23, 0xa5, 0x74,
	0x81, 0x4a, 0x39, 0x3f, 0xcf, 0x22, 0xe1, 0xb0, 0xea, 0xed, 0x14, 0x28, 0x30, 0x15, 0x95, 0x34,
	0x07, 0x50, 0xb4, 0x48, 0x07, 0x07, 0x70, 0x0a, 0x47, 0xf2, 0x41, 0xd8, 0x0a, 0x02, 0xfb, 0xb0,
	0x82, 0x99, 0xb2, 0x01, 0x3c, 0xd5, 0xa8, 0x94, 0xc3, 0xb1, 0x5c, 0x64, 0xe5, 0xde, 0x00, 0xf8,
	0x3d, 0x66, 0x9a, 0x4f, 0x9c, 0x27, 0xb9, 0x06, 0xf0, 0x7e, 0x26, 0x00, 0x86, 0x72, 0x0e, 0xa1,
	0xd0, 0xdc, 0xdf, 0xee, 0x06, 0x4e, 0x7a, 0xac, 0x75, 0xfe, 0x2f, 0xfc, 0xc7, 0xa7, 0xb4, 0x99,
	0xe6, 0x99, 0xec, 0x58, 0x81, 0x31, 0x81, 0x19, 0x13, 0x95, 0xfc, 0xc6, 0x94, 0xa9, 0x28, 0x5c,
	0xcf, 0xdf, 0xaf, 0x36, 0x9a, 0x6d, 0x76, 0x79, 0xc9, 0x27, 0x58, 0x7a, 0xdb, 0x39, 0x95, 0x5b,
	0x2a, 0xee, 0xa6, 0x94, 0xc6, 0x7f, 0x56, 0x2f, 0xed, 0x16, 0x7d, 0x0f, 0xcb, 0x7e, 0xd1, 0x7b,
	0x50, 0x5c, 0xc3, 0x42, 0x3d, 0x20, 0x36, 0xdb, 0x56, 0x36, 0xd6, 0x61, 0x68, 0x1d, 0x5e, 0x38,
	0x87, 0xee, 0xe7, 0xcf, 0x7b, 0x80, 0x29, 0x4e, 0x51, 0x59, 0x52, 0x71, 0x97, 0x69, 0xee, 0x2a,
	0xf8, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x37, 0x88, 0x84, 0x4a, 0x35, 0x04, 0x00, 0x00,
}
