// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Position struct {
	PosX             *float32 `protobuf:"fixed32,1,req,name=posX" json:"posX,omitempty"`
	PosY             *float32 `protobuf:"fixed32,2,req,name=posY" json:"posY,omitempty"`
	PosZ             *float32 `protobuf:"fixed32,3,req,name=posZ" json:"posZ,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Position) Reset()                    { *m = Position{} }
func (m *Position) String() string            { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()               {}
func (*Position) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{0} }

func (m *Position) GetPosX() float32 {
	if m != nil && m.PosX != nil {
		return *m.PosX
	}
	return 0
}

func (m *Position) GetPosY() float32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *Position) GetPosZ() float32 {
	if m != nil && m.PosZ != nil {
		return *m.PosZ
	}
	return 0
}

type CSHeartBeat struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSHeartBeat) Reset()                    { *m = CSHeartBeat{} }
func (m *CSHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*CSHeartBeat) ProtoMessage()               {}
func (*CSHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{1} }

type SCHeartBeat struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCHeartBeat) Reset()                    { *m = SCHeartBeat{} }
func (m *SCHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*SCHeartBeat) ProtoMessage()               {}
func (*SCHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{2} }

type CSGetTime struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSGetTime) Reset()                    { *m = CSGetTime{} }
func (m *CSGetTime) String() string            { return proto.CompactTextString(m) }
func (*CSGetTime) ProtoMessage()               {}
func (*CSGetTime) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{3} }

type SCGetTime struct {
	Now              *int64 `protobuf:"varint,1,req,name=now" json:"now,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCGetTime) Reset()                    { *m = SCGetTime{} }
func (m *SCGetTime) String() string            { return proto.CompactTextString(m) }
func (*SCGetTime) ProtoMessage()               {}
func (*SCGetTime) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{4} }

func (m *SCGetTime) GetNow() int64 {
	if m != nil && m.Now != nil {
		return *m.Now
	}
	return 0
}

type SCSystemMessage struct {
	Content          *string  `protobuf:"bytes,1,req,name=content" json:"content,omitempty"`
	Args             []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SCSystemMessage) Reset()                    { *m = SCSystemMessage{} }
func (m *SCSystemMessage) String() string            { return proto.CompactTextString(m) }
func (*SCSystemMessage) ProtoMessage()               {}
func (*SCSystemMessage) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{5} }

func (m *SCSystemMessage) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *SCSystemMessage) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type SCError struct {
	ErrorCode        *ErrorCode `protobuf:"varint,1,req,name=errorCode,enum=ui.ErrorCode" json:"errorCode,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SCError) Reset()                    { *m = SCError{} }
func (m *SCError) String() string            { return proto.CompactTextString(m) }
func (*SCError) ProtoMessage()               {}
func (*SCError) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{6} }

func (m *SCError) GetErrorCode() ErrorCode {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return ErrorCode_Unknown
}

type SCException struct {
	Content          *string `protobuf:"bytes,1,req,name=content" json:"content,omitempty"`
	Code             *int32  `protobuf:"varint,2,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCException) Reset()                    { *m = SCException{} }
func (m *SCException) String() string            { return proto.CompactTextString(m) }
func (*SCException) ProtoMessage()               {}
func (*SCException) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{7} }

func (m *SCException) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *SCException) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

type CSOpenServerTime struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSOpenServerTime) Reset()                    { *m = CSOpenServerTime{} }
func (m *CSOpenServerTime) String() string            { return proto.CompactTextString(m) }
func (*CSOpenServerTime) ProtoMessage()               {}
func (*CSOpenServerTime) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{8} }

type SCOpenServerTime struct {
	OpenServerTime         *int64 `protobuf:"varint,1,req,name=openServerTime" json:"openServerTime,omitempty"`
	ActivityOpenServerTime *int64 `protobuf:"varint,2,req,name=activityOpenServerTime" json:"activityOpenServerTime,omitempty"`
	XXX_unrecognized       []byte `json:"-"`
}

func (m *SCOpenServerTime) Reset()                    { *m = SCOpenServerTime{} }
func (m *SCOpenServerTime) String() string            { return proto.CompactTextString(m) }
func (*SCOpenServerTime) ProtoMessage()               {}
func (*SCOpenServerTime) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{9} }

func (m *SCOpenServerTime) GetOpenServerTime() int64 {
	if m != nil && m.OpenServerTime != nil {
		return *m.OpenServerTime
	}
	return 0
}

func (m *SCOpenServerTime) GetActivityOpenServerTime() int64 {
	if m != nil && m.ActivityOpenServerTime != nil {
		return *m.ActivityOpenServerTime
	}
	return 0
}

type CSMergeServerTime struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSMergeServerTime) Reset()                    { *m = CSMergeServerTime{} }
func (m *CSMergeServerTime) String() string            { return proto.CompactTextString(m) }
func (*CSMergeServerTime) ProtoMessage()               {}
func (*CSMergeServerTime) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{10} }

type SCMergeServerTime struct {
	MergeServerTime         *int64 `protobuf:"varint,1,req,name=mergeServerTime" json:"mergeServerTime,omitempty"`
	ActivityMergeServerTime *int64 `protobuf:"varint,2,req,name=activityMergeServerTime" json:"activityMergeServerTime,omitempty"`
	XXX_unrecognized        []byte `json:"-"`
}

func (m *SCMergeServerTime) Reset()                    { *m = SCMergeServerTime{} }
func (m *SCMergeServerTime) String() string            { return proto.CompactTextString(m) }
func (*SCMergeServerTime) ProtoMessage()               {}
func (*SCMergeServerTime) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{11} }

func (m *SCMergeServerTime) GetMergeServerTime() int64 {
	if m != nil && m.MergeServerTime != nil {
		return *m.MergeServerTime
	}
	return 0
}

func (m *SCMergeServerTime) GetActivityMergeServerTime() int64 {
	if m != nil && m.ActivityMergeServerTime != nil {
		return *m.ActivityMergeServerTime
	}
	return 0
}

func init() {
	proto.RegisterType((*Position)(nil), "ui.Position")
	proto.RegisterType((*CSHeartBeat)(nil), "ui.CSHeartBeat")
	proto.RegisterType((*SCHeartBeat)(nil), "ui.SCHeartBeat")
	proto.RegisterType((*CSGetTime)(nil), "ui.CSGetTime")
	proto.RegisterType((*SCGetTime)(nil), "ui.SCGetTime")
	proto.RegisterType((*SCSystemMessage)(nil), "ui.SCSystemMessage")
	proto.RegisterType((*SCError)(nil), "ui.SCError")
	proto.RegisterType((*SCException)(nil), "ui.SCException")
	proto.RegisterType((*CSOpenServerTime)(nil), "ui.CSOpenServerTime")
	proto.RegisterType((*SCOpenServerTime)(nil), "ui.SCOpenServerTime")
	proto.RegisterType((*CSMergeServerTime)(nil), "ui.CSMergeServerTime")
	proto.RegisterType((*SCMergeServerTime)(nil), "ui.SCMergeServerTime")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor21) }

var fileDescriptor21 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x79, 0x93, 0x57, 0x6a, 0x26, 0xfd, 0xbb, 0x42, 0x1b, 0x3c, 0x68, 0xd9, 0x53, 0x41,
	0x29, 0x22, 0x7e, 0x02, 0x97, 0xa2, 0x08, 0x45, 0x61, 0x3c, 0xa8, 0xb7, 0x10, 0x87, 0xb2, 0x87,
	0x64, 0xc2, 0xee, 0xb6, 0xda, 0x6f, 0x2f, 0xbb, 0x4d, 0xb1, 0x29, 0x1e, 0x9f, 0x1f, 0x33, 0xf3,
	0x9b, 0x07, 0xba, 0x05, 0x97, 0x25, 0x57, 0xf3, 0xda, 0xb0, 0x63, 0x11, 0xad, 0xf5, 0x79, 0x4a,
	0xc6, 0xb0, 0xd9, 0x01, 0x79, 0x07, 0xa7, 0x2f, 0x6c, 0xb5, 0xd3, 0x5c, 0x89, 0x2e, 0xfc, 0xaf,
	0xd9, 0xbe, 0x65, 0xff, 0xa6, 0xd1, 0x2c, 0x6a, 0xd2, 0x7b, 0x16, 0x1d, 0xa4, 0x8f, 0x2c, 0xf6,
	0x49, 0xf6, 0x20, 0x55, 0xf8, 0x48, 0xb9, 0x71, 0xf7, 0x94, 0x3b, 0x1f, 0x51, 0xfd, 0xc6, 0x14,
	0x12, 0x85, 0x0f, 0xe4, 0x5e, 0x75, 0x49, 0x32, 0x83, 0x04, 0x55, 0x13, 0x44, 0x0a, 0x71, 0xc5,
	0x5f, 0x41, 0x10, 0xcb, 0x1b, 0x18, 0xa0, 0xc2, 0xad, 0x75, 0x54, 0x2e, 0xc9, 0xda, 0x7c, 0x45,
	0x62, 0x00, 0x9d, 0x82, 0x2b, 0x47, 0x95, 0x0b, 0x33, 0x89, 0xd7, 0xe6, 0x66, 0x65, 0xb3, 0x68,
	0x1a, 0xcf, 0x12, 0x79, 0x05, 0x1d, 0x54, 0x0b, 0xff, 0xbd, 0x98, 0x42, 0x12, 0x6a, 0x28, 0xfe,
	0xa4, 0x30, 0xdb, 0xbf, 0xed, 0xcd, 0xd7, 0x7a, 0xbe, 0xd8, 0x43, 0x79, 0xed, 0x9f, 0x5a, 0x7c,
	0x17, 0x54, 0x87, 0x72, 0x7f, 0x9d, 0x2e, 0xfc, 0xb2, 0xef, 0x77, 0x22, 0x05, 0x0c, 0x15, 0x3e,
	0xd7, 0x54, 0x21, 0x99, 0x0d, 0x99, 0xf0, 0xfa, 0x13, 0x0c, 0x51, 0xb5, 0x99, 0x18, 0x43, 0x9f,
	0x5b, 0x64, 0x57, 0x46, 0x5c, 0xc0, 0x38, 0x2f, 0x9c, 0xde, 0x68, 0xb7, 0x6d, 0x6f, 0x84, 0xfb,
	0xb1, 0x3c, 0x83, 0x91, 0xc2, 0x25, 0x99, 0x15, 0x1d, 0x08, 0x96, 0x30, 0x42, 0x75, 0x04, 0xc5,
	0x04, 0x06, 0x65, 0x1b, 0x35, 0x8a, 0x4b, 0x98, 0xec, 0x15, 0x47, 0x3b, 0x3b, 0xc7, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x2b, 0xdc, 0xb6, 0x14, 0xeb, 0x01, 0x00, 0x00,
}
