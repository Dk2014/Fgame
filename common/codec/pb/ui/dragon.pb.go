// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dragon.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CSDragonGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSDragonGet) Reset()                    { *m = CSDragonGet{} }
func (m *CSDragonGet) String() string            { return proto.CompactTextString(m) }
func (*CSDragonGet) ProtoMessage()               {}
func (*CSDragonGet) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{0} }

type SCDragonGet struct {
	StageId          *int32      `protobuf:"varint,1,req,name=stageId" json:"stageId,omitempty"`
	ItemList         []*ItemInfo `protobuf:"bytes,2,rep,name=itemList" json:"itemList,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCDragonGet) Reset()                    { *m = SCDragonGet{} }
func (m *SCDragonGet) String() string            { return proto.CompactTextString(m) }
func (*SCDragonGet) ProtoMessage()               {}
func (*SCDragonGet) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{1} }

func (m *SCDragonGet) GetStageId() int32 {
	if m != nil && m.StageId != nil {
		return *m.StageId
	}
	return 0
}

func (m *SCDragonGet) GetItemList() []*ItemInfo {
	if m != nil {
		return m.ItemList
	}
	return nil
}

type CSDragonFeed struct {
	ItemId           *int32 `protobuf:"varint,1,req,name=itemId" json:"itemId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSDragonFeed) Reset()                    { *m = CSDragonFeed{} }
func (m *CSDragonFeed) String() string            { return proto.CompactTextString(m) }
func (*CSDragonFeed) ProtoMessage()               {}
func (*CSDragonFeed) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{2} }

func (m *CSDragonFeed) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type SCDragonFeed struct {
	StageId          *int32      `protobuf:"varint,1,req,name=stageId" json:"stageId,omitempty"`
	ItemList         []*ItemInfo `protobuf:"bytes,2,rep,name=itemList" json:"itemList,omitempty"`
	Status           *bool       `protobuf:"varint,3,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCDragonFeed) Reset()                    { *m = SCDragonFeed{} }
func (m *SCDragonFeed) String() string            { return proto.CompactTextString(m) }
func (*SCDragonFeed) ProtoMessage()               {}
func (*SCDragonFeed) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{3} }

func (m *SCDragonFeed) GetStageId() int32 {
	if m != nil && m.StageId != nil {
		return *m.StageId
	}
	return 0
}

func (m *SCDragonFeed) GetItemList() []*ItemInfo {
	if m != nil {
		return m.ItemList
	}
	return nil
}

func (m *SCDragonFeed) GetStatus() bool {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return false
}

func init() {
	proto.RegisterType((*CSDragonGet)(nil), "ui.CSDragonGet")
	proto.RegisterType((*SCDragonGet)(nil), "ui.SCDragonGet")
	proto.RegisterType((*CSDragonFeed)(nil), "ui.CSDragonFeed")
	proto.RegisterType((*SCDragonFeed)(nil), "ui.SCDragonFeed")
}

func init() { proto.RegisterFile("dragon.proto", fileDescriptor25) }

var fileDescriptor25 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x29, 0x4a, 0x4c,
	0xcf, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0xcd, 0x94, 0xe2, 0xca, 0x2c,
	0x49, 0xcd, 0x85, 0xf0, 0x95, 0x78, 0xb9, 0xb8, 0x9d, 0x83, 0x5d, 0xc0, 0x2a, 0xdc, 0x53, 0x4b,
	0x94, 0xec, 0xb8, 0xb8, 0x83, 0x9d, 0xe1, 0x5c, 0x21, 0x7e, 0x2e, 0xf6, 0xe2, 0x92, 0xc4, 0xf4,
	0x54, 0xcf, 0x14, 0x09, 0x46, 0x05, 0x26, 0x0d, 0x56, 0x21, 0x39, 0x2e, 0x0e, 0x90, 0x66, 0x9f,
	0xcc, 0xe2, 0x12, 0x09, 0x26, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x1e, 0xbd, 0xd2, 0x4c, 0x3d, 0xcf,
	0x92, 0xd4, 0x5c, 0xcf, 0xbc, 0xb4, 0x7c, 0x25, 0x39, 0x2e, 0x1e, 0x98, 0x71, 0x6e, 0xa9, 0xa9,
	0x29, 0x42, 0x7c, 0x5c, 0x6c, 0x20, 0xf5, 0x30, 0xfd, 0x4a, 0xfe, 0x5c, 0x3c, 0x30, 0xf3, 0xc1,
	0xf2, 0xa4, 0x5a, 0x00, 0x32, 0xb0, 0xb8, 0x24, 0xb1, 0xa4, 0xb4, 0x58, 0x82, 0x59, 0x81, 0x49,
	0x83, 0x03, 0x10, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x68, 0xa0, 0x7d, 0xde, 0x00, 0x00, 0x00,
}
