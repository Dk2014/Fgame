// Code generated by protoc-gen-go. DO NOT EDIT.
// source: teamcopy.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TeamCopyPlayerShowData struct {
	PlayerId         *int64  `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name,def=" json:"name,omitempty"`
	Role             *int32  `protobuf:"varint,3,opt,name=role,def=-1" json:"role,omitempty"`
	Sex              *int32  `protobuf:"varint,4,opt,name=sex,def=-1" json:"sex,omitempty"`
	Damage           *int64  `protobuf:"varint,5,opt,name=damage,def=-1" json:"damage,omitempty"`
	Status           *int32  `protobuf:"varint,6,opt,name=status,def=-1" json:"status,omitempty"`
	MaxHp            *int64  `protobuf:"varint,7,opt,name=maxHp,def=-1" json:"maxHp,omitempty"`
	Hp               *int64  `protobuf:"varint,8,opt,name=hp,def=-1" json:"hp,omitempty"`
	Level            *int32  `protobuf:"varint,9,opt,name=level,def=-1" json:"level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TeamCopyPlayerShowData) Reset()                    { *m = TeamCopyPlayerShowData{} }
func (m *TeamCopyPlayerShowData) String() string            { return proto.CompactTextString(m) }
func (*TeamCopyPlayerShowData) ProtoMessage()               {}
func (*TeamCopyPlayerShowData) Descriptor() ([]byte, []int) { return fileDescriptor113, []int{0} }

const Default_TeamCopyPlayerShowData_Role int32 = -1
const Default_TeamCopyPlayerShowData_Sex int32 = -1
const Default_TeamCopyPlayerShowData_Damage int64 = -1
const Default_TeamCopyPlayerShowData_Status int32 = -1
const Default_TeamCopyPlayerShowData_MaxHp int64 = -1
const Default_TeamCopyPlayerShowData_Hp int64 = -1
const Default_TeamCopyPlayerShowData_Level int32 = -1

func (m *TeamCopyPlayerShowData) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *TeamCopyPlayerShowData) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TeamCopyPlayerShowData) GetRole() int32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return Default_TeamCopyPlayerShowData_Role
}

func (m *TeamCopyPlayerShowData) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return Default_TeamCopyPlayerShowData_Sex
}

func (m *TeamCopyPlayerShowData) GetDamage() int64 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return Default_TeamCopyPlayerShowData_Damage
}

func (m *TeamCopyPlayerShowData) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_TeamCopyPlayerShowData_Status
}

func (m *TeamCopyPlayerShowData) GetMaxHp() int64 {
	if m != nil && m.MaxHp != nil {
		return *m.MaxHp
	}
	return Default_TeamCopyPlayerShowData_MaxHp
}

func (m *TeamCopyPlayerShowData) GetHp() int64 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return Default_TeamCopyPlayerShowData_Hp
}

func (m *TeamCopyPlayerShowData) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return Default_TeamCopyPlayerShowData_Level
}

type TeamCopyInfo struct {
	Purpose          *int32 `protobuf:"varint,1,req,name=purpose" json:"purpose,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TeamCopyInfo) Reset()                    { *m = TeamCopyInfo{} }
func (m *TeamCopyInfo) String() string            { return proto.CompactTextString(m) }
func (*TeamCopyInfo) ProtoMessage()               {}
func (*TeamCopyInfo) Descriptor() ([]byte, []int) { return fileDescriptor113, []int{1} }

func (m *TeamCopyInfo) GetPurpose() int32 {
	if m != nil && m.Purpose != nil {
		return *m.Purpose
	}
	return 0
}

func (m *TeamCopyInfo) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type CSTeamCopyAllGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSTeamCopyAllGet) Reset()                    { *m = CSTeamCopyAllGet{} }
func (m *CSTeamCopyAllGet) String() string            { return proto.CompactTextString(m) }
func (*CSTeamCopyAllGet) ProtoMessage()               {}
func (*CSTeamCopyAllGet) Descriptor() ([]byte, []int) { return fileDescriptor113, []int{2} }

type SCTeamCopyAllGet struct {
	TeamCopyList     []*TeamCopyInfo `protobuf:"bytes,1,rep,name=teamCopyList" json:"teamCopyList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SCTeamCopyAllGet) Reset()                    { *m = SCTeamCopyAllGet{} }
func (m *SCTeamCopyAllGet) String() string            { return proto.CompactTextString(m) }
func (*SCTeamCopyAllGet) ProtoMessage()               {}
func (*SCTeamCopyAllGet) Descriptor() ([]byte, []int) { return fileDescriptor113, []int{3} }

func (m *SCTeamCopyAllGet) GetTeamCopyList() []*TeamCopyInfo {
	if m != nil {
		return m.TeamCopyList
	}
	return nil
}

type CSTeamCopyStartBattle struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSTeamCopyStartBattle) Reset()                    { *m = CSTeamCopyStartBattle{} }
func (m *CSTeamCopyStartBattle) String() string            { return proto.CompactTextString(m) }
func (*CSTeamCopyStartBattle) ProtoMessage()               {}
func (*CSTeamCopyStartBattle) Descriptor() ([]byte, []int) { return fileDescriptor113, []int{4} }

type SCTeamCopyStartBattle struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCTeamCopyStartBattle) Reset()                    { *m = SCTeamCopyStartBattle{} }
func (m *SCTeamCopyStartBattle) String() string            { return proto.CompactTextString(m) }
func (*SCTeamCopyStartBattle) ProtoMessage()               {}
func (*SCTeamCopyStartBattle) Descriptor() ([]byte, []int) { return fileDescriptor113, []int{5} }

type SCTeamCopyStartBattleBroadcast struct {
	Purpose          *int32 `protobuf:"varint,1,req,name=purpose" json:"purpose,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCTeamCopyStartBattleBroadcast) Reset()         { *m = SCTeamCopyStartBattleBroadcast{} }
func (m *SCTeamCopyStartBattleBroadcast) String() string { return proto.CompactTextString(m) }
func (*SCTeamCopyStartBattleBroadcast) ProtoMessage()    {}
func (*SCTeamCopyStartBattleBroadcast) Descriptor() ([]byte, []int) {
	return fileDescriptor113, []int{6}
}

func (m *SCTeamCopyStartBattleBroadcast) GetPurpose() int32 {
	if m != nil && m.Purpose != nil {
		return *m.Purpose
	}
	return 0
}

type SCTeamCopyStartBattleResultBroadcast struct {
	Purpose          *int32 `protobuf:"varint,1,req,name=purpose" json:"purpose,omitempty"`
	Sucess           *bool  `protobuf:"varint,2,req,name=sucess" json:"sucess,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCTeamCopyStartBattleResultBroadcast) Reset()         { *m = SCTeamCopyStartBattleResultBroadcast{} }
func (m *SCTeamCopyStartBattleResultBroadcast) String() string { return proto.CompactTextString(m) }
func (*SCTeamCopyStartBattleResultBroadcast) ProtoMessage()    {}
func (*SCTeamCopyStartBattleResultBroadcast) Descriptor() ([]byte, []int) {
	return fileDescriptor113, []int{7}
}

func (m *SCTeamCopyStartBattleResultBroadcast) GetPurpose() int32 {
	if m != nil && m.Purpose != nil {
		return *m.Purpose
	}
	return 0
}

func (m *SCTeamCopyStartBattleResultBroadcast) GetSucess() bool {
	if m != nil && m.Sucess != nil {
		return *m.Sucess
	}
	return false
}

type SCTeamCopySceneInfo struct {
	CreateTime       *int64                    `protobuf:"varint,1,req,name=createTime" json:"createTime,omitempty"`
	Purpose          *int32                    `protobuf:"varint,2,req,name=purpose" json:"purpose,omitempty"`
	PlayerShowList   []*TeamCopyPlayerShowData `protobuf:"bytes,3,rep,name=playerShowList" json:"playerShowList,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *SCTeamCopySceneInfo) Reset()                    { *m = SCTeamCopySceneInfo{} }
func (m *SCTeamCopySceneInfo) String() string            { return proto.CompactTextString(m) }
func (*SCTeamCopySceneInfo) ProtoMessage()               {}
func (*SCTeamCopySceneInfo) Descriptor() ([]byte, []int) { return fileDescriptor113, []int{8} }

func (m *SCTeamCopySceneInfo) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *SCTeamCopySceneInfo) GetPurpose() int32 {
	if m != nil && m.Purpose != nil {
		return *m.Purpose
	}
	return 0
}

func (m *SCTeamCopySceneInfo) GetPlayerShowList() []*TeamCopyPlayerShowData {
	if m != nil {
		return m.PlayerShowList
	}
	return nil
}

type SCTeamCopyPlayerDataChanged struct {
	PlayerShow       *TeamCopyPlayerShowData `protobuf:"bytes,1,req,name=playerShow" json:"playerShow,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *SCTeamCopyPlayerDataChanged) Reset()                    { *m = SCTeamCopyPlayerDataChanged{} }
func (m *SCTeamCopyPlayerDataChanged) String() string            { return proto.CompactTextString(m) }
func (*SCTeamCopyPlayerDataChanged) ProtoMessage()               {}
func (*SCTeamCopyPlayerDataChanged) Descriptor() ([]byte, []int) { return fileDescriptor113, []int{9} }

func (m *SCTeamCopyPlayerDataChanged) GetPlayerShow() *TeamCopyPlayerShowData {
	if m != nil {
		return m.PlayerShow
	}
	return nil
}

type SCTeamCopyResult struct {
	Purpose          *int32        `protobuf:"varint,1,req,name=purpose" json:"purpose,omitempty"`
	Sucess           *bool         `protobuf:"varint,2,req,name=sucess" json:"sucess,omitempty"`
	IsRew            *bool         `protobuf:"varint,3,req,name=isRew" json:"isRew,omitempty"`
	TeamCopyInfo     *TeamCopyInfo `protobuf:"bytes,4,req,name=teamCopyInfo" json:"teamCopyInfo,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SCTeamCopyResult) Reset()                    { *m = SCTeamCopyResult{} }
func (m *SCTeamCopyResult) String() string            { return proto.CompactTextString(m) }
func (*SCTeamCopyResult) ProtoMessage()               {}
func (*SCTeamCopyResult) Descriptor() ([]byte, []int) { return fileDescriptor113, []int{10} }

func (m *SCTeamCopyResult) GetPurpose() int32 {
	if m != nil && m.Purpose != nil {
		return *m.Purpose
	}
	return 0
}

func (m *SCTeamCopyResult) GetSucess() bool {
	if m != nil && m.Sucess != nil {
		return *m.Sucess
	}
	return false
}

func (m *SCTeamCopyResult) GetIsRew() bool {
	if m != nil && m.IsRew != nil {
		return *m.IsRew
	}
	return false
}

func (m *SCTeamCopyResult) GetTeamCopyInfo() *TeamCopyInfo {
	if m != nil {
		return m.TeamCopyInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*TeamCopyPlayerShowData)(nil), "ui.TeamCopyPlayerShowData")
	proto.RegisterType((*TeamCopyInfo)(nil), "ui.TeamCopyInfo")
	proto.RegisterType((*CSTeamCopyAllGet)(nil), "ui.CSTeamCopyAllGet")
	proto.RegisterType((*SCTeamCopyAllGet)(nil), "ui.SCTeamCopyAllGet")
	proto.RegisterType((*CSTeamCopyStartBattle)(nil), "ui.CSTeamCopyStartBattle")
	proto.RegisterType((*SCTeamCopyStartBattle)(nil), "ui.SCTeamCopyStartBattle")
	proto.RegisterType((*SCTeamCopyStartBattleBroadcast)(nil), "ui.SCTeamCopyStartBattleBroadcast")
	proto.RegisterType((*SCTeamCopyStartBattleResultBroadcast)(nil), "ui.SCTeamCopyStartBattleResultBroadcast")
	proto.RegisterType((*SCTeamCopySceneInfo)(nil), "ui.SCTeamCopySceneInfo")
	proto.RegisterType((*SCTeamCopyPlayerDataChanged)(nil), "ui.SCTeamCopyPlayerDataChanged")
	proto.RegisterType((*SCTeamCopyResult)(nil), "ui.SCTeamCopyResult")
}

func init() { proto.RegisterFile("teamcopy.proto", fileDescriptor113) }

var fileDescriptor113 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xd1, 0x6e, 0xd3, 0x40,
	0x10, 0xc4, 0x76, 0x9c, 0xa6, 0xdb, 0xe2, 0xba, 0x87, 0x80, 0x53, 0x91, 0x90, 0x65, 0x21, 0xe4,
	0x07, 0x88, 0xd4, 0x3e, 0xe6, 0x8d, 0x06, 0xa9, 0x54, 0x02, 0x09, 0x35, 0xfd, 0x81, 0x95, 0xb3,
	0x34, 0x46, 0x77, 0xbe, 0x93, 0x6f, 0x4d, 0x9b, 0x6f, 0xe3, 0xe7, 0x50, 0x2e, 0x8d, 0xed, 0xaa,
	0x05, 0x1e, 0x77, 0x76, 0x77, 0xf6, 0x66, 0xe6, 0x20, 0x61, 0x42, 0x5d, 0x1a, 0xbb, 0x9e, 0xda,
	0xc6, 0xb0, 0x11, 0x61, 0x5b, 0x9d, 0x40, 0xc5, 0xa4, 0xb7, 0x75, 0xfe, 0x3b, 0x80, 0x57, 0xd7,
	0x84, 0x7a, 0x6e, 0xec, 0xfa, 0xbb, 0xc2, 0x35, 0x35, 0x8b, 0x95, 0xb9, 0xfd, 0x8c, 0x8c, 0x22,
	0x85, 0x89, 0xf5, 0xc8, 0xe5, 0x52, 0x06, 0x59, 0x58, 0x44, 0x22, 0x81, 0x51, 0x8d, 0x9a, 0x64,
	0x98, 0x05, 0xc5, 0xfe, 0xec, 0x99, 0x48, 0x61, 0xd4, 0x18, 0x45, 0x32, 0xca, 0x82, 0x22, 0x9e,
	0x85, 0x1f, 0x4f, 0xc5, 0x11, 0x44, 0x8e, 0xee, 0xe4, 0xa8, 0x03, 0x04, 0x8c, 0x97, 0xa8, 0xf1,
	0x86, 0x64, 0x9c, 0x05, 0x45, 0xb4, 0xc3, 0x1c, 0x23, 0xb7, 0x4e, 0x8e, 0xbb, 0xb9, 0x63, 0x88,
	0x35, 0xde, 0x7d, 0xb1, 0x72, 0xaf, 0x1b, 0x4b, 0x20, 0x5c, 0x59, 0x39, 0xe9, 0xea, 0x63, 0x88,
	0x15, 0xfd, 0x22, 0x25, 0xf7, 0x77, 0x5b, 0xf9, 0x07, 0x38, 0xdc, 0x3d, 0xfe, 0xb2, 0xfe, 0x61,
	0xc4, 0x11, 0xec, 0xd9, 0xb6, 0xb1, 0xc6, 0x91, 0x7f, 0x71, 0x2c, 0x0e, 0x20, 0xaa, 0x5b, 0x2d,
	0xc3, 0x4d, 0x91, 0x0b, 0x48, 0xe7, 0x8b, 0xdd, 0xfc, 0x27, 0xa5, 0x2e, 0x88, 0xf3, 0x19, 0xa4,
	0x8b, 0xf9, 0x43, 0x4c, 0xbc, 0x87, 0x43, 0xbe, 0x47, 0xbe, 0x56, 0x8e, 0x65, 0x90, 0x45, 0xc5,
	0xc1, 0x59, 0x3a, 0x6d, 0xab, 0xe9, 0xf0, 0x5a, 0xfe, 0x1a, 0x5e, 0xf6, 0x7c, 0x0b, 0xc6, 0x86,
	0xcf, 0x91, 0x59, 0xd1, 0xa6, 0xd1, 0x93, 0x0e, 0x1b, 0xa7, 0xf0, 0xf6, 0xc9, 0xc6, 0x79, 0x63,
	0x70, 0x59, 0xa2, 0xe3, 0x47, 0x0a, 0xf2, 0x0b, 0x78, 0xf7, 0xe4, 0xca, 0x15, 0xb9, 0x56, 0xf1,
	0xdf, 0x17, 0x45, 0x02, 0x63, 0xd7, 0x96, 0xe4, 0x9c, 0x57, 0x3f, 0xc9, 0x6b, 0x78, 0x31, 0x20,
	0x2a, 0xa9, 0x26, 0x6f, 0x99, 0x00, 0x28, 0x1b, 0x42, 0xa6, 0xeb, 0x4a, 0xd3, 0x7d, 0xce, 0x03,
	0x2e, 0xef, 0x9c, 0x38, 0x83, 0xc4, 0x76, 0x9f, 0xc3, 0x7b, 0x12, 0x79, 0x4f, 0x4e, 0x86, 0x9e,
	0x3c, 0xfc, 0x3e, 0xf9, 0x37, 0x78, 0xd3, 0xdf, 0xdb, 0xf6, 0x36, 0xf8, 0x7c, 0x85, 0xf5, 0x0d,
	0x2d, 0xc5, 0x14, 0xa0, 0xa7, 0xf4, 0x77, 0xff, 0x4d, 0xf7, 0x73, 0x18, 0xd4, 0x56, 0xfc, 0x7f,
	0x35, 0x8b, 0xe7, 0x10, 0x57, 0xee, 0x8a, 0x6e, 0x65, 0xe4, 0xcb, 0x41, 0xb0, 0x1b, 0xed, 0x72,
	0xe4, 0xaf, 0x3e, 0x0a, 0xf6, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x79, 0xab, 0x54, 0x1e, 0x35,
	0x03, 0x00, 0x00,
}
