// Code generated by protoc-gen-go. DO NOT EDIT.
// source: friend.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FriendInfo struct {
	FriendId         *int64           `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	Point            *int32           `protobuf:"varint,2,req,name=point" json:"point,omitempty"`
	PlayerBasicInfo  *PlayerBasicInfo `protobuf:"bytes,3,req,name=playerBasicInfo" json:"playerBasicInfo,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *FriendInfo) Reset()                    { *m = FriendInfo{} }
func (m *FriendInfo) String() string            { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()               {}
func (*FriendInfo) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{0} }

func (m *FriendInfo) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *FriendInfo) GetPoint() int32 {
	if m != nil && m.Point != nil {
		return *m.Point
	}
	return 0
}

func (m *FriendInfo) GetPlayerBasicInfo() *PlayerBasicInfo {
	if m != nil {
		return m.PlayerBasicInfo
	}
	return nil
}

type FriendInviteInfo struct {
	InviteTime       *int64  `protobuf:"varint,1,req,name=inviteTime" json:"inviteTime,omitempty"`
	InviteId         *int64  `protobuf:"varint,2,req,name=inviteId" json:"inviteId,omitempty"`
	Name             *string `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Force            *int64  `protobuf:"varint,4,req,name=force" json:"force,omitempty"`
	Role             *int32  `protobuf:"varint,5,req,name=role" json:"role,omitempty"`
	Sex              *int32  `protobuf:"varint,6,req,name=sex" json:"sex,omitempty"`
	Level            *int32  `protobuf:"varint,7,req,name=level" json:"level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FriendInviteInfo) Reset()                    { *m = FriendInviteInfo{} }
func (m *FriendInviteInfo) String() string            { return proto.CompactTextString(m) }
func (*FriendInviteInfo) ProtoMessage()               {}
func (*FriendInviteInfo) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{1} }

func (m *FriendInviteInfo) GetInviteTime() int64 {
	if m != nil && m.InviteTime != nil {
		return *m.InviteTime
	}
	return 0
}

func (m *FriendInviteInfo) GetInviteId() int64 {
	if m != nil && m.InviteId != nil {
		return *m.InviteId
	}
	return 0
}

func (m *FriendInviteInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FriendInviteInfo) GetForce() int64 {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return 0
}

func (m *FriendInviteInfo) GetRole() int32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *FriendInviteInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *FriendInviteInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

type FriendFeedback struct {
	NoticeType       *int32  `protobuf:"varint,1,req,name=noticeType" json:"noticeType,omitempty"`
	FeedbackType     *int32  `protobuf:"varint,2,req,name=feedbackType" json:"feedbackType,omitempty"`
	FriendId         *int64  `protobuf:"varint,3,req,name=friendId" json:"friendId,omitempty"`
	FriendName       *string `protobuf:"bytes,4,req,name=friendName" json:"friendName,omitempty"`
	Condition        *int32  `protobuf:"varint,5,req,name=condition" json:"condition,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FriendFeedback) Reset()                    { *m = FriendFeedback{} }
func (m *FriendFeedback) String() string            { return proto.CompactTextString(m) }
func (*FriendFeedback) ProtoMessage()               {}
func (*FriendFeedback) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{2} }

func (m *FriendFeedback) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

func (m *FriendFeedback) GetFeedbackType() int32 {
	if m != nil && m.FeedbackType != nil {
		return *m.FeedbackType
	}
	return 0
}

func (m *FriendFeedback) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *FriendFeedback) GetFriendName() string {
	if m != nil && m.FriendName != nil {
		return *m.FriendName
	}
	return ""
}

func (m *FriendFeedback) GetCondition() int32 {
	if m != nil && m.Condition != nil {
		return *m.Condition
	}
	return 0
}

type FriendMarryDevelopLog struct {
	CreateTime       *int64  `protobuf:"varint,1,req,name=createTime" json:"createTime,omitempty"`
	SendName         *string `protobuf:"bytes,2,req,name=sendName" json:"sendName,omitempty"`
	RecvName         *string `protobuf:"bytes,3,req,name=recvName" json:"recvName,omitempty"`
	ItemId           *int32  `protobuf:"varint,4,req,name=itemId" json:"itemId,omitempty"`
	ItemNum          *int32  `protobuf:"varint,5,req,name=itemNum" json:"itemNum,omitempty"`
	CharmNum         *int32  `protobuf:"varint,6,req,name=charmNum" json:"charmNum,omitempty"`
	DevelopExp       *int32  `protobuf:"varint,7,req,name=developExp" json:"developExp,omitempty"`
	ContextStr       *string `protobuf:"bytes,8,req,name=contextStr" json:"contextStr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FriendMarryDevelopLog) Reset()                    { *m = FriendMarryDevelopLog{} }
func (m *FriendMarryDevelopLog) String() string            { return proto.CompactTextString(m) }
func (*FriendMarryDevelopLog) ProtoMessage()               {}
func (*FriendMarryDevelopLog) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{3} }

func (m *FriendMarryDevelopLog) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *FriendMarryDevelopLog) GetSendName() string {
	if m != nil && m.SendName != nil {
		return *m.SendName
	}
	return ""
}

func (m *FriendMarryDevelopLog) GetRecvName() string {
	if m != nil && m.RecvName != nil {
		return *m.RecvName
	}
	return ""
}

func (m *FriendMarryDevelopLog) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *FriendMarryDevelopLog) GetItemNum() int32 {
	if m != nil && m.ItemNum != nil {
		return *m.ItemNum
	}
	return 0
}

func (m *FriendMarryDevelopLog) GetCharmNum() int32 {
	if m != nil && m.CharmNum != nil {
		return *m.CharmNum
	}
	return 0
}

func (m *FriendMarryDevelopLog) GetDevelopExp() int32 {
	if m != nil && m.DevelopExp != nil {
		return *m.DevelopExp
	}
	return 0
}

func (m *FriendMarryDevelopLog) GetContextStr() string {
	if m != nil && m.ContextStr != nil {
		return *m.ContextStr
	}
	return ""
}

type SCFriendsGet struct {
	FriendList       []*FriendInfo     `protobuf:"bytes,1,rep,name=friendList" json:"friendList,omitempty"`
	BlackList        []*FriendInfo     `protobuf:"bytes,2,rep,name=blackList" json:"blackList,omitempty"`
	FeedbackList     []*FriendFeedback `protobuf:"bytes,3,rep,name=feedbackList" json:"feedbackList,omitempty"`
	RewRecord        []int32           `protobuf:"varint,4,rep,name=rewRecord" json:"rewRecord,omitempty"`
	DummyFrNum       *int32            `protobuf:"varint,5,req,name=dummyFrNum" json:"dummyFrNum,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCFriendsGet) Reset()                    { *m = SCFriendsGet{} }
func (m *SCFriendsGet) String() string            { return proto.CompactTextString(m) }
func (*SCFriendsGet) ProtoMessage()               {}
func (*SCFriendsGet) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{4} }

func (m *SCFriendsGet) GetFriendList() []*FriendInfo {
	if m != nil {
		return m.FriendList
	}
	return nil
}

func (m *SCFriendsGet) GetBlackList() []*FriendInfo {
	if m != nil {
		return m.BlackList
	}
	return nil
}

func (m *SCFriendsGet) GetFeedbackList() []*FriendFeedback {
	if m != nil {
		return m.FeedbackList
	}
	return nil
}

func (m *SCFriendsGet) GetRewRecord() []int32 {
	if m != nil {
		return m.RewRecord
	}
	return nil
}

func (m *SCFriendsGet) GetDummyFrNum() int32 {
	if m != nil && m.DummyFrNum != nil {
		return *m.DummyFrNum
	}
	return 0
}

type CSRecommentFriendsGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSRecommentFriendsGet) Reset()                    { *m = CSRecommentFriendsGet{} }
func (m *CSRecommentFriendsGet) String() string            { return proto.CompactTextString(m) }
func (*CSRecommentFriendsGet) ProtoMessage()               {}
func (*CSRecommentFriendsGet) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{5} }

type SCRecommentFriendsGet struct {
	PlayerList       []*PlayerBasicInfo `protobuf:"bytes,1,rep,name=playerList" json:"playerList,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *SCRecommentFriendsGet) Reset()                    { *m = SCRecommentFriendsGet{} }
func (m *SCRecommentFriendsGet) String() string            { return proto.CompactTextString(m) }
func (*SCRecommentFriendsGet) ProtoMessage()               {}
func (*SCRecommentFriendsGet) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{6} }

func (m *SCRecommentFriendsGet) GetPlayerList() []*PlayerBasicInfo {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

type CSFriendBlack struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendBlack) Reset()                    { *m = CSFriendBlack{} }
func (m *CSFriendBlack) String() string            { return proto.CompactTextString(m) }
func (*CSFriendBlack) ProtoMessage()               {}
func (*CSFriendBlack) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{7} }

func (m *CSFriendBlack) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

type SCFriendBlack struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendBlack) Reset()                    { *m = SCFriendBlack{} }
func (m *SCFriendBlack) String() string            { return proto.CompactTextString(m) }
func (*SCFriendBlack) ProtoMessage()               {}
func (*SCFriendBlack) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{8} }

func (m *SCFriendBlack) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

type CSFriendDelete struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendDelete) Reset()                    { *m = CSFriendDelete{} }
func (m *CSFriendDelete) String() string            { return proto.CompactTextString(m) }
func (*CSFriendDelete) ProtoMessage()               {}
func (*CSFriendDelete) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{9} }

func (m *CSFriendDelete) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

type SCFriendDelete struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendDelete) Reset()                    { *m = SCFriendDelete{} }
func (m *SCFriendDelete) String() string            { return proto.CompactTextString(m) }
func (*SCFriendDelete) ProtoMessage()               {}
func (*SCFriendDelete) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{10} }

func (m *SCFriendDelete) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

type CSFriendSearch struct {
	Search           *string `protobuf:"bytes,1,req,name=search" json:"search,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSFriendSearch) Reset()                    { *m = CSFriendSearch{} }
func (m *CSFriendSearch) String() string            { return proto.CompactTextString(m) }
func (*CSFriendSearch) ProtoMessage()               {}
func (*CSFriendSearch) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{11} }

func (m *CSFriendSearch) GetSearch() string {
	if m != nil && m.Search != nil {
		return *m.Search
	}
	return ""
}

type SCFriendSearch struct {
	PlayerList       []*PlayerBasicInfo `protobuf:"bytes,1,rep,name=playerList" json:"playerList,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *SCFriendSearch) Reset()                    { *m = SCFriendSearch{} }
func (m *SCFriendSearch) String() string            { return proto.CompactTextString(m) }
func (*SCFriendSearch) ProtoMessage()               {}
func (*SCFriendSearch) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{12} }

func (m *SCFriendSearch) GetPlayerList() []*PlayerBasicInfo {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

type CSFriendGift struct {
	FriendId         *int64  `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	ItemId           *int32  `protobuf:"varint,2,req,name=itemId" json:"itemId,omitempty"`
	Num              *int32  `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
	MsgId            *int32  `protobuf:"varint,4,req,name=msgId" json:"msgId,omitempty"`
	Auto             *int32  `protobuf:"varint,5,req,name=auto" json:"auto,omitempty"`
	MsgContent       *string `protobuf:"bytes,6,opt,name=msgContent" json:"msgContent,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSFriendGift) Reset()                    { *m = CSFriendGift{} }
func (m *CSFriendGift) String() string            { return proto.CompactTextString(m) }
func (*CSFriendGift) ProtoMessage()               {}
func (*CSFriendGift) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{13} }

func (m *CSFriendGift) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *CSFriendGift) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CSFriendGift) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *CSFriendGift) GetMsgId() int32 {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return 0
}

func (m *CSFriendGift) GetAuto() int32 {
	if m != nil && m.Auto != nil {
		return *m.Auto
	}
	return 0
}

func (m *CSFriendGift) GetMsgContent() string {
	if m != nil && m.MsgContent != nil {
		return *m.MsgContent
	}
	return ""
}

type SCFriendGift struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	ItemId           *int32 `protobuf:"varint,2,req,name=itemId" json:"itemId,omitempty"`
	Num              *int32 `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
	MsgId            *int32 `protobuf:"varint,4,req,name=msgId" json:"msgId,omitempty"`
	Auto             *int32 `protobuf:"varint,5,req,name=auto" json:"auto,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendGift) Reset()                    { *m = SCFriendGift{} }
func (m *SCFriendGift) String() string            { return proto.CompactTextString(m) }
func (*SCFriendGift) ProtoMessage()               {}
func (*SCFriendGift) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{14} }

func (m *SCFriendGift) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *SCFriendGift) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *SCFriendGift) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *SCFriendGift) GetMsgId() int32 {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return 0
}

func (m *SCFriendGift) GetAuto() int32 {
	if m != nil && m.Auto != nil {
		return *m.Auto
	}
	return 0
}

type SCFriendGiftRecv struct {
	SendId           *int64  `protobuf:"varint,1,req,name=sendId" json:"sendId,omitempty"`
	ItemId           *int32  `protobuf:"varint,2,req,name=itemId" json:"itemId,omitempty"`
	Num              *int32  `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
	MsgId            *int32  `protobuf:"varint,4,req,name=msgId" json:"msgId,omitempty"`
	MsgContent       *string `protobuf:"bytes,5,opt,name=msgContent" json:"msgContent,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCFriendGiftRecv) Reset()                    { *m = SCFriendGiftRecv{} }
func (m *SCFriendGiftRecv) String() string            { return proto.CompactTextString(m) }
func (*SCFriendGiftRecv) ProtoMessage()               {}
func (*SCFriendGiftRecv) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{15} }

func (m *SCFriendGiftRecv) GetSendId() int64 {
	if m != nil && m.SendId != nil {
		return *m.SendId
	}
	return 0
}

func (m *SCFriendGiftRecv) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *SCFriendGiftRecv) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *SCFriendGiftRecv) GetMsgId() int32 {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return 0
}

func (m *SCFriendGiftRecv) GetMsgContent() string {
	if m != nil && m.MsgContent != nil {
		return *m.MsgContent
	}
	return ""
}

type CSFriendGiftFeedback struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendGiftFeedback) Reset()                    { *m = CSFriendGiftFeedback{} }
func (m *CSFriendGiftFeedback) String() string            { return proto.CompactTextString(m) }
func (*CSFriendGiftFeedback) ProtoMessage()               {}
func (*CSFriendGiftFeedback) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{16} }

func (m *CSFriendGiftFeedback) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

type SCFriendGiftFeedback struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendGiftFeedback) Reset()                    { *m = SCFriendGiftFeedback{} }
func (m *SCFriendGiftFeedback) String() string            { return proto.CompactTextString(m) }
func (*SCFriendGiftFeedback) ProtoMessage()               {}
func (*SCFriendGiftFeedback) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{17} }

func (m *SCFriendGiftFeedback) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

type SCFriendGiftFeedbackRecv struct {
	SendId           *int64 `protobuf:"varint,1,req,name=sendId" json:"sendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendGiftFeedbackRecv) Reset()                    { *m = SCFriendGiftFeedbackRecv{} }
func (m *SCFriendGiftFeedbackRecv) String() string            { return proto.CompactTextString(m) }
func (*SCFriendGiftFeedbackRecv) ProtoMessage()               {}
func (*SCFriendGiftFeedbackRecv) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{18} }

func (m *SCFriendGiftFeedbackRecv) GetSendId() int64 {
	if m != nil && m.SendId != nil {
		return *m.SendId
	}
	return 0
}

type SCFriendPointChange struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	Point            *int32 `protobuf:"varint,2,req,name=point" json:"point,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendPointChange) Reset()                    { *m = SCFriendPointChange{} }
func (m *SCFriendPointChange) String() string            { return proto.CompactTextString(m) }
func (*SCFriendPointChange) ProtoMessage()               {}
func (*SCFriendPointChange) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{19} }

func (m *SCFriendPointChange) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *SCFriendPointChange) GetPoint() int32 {
	if m != nil && m.Point != nil {
		return *m.Point
	}
	return 0
}

type CSFriendRemoveBlack struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendRemoveBlack) Reset()                    { *m = CSFriendRemoveBlack{} }
func (m *CSFriendRemoveBlack) String() string            { return proto.CompactTextString(m) }
func (*CSFriendRemoveBlack) ProtoMessage()               {}
func (*CSFriendRemoveBlack) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{20} }

func (m *CSFriendRemoveBlack) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

type SCFriendRemoveBlack struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	IsFriend         *bool  `protobuf:"varint,2,req,name=isFriend" json:"isFriend,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendRemoveBlack) Reset()                    { *m = SCFriendRemoveBlack{} }
func (m *SCFriendRemoveBlack) String() string            { return proto.CompactTextString(m) }
func (*SCFriendRemoveBlack) ProtoMessage()               {}
func (*SCFriendRemoveBlack) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{21} }

func (m *SCFriendRemoveBlack) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *SCFriendRemoveBlack) GetIsFriend() bool {
	if m != nil && m.IsFriend != nil {
		return *m.IsFriend
	}
	return false
}

type CSFriendInvite struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendInvite) Reset()                    { *m = CSFriendInvite{} }
func (m *CSFriendInvite) String() string            { return proto.CompactTextString(m) }
func (*CSFriendInvite) ProtoMessage()               {}
func (*CSFriendInvite) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{22} }

func (m *CSFriendInvite) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

type SCFriendInvite struct {
	FriendId         *int64 `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	InviteTime       *int64 `protobuf:"varint,2,req,name=inviteTime" json:"inviteTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendInvite) Reset()                    { *m = SCFriendInvite{} }
func (m *SCFriendInvite) String() string            { return proto.CompactTextString(m) }
func (*SCFriendInvite) ProtoMessage()               {}
func (*SCFriendInvite) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{23} }

func (m *SCFriendInvite) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *SCFriendInvite) GetInviteTime() int64 {
	if m != nil && m.InviteTime != nil {
		return *m.InviteTime
	}
	return 0
}

type SCFriendInvitePushPeer struct {
	PlayerBasicInfo  *PlayerBasicInfo `protobuf:"bytes,1,req,name=playerBasicInfo" json:"playerBasicInfo,omitempty"`
	InviteTime       *int64           `protobuf:"varint,2,req,name=inviteTime" json:"inviteTime,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SCFriendInvitePushPeer) Reset()                    { *m = SCFriendInvitePushPeer{} }
func (m *SCFriendInvitePushPeer) String() string            { return proto.CompactTextString(m) }
func (*SCFriendInvitePushPeer) ProtoMessage()               {}
func (*SCFriendInvitePushPeer) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{24} }

func (m *SCFriendInvitePushPeer) GetPlayerBasicInfo() *PlayerBasicInfo {
	if m != nil {
		return m.PlayerBasicInfo
	}
	return nil
}

func (m *SCFriendInvitePushPeer) GetInviteTime() int64 {
	if m != nil && m.InviteTime != nil {
		return *m.InviteTime
	}
	return 0
}

type CSFriendAdd struct {
	Agree            *bool  `protobuf:"varint,1,req,name=agree" json:"agree,omitempty"`
	FriendId         *int64 `protobuf:"varint,2,req,name=friendId" json:"friendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendAdd) Reset()                    { *m = CSFriendAdd{} }
func (m *CSFriendAdd) String() string            { return proto.CompactTextString(m) }
func (*CSFriendAdd) ProtoMessage()               {}
func (*CSFriendAdd) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{25} }

func (m *CSFriendAdd) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

func (m *CSFriendAdd) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

type SCFriendAdd struct {
	Agree            *bool       `protobuf:"varint,1,req,name=agree" json:"agree,omitempty"`
	Friend           *FriendInfo `protobuf:"bytes,2,opt,name=friend" json:"friend,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCFriendAdd) Reset()                    { *m = SCFriendAdd{} }
func (m *SCFriendAdd) String() string            { return proto.CompactTextString(m) }
func (*SCFriendAdd) ProtoMessage()               {}
func (*SCFriendAdd) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{26} }

func (m *SCFriendAdd) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

func (m *SCFriendAdd) GetFriend() *FriendInfo {
	if m != nil {
		return m.Friend
	}
	return nil
}

type SCFriendInviteRefusePushPeer struct {
	FriendId         *int64  `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCFriendInviteRefusePushPeer) Reset()                    { *m = SCFriendInviteRefusePushPeer{} }
func (m *SCFriendInviteRefusePushPeer) String() string            { return proto.CompactTextString(m) }
func (*SCFriendInviteRefusePushPeer) ProtoMessage()               {}
func (*SCFriendInviteRefusePushPeer) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{27} }

func (m *SCFriendInviteRefusePushPeer) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *SCFriendInviteRefusePushPeer) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CSFriendInviteList struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendInviteList) Reset()                    { *m = CSFriendInviteList{} }
func (m *CSFriendInviteList) String() string            { return proto.CompactTextString(m) }
func (*CSFriendInviteList) ProtoMessage()               {}
func (*CSFriendInviteList) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{28} }

type SCFriendInviteList struct {
	InviteList       []*FriendInviteInfo `protobuf:"bytes,1,rep,name=inviteList" json:"inviteList,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *SCFriendInviteList) Reset()                    { *m = SCFriendInviteList{} }
func (m *SCFriendInviteList) String() string            { return proto.CompactTextString(m) }
func (*SCFriendInviteList) ProtoMessage()               {}
func (*SCFriendInviteList) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{29} }

func (m *SCFriendInviteList) GetInviteList() []*FriendInviteInfo {
	if m != nil {
		return m.InviteList
	}
	return nil
}

type CSFriendBatch struct {
	Agree            *bool  `protobuf:"varint,1,req,name=agree" json:"agree,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendBatch) Reset()                    { *m = CSFriendBatch{} }
func (m *CSFriendBatch) String() string            { return proto.CompactTextString(m) }
func (*CSFriendBatch) ProtoMessage()               {}
func (*CSFriendBatch) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{30} }

func (m *CSFriendBatch) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

type SCFriendBatch struct {
	Agree            *bool  `protobuf:"varint,1,req,name=agree" json:"agree,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendBatch) Reset()                    { *m = SCFriendBatch{} }
func (m *SCFriendBatch) String() string            { return proto.CompactTextString(m) }
func (*SCFriendBatch) ProtoMessage()               {}
func (*SCFriendBatch) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{31} }

func (m *SCFriendBatch) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

type SCFriendGiveFlowerLight struct {
	ItemId           *int32   `protobuf:"varint,1,req,name=itemId" json:"itemId,omitempty"`
	PlayerIdList     []int64  `protobuf:"varint,2,rep,name=playerIdList" json:"playerIdList,omitempty"`
	PlayerNameList   []string `protobuf:"bytes,3,rep,name=playerNameList" json:"playerNameList,omitempty"`
	Num              *int32   `protobuf:"varint,4,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SCFriendGiveFlowerLight) Reset()                    { *m = SCFriendGiveFlowerLight{} }
func (m *SCFriendGiveFlowerLight) String() string            { return proto.CompactTextString(m) }
func (*SCFriendGiveFlowerLight) ProtoMessage()               {}
func (*SCFriendGiveFlowerLight) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{32} }

func (m *SCFriendGiveFlowerLight) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *SCFriendGiveFlowerLight) GetPlayerIdList() []int64 {
	if m != nil {
		return m.PlayerIdList
	}
	return nil
}

func (m *SCFriendGiveFlowerLight) GetPlayerNameList() []string {
	if m != nil {
		return m.PlayerNameList
	}
	return nil
}

func (m *SCFriendGiveFlowerLight) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type SCFriendNoticeBroadcase struct {
	NoticeType       *int32  `protobuf:"varint,1,req,name=noticeType" json:"noticeType,omitempty"`
	FriendName       *string `protobuf:"bytes,2,req,name=friendName" json:"friendName,omitempty"`
	FriendRole       *int32  `protobuf:"varint,3,req,name=friendRole" json:"friendRole,omitempty"`
	FriendSex        *int32  `protobuf:"varint,4,req,name=friendSex" json:"friendSex,omitempty"`
	FriendId         *int64  `protobuf:"varint,5,req,name=friendId" json:"friendId,omitempty"`
	Args             *string `protobuf:"bytes,6,req,name=args" json:"args,omitempty"`
	Condition        *int32  `protobuf:"varint,7,req,name=condition" json:"condition,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCFriendNoticeBroadcase) Reset()                    { *m = SCFriendNoticeBroadcase{} }
func (m *SCFriendNoticeBroadcase) String() string            { return proto.CompactTextString(m) }
func (*SCFriendNoticeBroadcase) ProtoMessage()               {}
func (*SCFriendNoticeBroadcase) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{33} }

func (m *SCFriendNoticeBroadcase) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

func (m *SCFriendNoticeBroadcase) GetFriendName() string {
	if m != nil && m.FriendName != nil {
		return *m.FriendName
	}
	return ""
}

func (m *SCFriendNoticeBroadcase) GetFriendRole() int32 {
	if m != nil && m.FriendRole != nil {
		return *m.FriendRole
	}
	return 0
}

func (m *SCFriendNoticeBroadcase) GetFriendSex() int32 {
	if m != nil && m.FriendSex != nil {
		return *m.FriendSex
	}
	return 0
}

func (m *SCFriendNoticeBroadcase) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *SCFriendNoticeBroadcase) GetArgs() string {
	if m != nil && m.Args != nil {
		return *m.Args
	}
	return ""
}

func (m *SCFriendNoticeBroadcase) GetCondition() int32 {
	if m != nil && m.Condition != nil {
		return *m.Condition
	}
	return 0
}

type SCFriendNoticeFeedbackNotice struct {
	NoticeType       *int32  `protobuf:"varint,1,req,name=noticeType" json:"noticeType,omitempty"`
	FeedbackType     *int32  `protobuf:"varint,2,req,name=feedbackType" json:"feedbackType,omitempty"`
	FriendId         *int64  `protobuf:"varint,3,req,name=friendId" json:"friendId,omitempty"`
	FriendName       *string `protobuf:"bytes,4,req,name=friendName" json:"friendName,omitempty"`
	Condition        *int32  `protobuf:"varint,5,req,name=condition" json:"condition,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCFriendNoticeFeedbackNotice) Reset()                    { *m = SCFriendNoticeFeedbackNotice{} }
func (m *SCFriendNoticeFeedbackNotice) String() string            { return proto.CompactTextString(m) }
func (*SCFriendNoticeFeedbackNotice) ProtoMessage()               {}
func (*SCFriendNoticeFeedbackNotice) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{34} }

func (m *SCFriendNoticeFeedbackNotice) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

func (m *SCFriendNoticeFeedbackNotice) GetFeedbackType() int32 {
	if m != nil && m.FeedbackType != nil {
		return *m.FeedbackType
	}
	return 0
}

func (m *SCFriendNoticeFeedbackNotice) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *SCFriendNoticeFeedbackNotice) GetFriendName() string {
	if m != nil && m.FriendName != nil {
		return *m.FriendName
	}
	return ""
}

func (m *SCFriendNoticeFeedbackNotice) GetCondition() int32 {
	if m != nil && m.Condition != nil {
		return *m.Condition
	}
	return 0
}

type CSFriendNoticeFeedback struct {
	NoticeType       *int32 `protobuf:"varint,1,req,name=noticeType" json:"noticeType,omitempty"`
	FeedbackType     *int32 `protobuf:"varint,2,req,name=feedbackType" json:"feedbackType,omitempty"`
	FriendId         *int64 `protobuf:"varint,3,req,name=friendId" json:"friendId,omitempty"`
	Condition        *int32 `protobuf:"varint,4,req,name=condition" json:"condition,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendNoticeFeedback) Reset()                    { *m = CSFriendNoticeFeedback{} }
func (m *CSFriendNoticeFeedback) String() string            { return proto.CompactTextString(m) }
func (*CSFriendNoticeFeedback) ProtoMessage()               {}
func (*CSFriendNoticeFeedback) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{35} }

func (m *CSFriendNoticeFeedback) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

func (m *CSFriendNoticeFeedback) GetFeedbackType() int32 {
	if m != nil && m.FeedbackType != nil {
		return *m.FeedbackType
	}
	return 0
}

func (m *CSFriendNoticeFeedback) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *CSFriendNoticeFeedback) GetCondition() int32 {
	if m != nil && m.Condition != nil {
		return *m.Condition
	}
	return 0
}

type SCFriendNoticeFeedback struct {
	FeedbackType     *int32 `protobuf:"varint,1,req,name=feedbackType" json:"feedbackType,omitempty"`
	Condition        *int32 `protobuf:"varint,2,req,name=condition" json:"condition,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendNoticeFeedback) Reset()                    { *m = SCFriendNoticeFeedback{} }
func (m *SCFriendNoticeFeedback) String() string            { return proto.CompactTextString(m) }
func (*SCFriendNoticeFeedback) ProtoMessage()               {}
func (*SCFriendNoticeFeedback) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{36} }

func (m *SCFriendNoticeFeedback) GetFeedbackType() int32 {
	if m != nil && m.FeedbackType != nil {
		return *m.FeedbackType
	}
	return 0
}

func (m *SCFriendNoticeFeedback) GetCondition() int32 {
	if m != nil && m.Condition != nil {
		return *m.Condition
	}
	return 0
}

type CSFriendNoticeFeedbackRead struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendNoticeFeedbackRead) Reset()                    { *m = CSFriendNoticeFeedbackRead{} }
func (m *CSFriendNoticeFeedbackRead) String() string            { return proto.CompactTextString(m) }
func (*CSFriendNoticeFeedbackRead) ProtoMessage()               {}
func (*CSFriendNoticeFeedbackRead) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{37} }

type SCFriendNoticeFeedbackRead struct {
	FeedbackList     []*FriendFeedback `protobuf:"bytes,1,rep,name=feedbackList" json:"feedbackList,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCFriendNoticeFeedbackRead) Reset()                    { *m = SCFriendNoticeFeedbackRead{} }
func (m *SCFriendNoticeFeedbackRead) String() string            { return proto.CompactTextString(m) }
func (*SCFriendNoticeFeedbackRead) ProtoMessage()               {}
func (*SCFriendNoticeFeedbackRead) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{38} }

func (m *SCFriendNoticeFeedbackRead) GetFeedbackList() []*FriendFeedback {
	if m != nil {
		return m.FeedbackList
	}
	return nil
}

type CSFriendAddRew struct {
	FrNum            *int32 `protobuf:"varint,1,req,name=frNum" json:"frNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendAddRew) Reset()                    { *m = CSFriendAddRew{} }
func (m *CSFriendAddRew) String() string            { return proto.CompactTextString(m) }
func (*CSFriendAddRew) ProtoMessage()               {}
func (*CSFriendAddRew) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{39} }

func (m *CSFriendAddRew) GetFrNum() int32 {
	if m != nil && m.FrNum != nil {
		return *m.FrNum
	}
	return 0
}

type SCFriendAddRew struct {
	FrNum            *int32 `protobuf:"varint,1,req,name=frNum" json:"frNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendAddRew) Reset()                    { *m = SCFriendAddRew{} }
func (m *SCFriendAddRew) String() string            { return proto.CompactTextString(m) }
func (*SCFriendAddRew) ProtoMessage()               {}
func (*SCFriendAddRew) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{40} }

func (m *SCFriendAddRew) GetFrNum() int32 {
	if m != nil && m.FrNum != nil {
		return *m.FrNum
	}
	return 0
}

type SCFriendDummyFriendNumChanged struct {
	DummyFrNum       *int32 `protobuf:"varint,1,req,name=dummyFrNum" json:"dummyFrNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendDummyFriendNumChanged) Reset()                    { *m = SCFriendDummyFriendNumChanged{} }
func (m *SCFriendDummyFriendNumChanged) String() string            { return proto.CompactTextString(m) }
func (*SCFriendDummyFriendNumChanged) ProtoMessage()               {}
func (*SCFriendDummyFriendNumChanged) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{41} }

func (m *SCFriendDummyFriendNumChanged) GetDummyFrNum() int32 {
	if m != nil && m.DummyFrNum != nil {
		return *m.DummyFrNum
	}
	return 0
}

type CSFriendAddAll struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendAddAll) Reset()                    { *m = CSFriendAddAll{} }
func (m *CSFriendAddAll) String() string            { return proto.CompactTextString(m) }
func (*CSFriendAddAll) ProtoMessage()               {}
func (*CSFriendAddAll) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{42} }

type SCFriendAddAll struct {
	InviteAllTime    *int64 `protobuf:"varint,1,req,name=inviteAllTime" json:"inviteAllTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendAddAll) Reset()                    { *m = SCFriendAddAll{} }
func (m *SCFriendAddAll) String() string            { return proto.CompactTextString(m) }
func (*SCFriendAddAll) ProtoMessage()               {}
func (*SCFriendAddAll) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{43} }

func (m *SCFriendAddAll) GetInviteAllTime() int64 {
	if m != nil && m.InviteAllTime != nil {
		return *m.InviteAllTime
	}
	return 0
}

type CSFriendFeedbackAskFor struct {
	ItemId           *int32 `protobuf:"varint,1,req,name=itemId" json:"itemId,omitempty"`
	FriendId         *int64 `protobuf:"varint,2,req,name=friendId" json:"friendId,omitempty"`
	Condition        *int32 `protobuf:"varint,3,req,name=condition" json:"condition,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendFeedbackAskFor) Reset()                    { *m = CSFriendFeedbackAskFor{} }
func (m *CSFriendFeedbackAskFor) String() string            { return proto.CompactTextString(m) }
func (*CSFriendFeedbackAskFor) ProtoMessage()               {}
func (*CSFriendFeedbackAskFor) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{44} }

func (m *CSFriendFeedbackAskFor) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CSFriendFeedbackAskFor) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *CSFriendFeedbackAskFor) GetCondition() int32 {
	if m != nil && m.Condition != nil {
		return *m.Condition
	}
	return 0
}

type SCFriendFeedbackAskFor struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendFeedbackAskFor) Reset()                    { *m = SCFriendFeedbackAskFor{} }
func (m *SCFriendFeedbackAskFor) String() string            { return proto.CompactTextString(m) }
func (*SCFriendFeedbackAskFor) ProtoMessage()               {}
func (*SCFriendFeedbackAskFor) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{45} }

type SCFriendFeedbackAskForNotice struct {
	FriendId         *int64  `protobuf:"varint,1,req,name=friendId" json:"friendId,omitempty"`
	FrName           *string `protobuf:"bytes,2,req,name=frName" json:"frName,omitempty"`
	AllianceName     *string `protobuf:"bytes,3,req,name=allianceName" json:"allianceName,omitempty"`
	ItemId           *int32  `protobuf:"varint,4,req,name=itemId" json:"itemId,omitempty"`
	Sex              *int32  `protobuf:"varint,5,req,name=sex" json:"sex,omitempty"`
	Role             *int32  `protobuf:"varint,6,req,name=role" json:"role,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCFriendFeedbackAskForNotice) Reset()                    { *m = SCFriendFeedbackAskForNotice{} }
func (m *SCFriendFeedbackAskForNotice) String() string            { return proto.CompactTextString(m) }
func (*SCFriendFeedbackAskForNotice) ProtoMessage()               {}
func (*SCFriendFeedbackAskForNotice) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{46} }

func (m *SCFriendFeedbackAskForNotice) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *SCFriendFeedbackAskForNotice) GetFrName() string {
	if m != nil && m.FrName != nil {
		return *m.FrName
	}
	return ""
}

func (m *SCFriendFeedbackAskForNotice) GetAllianceName() string {
	if m != nil && m.AllianceName != nil {
		return *m.AllianceName
	}
	return ""
}

func (m *SCFriendFeedbackAskForNotice) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *SCFriendFeedbackAskForNotice) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *SCFriendFeedbackAskForNotice) GetRole() int32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

type CSFriendFeedbackAskForReply struct {
	IsAgree          *bool  `protobuf:"varint,1,req,name=isAgree" json:"isAgree,omitempty"`
	ItemId           *int32 `protobuf:"varint,2,req,name=itemId" json:"itemId,omitempty"`
	FriendId         *int64 `protobuf:"varint,3,req,name=friendId" json:"friendId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendFeedbackAskForReply) Reset()                    { *m = CSFriendFeedbackAskForReply{} }
func (m *CSFriendFeedbackAskForReply) String() string            { return proto.CompactTextString(m) }
func (*CSFriendFeedbackAskForReply) ProtoMessage()               {}
func (*CSFriendFeedbackAskForReply) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{47} }

func (m *CSFriendFeedbackAskForReply) GetIsAgree() bool {
	if m != nil && m.IsAgree != nil {
		return *m.IsAgree
	}
	return false
}

func (m *CSFriendFeedbackAskForReply) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CSFriendFeedbackAskForReply) GetFriendId() int64 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

type SCFriendFeedbackAskForReply struct {
	IsAgree          *bool  `protobuf:"varint,1,req,name=isAgree" json:"isAgree,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFriendFeedbackAskForReply) Reset()                    { *m = SCFriendFeedbackAskForReply{} }
func (m *SCFriendFeedbackAskForReply) String() string            { return proto.CompactTextString(m) }
func (*SCFriendFeedbackAskForReply) ProtoMessage()               {}
func (*SCFriendFeedbackAskForReply) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{48} }

func (m *SCFriendFeedbackAskForReply) GetIsAgree() bool {
	if m != nil && m.IsAgree != nil {
		return *m.IsAgree
	}
	return false
}

type SCFriendFeedbackAskForReplyNotice struct {
	IsAgree          *bool   `protobuf:"varint,1,req,name=isAgree" json:"isAgree,omitempty"`
	FriendName       *string `protobuf:"bytes,2,req,name=friendName" json:"friendName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCFriendFeedbackAskForReplyNotice) Reset()         { *m = SCFriendFeedbackAskForReplyNotice{} }
func (m *SCFriendFeedbackAskForReplyNotice) String() string { return proto.CompactTextString(m) }
func (*SCFriendFeedbackAskForReplyNotice) ProtoMessage()    {}
func (*SCFriendFeedbackAskForReplyNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor39, []int{49}
}

func (m *SCFriendFeedbackAskForReplyNotice) GetIsAgree() bool {
	if m != nil && m.IsAgree != nil {
		return *m.IsAgree
	}
	return false
}

func (m *SCFriendFeedbackAskForReplyNotice) GetFriendName() string {
	if m != nil && m.FriendName != nil {
		return *m.FriendName
	}
	return ""
}

type CSFriendMarryDevelopLogIncr struct {
	LogType          *int32 `protobuf:"varint,1,req,name=logType" json:"logType,omitempty"`
	LogTime          *int64 `protobuf:"varint,2,req,name=logTime" json:"logTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFriendMarryDevelopLogIncr) Reset()                    { *m = CSFriendMarryDevelopLogIncr{} }
func (m *CSFriendMarryDevelopLogIncr) String() string            { return proto.CompactTextString(m) }
func (*CSFriendMarryDevelopLogIncr) ProtoMessage()               {}
func (*CSFriendMarryDevelopLogIncr) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{50} }

func (m *CSFriendMarryDevelopLogIncr) GetLogType() int32 {
	if m != nil && m.LogType != nil {
		return *m.LogType
	}
	return 0
}

func (m *CSFriendMarryDevelopLogIncr) GetLogTime() int64 {
	if m != nil && m.LogTime != nil {
		return *m.LogTime
	}
	return 0
}

type SCFriendMarryDevelopLogIncr struct {
	LogType          *int32                   `protobuf:"varint,1,req,name=logType" json:"logType,omitempty"`
	LogList          []*FriendMarryDevelopLog `protobuf:"bytes,2,rep,name=logList" json:"logList,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *SCFriendMarryDevelopLogIncr) Reset()                    { *m = SCFriendMarryDevelopLogIncr{} }
func (m *SCFriendMarryDevelopLogIncr) String() string            { return proto.CompactTextString(m) }
func (*SCFriendMarryDevelopLogIncr) ProtoMessage()               {}
func (*SCFriendMarryDevelopLogIncr) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{51} }

func (m *SCFriendMarryDevelopLogIncr) GetLogType() int32 {
	if m != nil && m.LogType != nil {
		return *m.LogType
	}
	return 0
}

func (m *SCFriendMarryDevelopLogIncr) GetLogList() []*FriendMarryDevelopLog {
	if m != nil {
		return m.LogList
	}
	return nil
}

func init() {
	proto.RegisterType((*FriendInfo)(nil), "ui.FriendInfo")
	proto.RegisterType((*FriendInviteInfo)(nil), "ui.FriendInviteInfo")
	proto.RegisterType((*FriendFeedback)(nil), "ui.FriendFeedback")
	proto.RegisterType((*FriendMarryDevelopLog)(nil), "ui.FriendMarryDevelopLog")
	proto.RegisterType((*SCFriendsGet)(nil), "ui.SCFriendsGet")
	proto.RegisterType((*CSRecommentFriendsGet)(nil), "ui.CSRecommentFriendsGet")
	proto.RegisterType((*SCRecommentFriendsGet)(nil), "ui.SCRecommentFriendsGet")
	proto.RegisterType((*CSFriendBlack)(nil), "ui.CSFriendBlack")
	proto.RegisterType((*SCFriendBlack)(nil), "ui.SCFriendBlack")
	proto.RegisterType((*CSFriendDelete)(nil), "ui.CSFriendDelete")
	proto.RegisterType((*SCFriendDelete)(nil), "ui.SCFriendDelete")
	proto.RegisterType((*CSFriendSearch)(nil), "ui.CSFriendSearch")
	proto.RegisterType((*SCFriendSearch)(nil), "ui.SCFriendSearch")
	proto.RegisterType((*CSFriendGift)(nil), "ui.CSFriendGift")
	proto.RegisterType((*SCFriendGift)(nil), "ui.SCFriendGift")
	proto.RegisterType((*SCFriendGiftRecv)(nil), "ui.SCFriendGiftRecv")
	proto.RegisterType((*CSFriendGiftFeedback)(nil), "ui.CSFriendGiftFeedback")
	proto.RegisterType((*SCFriendGiftFeedback)(nil), "ui.SCFriendGiftFeedback")
	proto.RegisterType((*SCFriendGiftFeedbackRecv)(nil), "ui.SCFriendGiftFeedbackRecv")
	proto.RegisterType((*SCFriendPointChange)(nil), "ui.SCFriendPointChange")
	proto.RegisterType((*CSFriendRemoveBlack)(nil), "ui.CSFriendRemoveBlack")
	proto.RegisterType((*SCFriendRemoveBlack)(nil), "ui.SCFriendRemoveBlack")
	proto.RegisterType((*CSFriendInvite)(nil), "ui.CSFriendInvite")
	proto.RegisterType((*SCFriendInvite)(nil), "ui.SCFriendInvite")
	proto.RegisterType((*SCFriendInvitePushPeer)(nil), "ui.SCFriendInvitePushPeer")
	proto.RegisterType((*CSFriendAdd)(nil), "ui.CSFriendAdd")
	proto.RegisterType((*SCFriendAdd)(nil), "ui.SCFriendAdd")
	proto.RegisterType((*SCFriendInviteRefusePushPeer)(nil), "ui.SCFriendInviteRefusePushPeer")
	proto.RegisterType((*CSFriendInviteList)(nil), "ui.CSFriendInviteList")
	proto.RegisterType((*SCFriendInviteList)(nil), "ui.SCFriendInviteList")
	proto.RegisterType((*CSFriendBatch)(nil), "ui.CSFriendBatch")
	proto.RegisterType((*SCFriendBatch)(nil), "ui.SCFriendBatch")
	proto.RegisterType((*SCFriendGiveFlowerLight)(nil), "ui.SCFriendGiveFlowerLight")
	proto.RegisterType((*SCFriendNoticeBroadcase)(nil), "ui.SCFriendNoticeBroadcase")
	proto.RegisterType((*SCFriendNoticeFeedbackNotice)(nil), "ui.SCFriendNoticeFeedbackNotice")
	proto.RegisterType((*CSFriendNoticeFeedback)(nil), "ui.CSFriendNoticeFeedback")
	proto.RegisterType((*SCFriendNoticeFeedback)(nil), "ui.SCFriendNoticeFeedback")
	proto.RegisterType((*CSFriendNoticeFeedbackRead)(nil), "ui.CSFriendNoticeFeedbackRead")
	proto.RegisterType((*SCFriendNoticeFeedbackRead)(nil), "ui.SCFriendNoticeFeedbackRead")
	proto.RegisterType((*CSFriendAddRew)(nil), "ui.CSFriendAddRew")
	proto.RegisterType((*SCFriendAddRew)(nil), "ui.SCFriendAddRew")
	proto.RegisterType((*SCFriendDummyFriendNumChanged)(nil), "ui.SCFriendDummyFriendNumChanged")
	proto.RegisterType((*CSFriendAddAll)(nil), "ui.CSFriendAddAll")
	proto.RegisterType((*SCFriendAddAll)(nil), "ui.SCFriendAddAll")
	proto.RegisterType((*CSFriendFeedbackAskFor)(nil), "ui.CSFriendFeedbackAskFor")
	proto.RegisterType((*SCFriendFeedbackAskFor)(nil), "ui.SCFriendFeedbackAskFor")
	proto.RegisterType((*SCFriendFeedbackAskForNotice)(nil), "ui.SCFriendFeedbackAskForNotice")
	proto.RegisterType((*CSFriendFeedbackAskForReply)(nil), "ui.CSFriendFeedbackAskForReply")
	proto.RegisterType((*SCFriendFeedbackAskForReply)(nil), "ui.SCFriendFeedbackAskForReply")
	proto.RegisterType((*SCFriendFeedbackAskForReplyNotice)(nil), "ui.SCFriendFeedbackAskForReplyNotice")
	proto.RegisterType((*CSFriendMarryDevelopLogIncr)(nil), "ui.CSFriendMarryDevelopLogIncr")
	proto.RegisterType((*SCFriendMarryDevelopLogIncr)(nil), "ui.SCFriendMarryDevelopLogIncr")
}

func init() { proto.RegisterFile("friend.proto", fileDescriptor39) }

var fileDescriptor39 = []byte{
	// 1147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcf, 0x6f, 0x1a, 0x47,
	0x14, 0xd6, 0x82, 0x71, 0xe0, 0x19, 0x13, 0xb2, 0xc6, 0xce, 0xd6, 0x49, 0x53, 0x3c, 0x17, 0xa3,
	0xa8, 0xe2, 0x90, 0x4a, 0x91, 0x22, 0x55, 0x69, 0x31, 0x29, 0x29, 0x52, 0x62, 0x21, 0xc8, 0x29,
	0x3d, 0xad, 0x77, 0x1f, 0xb0, 0xf2, 0xfe, 0x40, 0xb3, 0x0b, 0x36, 0xa7, 0xaa, 0x7f, 0x47, 0xef,
	0x3d, 0xf4, 0xaf, 0xac, 0x66, 0x66, 0x67, 0x67, 0x77, 0x19, 0xdc, 0xa8, 0xad, 0x7a, 0x83, 0x99,
	0x6f, 0xbf, 0xf7, 0xbd, 0x37, 0xef, 0x17, 0x34, 0xe7, 0xd4, 0xc3, 0xd0, 0xed, 0xaf, 0x68, 0x94,
	0x44, 0x66, 0x65, 0xed, 0x9d, 0x37, 0x57, 0xbe, 0xbd, 0x45, 0x2a, 0x4e, 0xc8, 0x2f, 0x00, 0x23,
	0x8e, 0x18, 0x87, 0xf3, 0xc8, 0x6c, 0x43, 0x5d, 0xe0, 0xc7, 0xae, 0x65, 0x74, 0x2b, 0xbd, 0xaa,
	0x79, 0x0c, 0xb5, 0x55, 0xe4, 0x85, 0x89, 0x55, 0xe9, 0x56, 0x7a, 0x35, 0xf3, 0x5b, 0x78, 0x2c,
	0x3e, 0xbf, 0xb2, 0x63, 0xcf, 0x61, 0xdf, 0x58, 0xd5, 0x6e, 0xa5, 0x77, 0xf4, 0xea, 0xa4, 0xbf,
	0xf6, 0xfa, 0x93, 0xe2, 0x15, 0xf9, 0x15, 0xda, 0x92, 0x7c, 0xe3, 0x25, 0xc8, 0x4d, 0x98, 0x00,
	0x1e, 0xff, 0xf7, 0xc9, 0x0b, 0x30, 0x35, 0xd2, 0x86, 0xba, 0x38, 0x1b, 0xbb, 0xdc, 0x4e, 0xd5,
	0x6c, 0xc2, 0x41, 0x68, 0x07, 0xc8, 0xc9, 0x1b, 0x4c, 0xc4, 0x3c, 0xa2, 0x0e, 0x5a, 0x07, 0xf2,
	0x92, 0x46, 0x3e, 0x5a, 0x35, 0x2e, 0xe9, 0x08, 0xaa, 0x31, 0xde, 0x5b, 0x87, 0xfc, 0xcf, 0x31,
	0xd4, 0x7c, 0xdc, 0xa0, 0x6f, 0x3d, 0x62, 0x7f, 0x49, 0x0c, 0x2d, 0x21, 0x60, 0x84, 0xe8, 0xde,
	0xd8, 0xce, 0x2d, 0x33, 0x1f, 0x46, 0x89, 0xe7, 0xe0, 0xa7, 0xed, 0x4a, 0x98, 0xaf, 0x99, 0x1d,
	0x68, 0xce, 0xd3, 0x7b, 0x7e, 0x2a, 0x5c, 0xcd, 0xc7, 0xa2, 0xca, 0xed, 0x9a, 0x00, 0xe2, 0xe4,
	0x9a, 0x49, 0x3b, 0xe0, 0xd2, 0x9e, 0x40, 0xc3, 0x89, 0x42, 0xd7, 0x4b, 0xbc, 0x28, 0x14, 0x82,
	0xc8, 0x9f, 0x06, 0x9c, 0x0a, 0xab, 0x1f, 0x6d, 0x4a, 0xb7, 0xef, 0x98, 0x9e, 0x68, 0xf5, 0x21,
	0x5a, 0x30, 0x02, 0x87, 0xa2, 0x5d, 0xf6, 0x3d, 0x96, 0x94, 0x15, 0x4e, 0xd9, 0x86, 0x3a, 0x45,
	0x67, 0x73, 0xad, 0xfc, 0x6f, 0xc1, 0xa1, 0x97, 0x60, 0x30, 0x76, 0xb9, 0xd1, 0x9a, 0xf9, 0x18,
	0x1e, 0xb1, 0xff, 0xd7, 0xeb, 0x20, 0x8d, 0x41, 0x1b, 0xea, 0xce, 0xd2, 0xa6, 0xfc, 0x44, 0x04,
	0xc2, 0x04, 0x70, 0x85, 0xe1, 0x9f, 0xee, 0x57, 0x22, 0x1a, 0xdc, 0x7c, 0x14, 0x26, 0x78, 0x9f,
	0xcc, 0x12, 0x6a, 0xd5, 0x19, 0x35, 0xf9, 0xc3, 0x80, 0xe6, 0x6c, 0x28, 0xe4, 0xc6, 0xef, 0x31,
	0x31, 0x89, 0x74, 0xf2, 0x83, 0x17, 0x27, 0x96, 0xd1, 0xad, 0xf6, 0x8e, 0x5e, 0xb5, 0xd8, 0xe3,
	0xe6, 0xd2, 0xe4, 0x02, 0x1a, 0x37, 0xbe, 0xed, 0xdc, 0x72, 0x48, 0x45, 0x0b, 0xe9, 0xa9, 0x98,
	0x72, 0x54, 0x95, 0xa3, 0x4c, 0x85, 0xca, 0x5e, 0xe4, 0x09, 0x34, 0x28, 0xde, 0x4d, 0xd1, 0x89,
	0x28, 0xf3, 0xaf, 0x9a, 0x8a, 0x5f, 0x07, 0xc1, 0x76, 0x44, 0x33, 0x17, 0xc9, 0x53, 0x38, 0x1d,
	0xce, 0x18, 0x2a, 0x08, 0x30, 0x4c, 0x94, 0x60, 0xf2, 0x23, 0x9c, 0xce, 0x86, 0x9a, 0x0b, 0xf3,
	0x12, 0x40, 0xe4, 0x6a, 0xce, 0x13, 0x6d, 0x9a, 0x5e, 0xc0, 0xf1, 0x70, 0x26, 0x3e, 0xbc, 0x62,
	0x6e, 0xed, 0x96, 0x01, 0x83, 0xc8, 0x28, 0xed, 0x83, 0x10, 0x68, 0x49, 0x96, 0x77, 0xe8, 0x63,
	0x82, 0x7a, 0x8c, 0xa4, 0xd9, 0x8b, 0xe9, 0x2a, 0x9e, 0x19, 0xda, 0xd4, 0x59, 0xb2, 0xe7, 0x8f,
	0xf9, 0x2f, 0x8e, 0x68, 0x90, 0x37, 0x8a, 0x25, 0x45, 0x7c, 0xb1, 0xab, 0x21, 0x34, 0x25, 0xf9,
	0x7b, 0x6f, 0x9e, 0x68, 0x0a, 0x5e, 0xe5, 0x5a, 0x45, 0x96, 0x57, 0xb8, 0x0e, 0x78, 0x22, 0xf2,
	0xf2, 0x0a, 0xe2, 0x45, 0x96, 0x87, 0x4d, 0x38, 0xb0, 0xd7, 0x49, 0x94, 0x26, 0xa1, 0x09, 0x10,
	0xc4, 0x8b, 0x21, 0xcb, 0xb0, 0x30, 0xb1, 0x0e, 0xbb, 0x46, 0xaf, 0x41, 0x3e, 0xab, 0xec, 0xfa,
	0xaf, 0xed, 0x91, 0x1b, 0x68, 0xe7, 0xb9, 0xa7, 0xe8, 0x6c, 0x44, 0xa8, 0xfe, 0x21, 0x7b, 0x51,
	0x7f, 0x8d, 0xeb, 0xef, 0x41, 0x27, 0x1f, 0xaf, 0x2c, 0x69, 0x77, 0x9f, 0xad, 0x07, 0x9d, 0xbc,
	0x9a, 0x07, 0x90, 0x2f, 0xc1, 0xd2, 0x21, 0x75, 0xfa, 0xc9, 0x6b, 0x38, 0x91, 0xd8, 0x09, 0x6b,
	0xc3, 0xc3, 0xa5, 0x1d, 0x2e, 0xf0, 0x6f, 0xfb, 0x34, 0xb9, 0x84, 0x13, 0xa9, 0x7b, 0x8a, 0x41,
	0xb4, 0xc1, 0x7d, 0x59, 0xfb, 0x46, 0x19, 0x78, 0x10, 0xc8, 0x7b, 0x74, 0x2c, 0x80, 0xdc, 0x46,
	0x3d, 0x9f, 0xf0, 0xa2, 0xbf, 0x6b, 0xe8, 0x5f, 0xab, 0x54, 0xdd, 0x87, 0x29, 0x4d, 0x04, 0xde,
	0xff, 0xc9, 0x67, 0x38, 0x2b, 0x7e, 0x37, 0x59, 0xc7, 0xcb, 0x09, 0x22, 0xd5, 0x4d, 0x20, 0x63,
	0xef, 0x04, 0xd2, 0x72, 0xf7, 0xe1, 0x48, 0xea, 0x1e, 0xb8, 0x2e, 0x8b, 0x9c, 0xbd, 0xa0, 0x28,
	0xfa, 0x71, 0xbd, 0xa0, 0x4f, 0xe0, 0xbf, 0x87, 0x23, 0xa9, 0x45, 0x83, 0x7f, 0x01, 0x87, 0x73,
	0x19, 0x15, 0x63, 0xb7, 0x11, 0x92, 0xb7, 0xf0, 0xbc, 0xe8, 0xc9, 0x14, 0xe7, 0xeb, 0x58, 0xf9,
	0xb3, 0x1b, 0x0f, 0x39, 0xfb, 0xf8, 0x34, 0x20, 0x1d, 0x30, 0x8b, 0x51, 0x66, 0x25, 0x4e, 0xde,
	0x82, 0x59, 0x64, 0x65, 0xa7, 0x66, 0x4f, 0x7a, 0x9b, 0x6b, 0x03, 0x9d, 0xbc, 0x1e, 0x39, 0x85,
	0xc9, 0x8b, 0x5c, 0xcb, 0xb3, 0x13, 0x67, 0x59, 0xf2, 0x8a, 0xdd, 0x67, 0xfd, 0x4e, 0x77, 0xef,
	0xc2, 0x53, 0x95, 0xc3, 0x1b, 0x1c, 0xf9, 0xd1, 0x1d, 0x6b, 0x3e, 0x8b, 0x65, 0x92, 0x2b, 0xb9,
	0x6c, 0xba, 0x8a, 0x07, 0x1b, 0xbb, 0xd9, 0xbc, 0xa8, 0x9a, 0x67, 0xd0, 0x12, 0xa7, 0x6c, 0xcc,
	0x65, 0x13, 0xa2, 0x21, 0x0b, 0x94, 0x57, 0x24, 0xf9, 0xdd, 0x50, 0x66, 0xae, 0xf9, 0xd4, 0xbe,
	0xa2, 0x91, 0xed, 0x3a, 0x76, 0x8c, 0xda, 0x41, 0x5e, 0x1c, 0xd0, 0x62, 0x9a, 0x66, 0x67, 0x53,
	0xb6, 0x32, 0x88, 0xc2, 0x7f, 0x02, 0x8d, 0x79, 0xda, 0x3e, 0xef, 0xd3, 0xe2, 0xcf, 0x3f, 0x43,
	0x4d, 0x3e, 0x83, 0x4d, 0x17, 0x31, 0x9f, 0xa7, 0xa5, 0x39, 0x2f, 0x96, 0x8b, 0xdf, 0x0c, 0xf5,
	0xb4, 0x42, 0x9d, 0x2c, 0x65, 0xf1, 0xef, 0xff, 0xd8, 0x35, 0x16, 0x70, 0x26, 0xdf, 0xb1, 0x28,
	0xe1, 0x5f, 0x19, 0x2f, 0x18, 0x12, 0x4f, 0x31, 0x50, 0x05, 0x59, 0x32, 0x54, 0x26, 0x35, 0x64,
	0x88, 0x15, 0x85, 0xe8, 0x49, 0xcf, 0xe1, 0x5c, 0xaf, 0x75, 0x8a, 0xb6, 0x4b, 0x46, 0x70, 0xae,
	0x37, 0xc0, 0x6e, 0x77, 0xd6, 0x09, 0x63, 0xdf, 0x3a, 0x41, 0xbe, 0x51, 0x5d, 0x69, 0xe0, 0xba,
	0x53, 0xbc, 0xe3, 0xdb, 0x23, 0x5f, 0x24, 0xb8, 0x32, 0x06, 0xc8, 0x95, 0xb3, 0x06, 0xf0, 0x1d,
	0x7c, 0x9d, 0x0d, 0x69, 0xb1, 0x85, 0x70, 0x51, 0xeb, 0x40, 0x34, 0x5f, 0xb7, 0xb4, 0x9e, 0x88,
	0x8f, 0xda, 0x05, 0xb3, 0x03, 0xdf, 0x27, 0x97, 0x05, 0x3b, 0x03, 0xdf, 0x37, 0x4f, 0xe1, 0x58,
	0x94, 0xe7, 0xc0, 0xf7, 0xd5, 0x06, 0x48, 0x3e, 0xaa, 0x37, 0x94, 0x5e, 0x0c, 0xe2, 0xdb, 0x51,
	0x44, 0x77, 0x4a, 0x69, 0xa7, 0x37, 0x15, 0xc3, 0xcc, 0x93, 0x9b, 0x58, 0xea, 0xa5, 0x8a, 0x74,
	0x85, 0x84, 0x2d, 0x5e, 0xa5, 0x09, 0xab, 0x9d, 0xce, 0x73, 0x9a, 0xab, 0xa6, 0x0e, 0x34, 0x6d,
	0xdf, 0xf7, 0xec, 0xd0, 0xc1, 0x07, 0xf6, 0xd3, 0x74, 0x25, 0xaf, 0xc9, 0xa1, 0xcd, 0xb7, 0x75,
	0xbe, 0x97, 0x92, 0x09, 0x3c, 0xd3, 0x3b, 0x3b, 0xc5, 0x95, 0xbf, 0xe5, 0x9b, 0x6d, 0x3c, 0xc8,
	0xb5, 0xd7, 0xf2, 0x00, 0xdf, 0x49, 0x56, 0xd2, 0x87, 0x67, 0x7a, 0xa7, 0xf4, 0x8c, 0xe4, 0x67,
	0xb8, 0x78, 0x00, 0x9f, 0x46, 0x62, 0x47, 0x87, 0xa6, 0xb5, 0x90, 0x1f, 0x94, 0x2f, 0xa5, 0x4d,
	0x7f, 0x1c, 0x3a, 0x94, 0x71, 0xf8, 0xd1, 0x22, 0x57, 0x13, 0xe9, 0x41, 0x7e, 0xca, 0x65, 0xd2,
	0xbf, 0x88, 0xe0, 0x25, 0x3f, 0xc8, 0x6d, 0xdd, 0x5f, 0xa9, 0x02, 0x28, 0x11, 0xfc, 0x15, 0x00,
	0x00, 0xff, 0xff, 0x9c, 0xf6, 0xbc, 0x6e, 0xf9, 0x0d, 0x00, 0x00,
}
