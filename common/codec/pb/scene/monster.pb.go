// Code generated by protoc-gen-go. DO NOT EDIT.
// source: monster.proto

package scene

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SceneMonsterData struct {
	Uid              *int64            `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	TempID           *int32            `protobuf:"varint,2,req,name=tempID" json:"tempID,omitempty"`
	CurPos           *Position         `protobuf:"bytes,3,req,name=curPos" json:"curPos,omitempty"`
	Angle            *float32          `protobuf:"fixed32,5,req,name=angle" json:"angle,omitempty"`
	Hp               *int64            `protobuf:"varint,6,req,name=hp" json:"hp,omitempty"`
	HpMax            *int64            `protobuf:"varint,7,req,name=hpMax" json:"hpMax,omitempty"`
	BuffList         []*ObjectBuffData `protobuf:"bytes,8,rep,name=buffList" json:"buffList,omitempty"`
	Enemy            *bool             `protobuf:"varint,9,req,name=enemy" json:"enemy,omitempty"`
	Name             *string           `protobuf:"bytes,10,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SceneMonsterData) Reset()                    { *m = SceneMonsterData{} }
func (m *SceneMonsterData) String() string            { return proto.CompactTextString(m) }
func (*SceneMonsterData) ProtoMessage()               {}
func (*SceneMonsterData) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *SceneMonsterData) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *SceneMonsterData) GetTempID() int32 {
	if m != nil && m.TempID != nil {
		return *m.TempID
	}
	return 0
}

func (m *SceneMonsterData) GetCurPos() *Position {
	if m != nil {
		return m.CurPos
	}
	return nil
}

func (m *SceneMonsterData) GetAngle() float32 {
	if m != nil && m.Angle != nil {
		return *m.Angle
	}
	return 0
}

func (m *SceneMonsterData) GetHp() int64 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *SceneMonsterData) GetHpMax() int64 {
	if m != nil && m.HpMax != nil {
		return *m.HpMax
	}
	return 0
}

func (m *SceneMonsterData) GetBuffList() []*ObjectBuffData {
	if m != nil {
		return m.BuffList
	}
	return nil
}

func (m *SceneMonsterData) GetEnemy() bool {
	if m != nil && m.Enemy != nil {
		return *m.Enemy
	}
	return false
}

func (m *SceneMonsterData) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*SceneMonsterData)(nil), "scene.SceneMonsterData")
}

func init() { proto.RegisterFile("monster.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8e, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xe9, 0xc4, 0x8d, 0xe9, 0xa4, 0x51, 0x59, 0x10, 0x86, 0x5e, 0x5c, 0xbc, 0xb8, 0xa7,
	0x1c, 0xfa, 0x08, 0xd2, 0x8b, 0x60, 0xb1, 0xe0, 0x13, 0x6c, 0xe3, 0xc4, 0x46, 0xdc, 0x9d, 0x90,
	0xdd, 0x80, 0xbe, 0x9d, 0x8f, 0x26, 0x49, 0x7a, 0x9b, 0x19, 0xe6, 0xff, 0xfe, 0x0f, 0x2b, 0x2f,
	0x21, 0x26, 0x1e, 0xea, 0x7e, 0x90, 0x24, 0x5a, 0xc5, 0x86, 0x03, 0x6f, 0x37, 0x8d, 0x78, 0x2f,
	0x61, 0x39, 0x6e, 0xf1, 0x34, 0xb6, 0xed, 0x32, 0x3f, 0xfe, 0xad, 0xf0, 0xee, 0x7d, 0xfa, 0x39,
	0x2c, 0xb9, 0xbd, 0x4b, 0x4e, 0x97, 0x98, 0x8d, 0xdd, 0x07, 0xad, 0x0c, 0xd8, 0x4c, 0xdf, 0x60,
	0x9e, 0xd8, 0xf7, 0x2f, 0x7b, 0x02, 0x03, 0x56, 0xe9, 0x07, 0xcc, 0x9b, 0x71, 0x38, 0x4a, 0xa4,
	0xcc, 0x80, 0x2d, 0x77, 0xb7, 0xf5, 0xdc, 0x51, 0x1f, 0x25, 0x76, 0xa9, 0x93, 0xa0, 0x2b, 0x54,
	0x2e, 0x7c, 0x7e, 0x33, 0x29, 0x03, 0x16, 0x34, 0x22, 0x9c, 0x7b, 0xca, 0x67, 0x56, 0x85, 0xea,
	0xdc, 0x1f, 0xdc, 0x0f, 0x5d, 0xcf, 0xeb, 0x13, 0x16, 0x93, 0xca, 0x6b, 0x17, 0x13, 0x15, 0x26,
	0xb3, 0xe5, 0xee, 0xfe, 0x02, 0x7b, 0x3b, 0x7d, 0x71, 0x93, 0x9e, 0xc7, 0xb6, 0x9d, 0x85, 0x2a,
	0x54, 0x1c, 0xd8, 0xff, 0xd2, 0xda, 0x80, 0x2d, 0xf4, 0x06, 0xaf, 0x82, 0xf3, 0x4c, 0x68, 0xc0,
	0xae, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x65, 0x40, 0xd3, 0x31, 0xf3, 0x00, 0x00, 0x00,
}
