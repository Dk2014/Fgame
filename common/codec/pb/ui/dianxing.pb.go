// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dianxing.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DianXingInfo struct {
	XingPu           *int32 `protobuf:"varint,1,req,name=xingPu" json:"xingPu,omitempty"`
	Level            *int32 `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Bless            *int32 `protobuf:"varint,3,opt,name=bless" json:"bless,omitempty"`
	BlessTime        *int64 `protobuf:"varint,4,opt,name=blessTime" json:"blessTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DianXingInfo) Reset()                    { *m = DianXingInfo{} }
func (m *DianXingInfo) String() string            { return proto.CompactTextString(m) }
func (*DianXingInfo) ProtoMessage()               {}
func (*DianXingInfo) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{0} }

func (m *DianXingInfo) GetXingPu() int32 {
	if m != nil && m.XingPu != nil {
		return *m.XingPu
	}
	return 0
}

func (m *DianXingInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *DianXingInfo) GetBless() int32 {
	if m != nil && m.Bless != nil {
		return *m.Bless
	}
	return 0
}

func (m *DianXingInfo) GetBlessTime() int64 {
	if m != nil && m.BlessTime != nil {
		return *m.BlessTime
	}
	return 0
}

type JieFengInfo struct {
	Level            *int32 `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	Bless            *int32 `protobuf:"varint,2,opt,name=bless" json:"bless,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *JieFengInfo) Reset()                    { *m = JieFengInfo{} }
func (m *JieFengInfo) String() string            { return proto.CompactTextString(m) }
func (*JieFengInfo) ProtoMessage()               {}
func (*JieFengInfo) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{1} }

func (m *JieFengInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *JieFengInfo) GetBless() int32 {
	if m != nil && m.Bless != nil {
		return *m.Bless
	}
	return 0
}

type CSDianxingGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSDianxingGet) Reset()                    { *m = CSDianxingGet{} }
func (m *CSDianxingGet) String() string            { return proto.CompactTextString(m) }
func (*CSDianxingGet) ProtoMessage()               {}
func (*CSDianxingGet) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{2} }

type SCDianxingGet struct {
	DianXingInfo     *DianXingInfo `protobuf:"bytes,1,req,name=dianXingInfo" json:"dianXingInfo,omitempty"`
	JieFengInfo      *JieFengInfo  `protobuf:"bytes,2,req,name=jieFengInfo" json:"jieFengInfo,omitempty"`
	XingChenNum      *int64        `protobuf:"varint,3,req,name=xingChenNum" json:"xingChenNum,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SCDianxingGet) Reset()                    { *m = SCDianxingGet{} }
func (m *SCDianxingGet) String() string            { return proto.CompactTextString(m) }
func (*SCDianxingGet) ProtoMessage()               {}
func (*SCDianxingGet) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{3} }

func (m *SCDianxingGet) GetDianXingInfo() *DianXingInfo {
	if m != nil {
		return m.DianXingInfo
	}
	return nil
}

func (m *SCDianxingGet) GetJieFengInfo() *JieFengInfo {
	if m != nil {
		return m.JieFengInfo
	}
	return nil
}

func (m *SCDianxingGet) GetXingChenNum() int64 {
	if m != nil && m.XingChenNum != nil {
		return *m.XingChenNum
	}
	return 0
}

type SCDianxingXingchenVary struct {
	XingChenNum      *int64 `protobuf:"varint,1,req,name=xingChenNum" json:"xingChenNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCDianxingXingchenVary) Reset()                    { *m = SCDianxingXingchenVary{} }
func (m *SCDianxingXingchenVary) String() string            { return proto.CompactTextString(m) }
func (*SCDianxingXingchenVary) ProtoMessage()               {}
func (*SCDianxingXingchenVary) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{4} }

func (m *SCDianxingXingchenVary) GetXingChenNum() int64 {
	if m != nil && m.XingChenNum != nil {
		return *m.XingChenNum
	}
	return 0
}

type CSDianxingAdvanced struct {
	BuyFlag          *bool  `protobuf:"varint,1,req,name=buyFlag" json:"buyFlag,omitempty"`
	FuFlag           *bool  `protobuf:"varint,2,req,name=fuFlag" json:"fuFlag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSDianxingAdvanced) Reset()                    { *m = CSDianxingAdvanced{} }
func (m *CSDianxingAdvanced) String() string            { return proto.CompactTextString(m) }
func (*CSDianxingAdvanced) ProtoMessage()               {}
func (*CSDianxingAdvanced) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{5} }

func (m *CSDianxingAdvanced) GetBuyFlag() bool {
	if m != nil && m.BuyFlag != nil {
		return *m.BuyFlag
	}
	return false
}

func (m *CSDianxingAdvanced) GetFuFlag() bool {
	if m != nil && m.FuFlag != nil {
		return *m.FuFlag
	}
	return false
}

type SCDianxingAdvanced struct {
	DianXingInfo     *DianXingInfo `protobuf:"bytes,1,req,name=dianXingInfo" json:"dianXingInfo,omitempty"`
	IsDouble         *bool         `protobuf:"varint,2,opt,name=isDouble,def=0" json:"isDouble,omitempty"`
	AdvancedType     *int32        `protobuf:"varint,3,req,name=advancedType" json:"advancedType,omitempty"`
	XingChenNum      *int64        `protobuf:"varint,4,req,name=xingChenNum" json:"xingChenNum,omitempty"`
	BuyFlag          *bool         `protobuf:"varint,5,opt,name=buyFlag,def=0" json:"buyFlag,omitempty"`
	FuFlag           *bool         `protobuf:"varint,6,opt,name=fuFlag,def=0" json:"fuFlag,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SCDianxingAdvanced) Reset()                    { *m = SCDianxingAdvanced{} }
func (m *SCDianxingAdvanced) String() string            { return proto.CompactTextString(m) }
func (*SCDianxingAdvanced) ProtoMessage()               {}
func (*SCDianxingAdvanced) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{6} }

const Default_SCDianxingAdvanced_IsDouble bool = false
const Default_SCDianxingAdvanced_BuyFlag bool = false
const Default_SCDianxingAdvanced_FuFlag bool = false

func (m *SCDianxingAdvanced) GetDianXingInfo() *DianXingInfo {
	if m != nil {
		return m.DianXingInfo
	}
	return nil
}

func (m *SCDianxingAdvanced) GetIsDouble() bool {
	if m != nil && m.IsDouble != nil {
		return *m.IsDouble
	}
	return Default_SCDianxingAdvanced_IsDouble
}

func (m *SCDianxingAdvanced) GetAdvancedType() int32 {
	if m != nil && m.AdvancedType != nil {
		return *m.AdvancedType
	}
	return 0
}

func (m *SCDianxingAdvanced) GetXingChenNum() int64 {
	if m != nil && m.XingChenNum != nil {
		return *m.XingChenNum
	}
	return 0
}

func (m *SCDianxingAdvanced) GetBuyFlag() bool {
	if m != nil && m.BuyFlag != nil {
		return *m.BuyFlag
	}
	return Default_SCDianxingAdvanced_BuyFlag
}

func (m *SCDianxingAdvanced) GetFuFlag() bool {
	if m != nil && m.FuFlag != nil {
		return *m.FuFlag
	}
	return Default_SCDianxingAdvanced_FuFlag
}

type CSDianxingJiefengAdvanced struct {
	BuyFlag          *bool  `protobuf:"varint,1,req,name=buyFlag" json:"buyFlag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSDianxingJiefengAdvanced) Reset()                    { *m = CSDianxingJiefengAdvanced{} }
func (m *CSDianxingJiefengAdvanced) String() string            { return proto.CompactTextString(m) }
func (*CSDianxingJiefengAdvanced) ProtoMessage()               {}
func (*CSDianxingJiefengAdvanced) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{7} }

func (m *CSDianxingJiefengAdvanced) GetBuyFlag() bool {
	if m != nil && m.BuyFlag != nil {
		return *m.BuyFlag
	}
	return false
}

type SCDianxingJiefengAdvanced struct {
	JieFengInfo      *JieFengInfo `protobuf:"bytes,1,req,name=jieFengInfo" json:"jieFengInfo,omitempty"`
	IsDouble         *bool        `protobuf:"varint,2,opt,name=isDouble,def=0" json:"isDouble,omitempty"`
	AdvancedType     *int32       `protobuf:"varint,3,req,name=advancedType" json:"advancedType,omitempty"`
	BuyFlag          *bool        `protobuf:"varint,4,opt,name=buyFlag,def=0" json:"buyFlag,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SCDianxingJiefengAdvanced) Reset()                    { *m = SCDianxingJiefengAdvanced{} }
func (m *SCDianxingJiefengAdvanced) String() string            { return proto.CompactTextString(m) }
func (*SCDianxingJiefengAdvanced) ProtoMessage()               {}
func (*SCDianxingJiefengAdvanced) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{8} }

const Default_SCDianxingJiefengAdvanced_IsDouble bool = false
const Default_SCDianxingJiefengAdvanced_BuyFlag bool = false

func (m *SCDianxingJiefengAdvanced) GetJieFengInfo() *JieFengInfo {
	if m != nil {
		return m.JieFengInfo
	}
	return nil
}

func (m *SCDianxingJiefengAdvanced) GetIsDouble() bool {
	if m != nil && m.IsDouble != nil {
		return *m.IsDouble
	}
	return Default_SCDianxingJiefengAdvanced_IsDouble
}

func (m *SCDianxingJiefengAdvanced) GetAdvancedType() int32 {
	if m != nil && m.AdvancedType != nil {
		return *m.AdvancedType
	}
	return 0
}

func (m *SCDianxingJiefengAdvanced) GetBuyFlag() bool {
	if m != nil && m.BuyFlag != nil {
		return *m.BuyFlag
	}
	return Default_SCDianxingJiefengAdvanced_BuyFlag
}

type DianXingCacheInfo struct {
	XingPu           *int32 `protobuf:"varint,1,req,name=xingPu" json:"xingPu,omitempty"`
	Level            *int32 `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	JieFengLev       *int32 `protobuf:"varint,3,req,name=jieFengLev" json:"jieFengLev,omitempty"`
	JieFengBless     *int32 `protobuf:"varint,4,req,name=jieFengBless" json:"jieFengBless,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DianXingCacheInfo) Reset()                    { *m = DianXingCacheInfo{} }
func (m *DianXingCacheInfo) String() string            { return proto.CompactTextString(m) }
func (*DianXingCacheInfo) ProtoMessage()               {}
func (*DianXingCacheInfo) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{9} }

func (m *DianXingCacheInfo) GetXingPu() int32 {
	if m != nil && m.XingPu != nil {
		return *m.XingPu
	}
	return 0
}

func (m *DianXingCacheInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *DianXingCacheInfo) GetJieFengLev() int32 {
	if m != nil && m.JieFengLev != nil {
		return *m.JieFengLev
	}
	return 0
}

func (m *DianXingCacheInfo) GetJieFengBless() int32 {
	if m != nil && m.JieFengBless != nil {
		return *m.JieFengBless
	}
	return 0
}

func init() {
	proto.RegisterType((*DianXingInfo)(nil), "ui.DianXingInfo")
	proto.RegisterType((*JieFengInfo)(nil), "ui.JieFengInfo")
	proto.RegisterType((*CSDianxingGet)(nil), "ui.CSDianxingGet")
	proto.RegisterType((*SCDianxingGet)(nil), "ui.SCDianxingGet")
	proto.RegisterType((*SCDianxingXingchenVary)(nil), "ui.SCDianxingXingchenVary")
	proto.RegisterType((*CSDianxingAdvanced)(nil), "ui.CSDianxingAdvanced")
	proto.RegisterType((*SCDianxingAdvanced)(nil), "ui.SCDianxingAdvanced")
	proto.RegisterType((*CSDianxingJiefengAdvanced)(nil), "ui.CSDianxingJiefengAdvanced")
	proto.RegisterType((*SCDianxingJiefengAdvanced)(nil), "ui.SCDianxingJiefengAdvanced")
	proto.RegisterType((*DianXingCacheInfo)(nil), "ui.DianXingCacheInfo")
}

func init() { proto.RegisterFile("dianxing.proto", fileDescriptor24) }

var fileDescriptor24 = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x8b, 0xda, 0x40,
	0x14, 0xc7, 0x99, 0xc4, 0xd8, 0xf4, 0x25, 0x6a, 0x9d, 0x5a, 0x1b, 0x6f, 0x61, 0x28, 0x25, 0xd0,
	0xd6, 0x83, 0xd0, 0x4b, 0x6f, 0x6d, 0xc4, 0x52, 0x29, 0x6d, 0x41, 0x29, 0x3d, 0xf4, 0x32, 0x9a,
	0x17, 0x9d, 0x25, 0x4e, 0xc4, 0x18, 0x59, 0xbf, 0xc1, 0x7e, 0x9b, 0xfd, 0x8a, 0xcb, 0x0c, 0xd1,
	0xc4, 0xb0, 0x2c, 0xee, 0xf1, 0x3d, 0xfe, 0xef, 0xff, 0x7e, 0xff, 0x37, 0x03, 0xed, 0x48, 0x70,
	0x79, 0x2b, 0xe4, 0x6a, 0xb8, 0xdd, 0xa5, 0xfb, 0x94, 0x1a, 0xb9, 0x60, 0xbf, 0xc1, 0x1d, 0x0b,
	0x2e, 0xff, 0x09, 0xb9, 0xfa, 0x21, 0xe3, 0x94, 0xb6, 0xa1, 0xa9, 0x14, 0x7f, 0x72, 0x8f, 0xf8,
	0x46, 0x60, 0xd1, 0x16, 0x58, 0x09, 0x1e, 0x30, 0xf1, 0x8c, 0x53, 0xb9, 0x48, 0x30, 0xcb, 0x3c,
	0xd3, 0x27, 0x81, 0x45, 0xbb, 0xf0, 0x52, 0x97, 0x73, 0xb1, 0x41, 0xaf, 0xe1, 0x93, 0xc0, 0x64,
	0x1f, 0xc0, 0x99, 0x0a, 0x9c, 0x60, 0xe1, 0x77, 0x9e, 0x27, 0x97, 0xf3, 0x86, 0x9a, 0x67, 0x1d,
	0x68, 0x85, 0xb3, 0x71, 0x41, 0xf5, 0x1d, 0xf7, 0x6c, 0x07, 0xad, 0x59, 0x58, 0x69, 0xd0, 0xf7,
	0xe0, 0x46, 0x15, 0x3e, 0x6d, 0xe3, 0x8c, 0x5e, 0x0d, 0x73, 0x31, 0xbc, 0xe0, 0x7e, 0x07, 0xce,
	0x4d, 0xb9, 0x56, 0xd3, 0x3a, 0xa3, 0x8e, 0x92, 0x55, 0x69, 0x5e, 0x83, 0xa3, 0x8c, 0xc3, 0x35,
	0xca, 0x5f, 0xf9, 0xc6, 0x33, 0x7d, 0x23, 0x30, 0xd9, 0x27, 0xe8, 0x97, 0x3b, 0x95, 0xe1, 0x72,
	0x8d, 0xf2, 0x2f, 0xdf, 0x1d, 0xeb, 0x72, 0xa2, 0xe5, 0x9f, 0x81, 0x96, 0xcc, 0x5f, 0xa3, 0x03,
	0x97, 0x4b, 0x8c, 0x68, 0x07, 0x5e, 0x2c, 0xf2, 0xe3, 0x24, 0xe1, 0x2b, 0x2d, 0xb3, 0xd5, 0x21,
	0xe3, 0x5c, 0xd7, 0x8a, 0xc5, 0x66, 0xf7, 0x04, 0x68, 0xb9, 0xe6, 0x3c, 0x77, 0x6d, 0xbe, 0xb7,
	0x60, 0x8b, 0x6c, 0x9c, 0xe6, 0x8b, 0x04, 0xf5, 0xed, 0xec, 0x2f, 0x56, 0xcc, 0x93, 0x0c, 0x69,
	0x0f, 0x5c, 0x5e, 0x98, 0xcd, 0x8f, 0x5b, 0xd4, 0x99, 0xac, 0x3a, 0x79, 0x43, 0x91, 0xd3, 0x7e,
	0xc9, 0x68, 0x55, 0x2d, 0xde, 0x9c, 0x51, 0x9b, 0x95, 0x36, 0xfb, 0x08, 0x83, 0x32, 0xe8, 0x54,
	0x60, 0x8c, 0x4f, 0xe4, 0x65, 0x77, 0x04, 0x06, 0x65, 0xbe, 0xba, 0xbc, 0xf6, 0x3c, 0xe4, 0xf1,
	0xe7, 0x79, 0x66, 0xc8, 0x4a, 0x9e, 0x46, 0x15, 0xfc, 0x3f, 0x74, 0x4f, 0xb7, 0x0b, 0xf9, 0x72,
	0x8d, 0xd7, 0x7c, 0x6c, 0x0a, 0x50, 0x00, 0xfe, 0xc4, 0x43, 0xe1, 0xdf, 0x03, 0xb7, 0xe8, 0x7d,
	0xd3, 0x7f, 0x56, 0x5d, 0xd1, 0x7a, 0x08, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x7d, 0x8a, 0x55, 0x46,
	0x03, 0x00, 0x00,
}
