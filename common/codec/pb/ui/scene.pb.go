// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scene.proto

package ui

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DesPosition struct {
	PosX             *float32 `protobuf:"fixed32,1,req,name=posX" json:"posX,omitempty"`
	PosY             *float32 `protobuf:"fixed32,2,req,name=posY" json:"posY,omitempty"`
	PosZ             *float32 `protobuf:"fixed32,3,req,name=posZ" json:"posZ,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DesPosition) Reset()                    { *m = DesPosition{} }
func (m *DesPosition) String() string            { return proto.CompactTextString(m) }
func (*DesPosition) ProtoMessage()               {}
func (*DesPosition) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{0} }

func (m *DesPosition) GetPosX() float32 {
	if m != nil && m.PosX != nil {
		return *m.PosX
	}
	return 0
}

func (m *DesPosition) GetPosY() float32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *DesPosition) GetPosZ() float32 {
	if m != nil && m.PosZ != nil {
		return *m.PosZ
	}
	return 0
}

type CSFuBenExit struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSFuBenExit) Reset()                    { *m = CSFuBenExit{} }
func (m *CSFuBenExit) String() string            { return proto.CompactTextString(m) }
func (*CSFuBenExit) ProtoMessage()               {}
func (*CSFuBenExit) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{1} }

type SCFuBenExit struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCFuBenExit) Reset()                    { *m = SCFuBenExit{} }
func (m *SCFuBenExit) String() string            { return proto.CompactTextString(m) }
func (*SCFuBenExit) ProtoMessage()               {}
func (*SCFuBenExit) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{2} }

type CSGoToNPC struct {
	NpcId            *int32 `protobuf:"varint,1,req,name=npcId" json:"npcId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSGoToNPC) Reset()                    { *m = CSGoToNPC{} }
func (m *CSGoToNPC) String() string            { return proto.CompactTextString(m) }
func (*CSGoToNPC) ProtoMessage()               {}
func (*CSGoToNPC) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{3} }

func (m *CSGoToNPC) GetNpcId() int32 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

type SCGoToNPC struct {
	NpcId            *int32 `protobuf:"varint,1,req,name=npcId" json:"npcId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCGoToNPC) Reset()                    { *m = SCGoToNPC{} }
func (m *SCGoToNPC) String() string            { return proto.CompactTextString(m) }
func (*SCGoToNPC) ProtoMessage()               {}
func (*SCGoToNPC) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{4} }

func (m *SCGoToNPC) GetNpcId() int32 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

type SCPlayerKilled struct {
	KillName         *string `protobuf:"bytes,1,req,name=killName" json:"killName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCPlayerKilled) Reset()                    { *m = SCPlayerKilled{} }
func (m *SCPlayerKilled) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerKilled) ProtoMessage()               {}
func (*SCPlayerKilled) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{5} }

func (m *SCPlayerKilled) GetKillName() string {
	if m != nil && m.KillName != nil {
		return *m.KillName
	}
	return ""
}

type SCPlayerAttacked struct {
	AttackId         *int64 `protobuf:"varint,1,req,name=attackId" json:"attackId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPlayerAttacked) Reset()                    { *m = SCPlayerAttacked{} }
func (m *SCPlayerAttacked) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerAttacked) ProtoMessage()               {}
func (*SCPlayerAttacked) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{6} }

func (m *SCPlayerAttacked) GetAttackId() int64 {
	if m != nil && m.AttackId != nil {
		return *m.AttackId
	}
	return 0
}

type SCScenePlayerDataChanged struct {
	Tp               *int64 `protobuf:"varint,1,opt,name=tp" json:"tp,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCScenePlayerDataChanged) Reset()                    { *m = SCScenePlayerDataChanged{} }
func (m *SCScenePlayerDataChanged) String() string            { return proto.CompactTextString(m) }
func (*SCScenePlayerDataChanged) ProtoMessage()               {}
func (*SCScenePlayerDataChanged) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{7} }

func (m *SCScenePlayerDataChanged) GetTp() int64 {
	if m != nil && m.Tp != nil {
		return *m.Tp
	}
	return 0
}

type SCScenePlayerSkillUse struct {
	SkillId          *int32 `protobuf:"varint,1,req,name=skillId" json:"skillId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCScenePlayerSkillUse) Reset()                    { *m = SCScenePlayerSkillUse{} }
func (m *SCScenePlayerSkillUse) String() string            { return proto.CompactTextString(m) }
func (*SCScenePlayerSkillUse) ProtoMessage()               {}
func (*SCScenePlayerSkillUse) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{8} }

func (m *SCScenePlayerSkillUse) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

type SCPlayerKill struct {
	PlayerId         *int64  `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	Role             *int32  `protobuf:"varint,2,req,name=role" json:"role,omitempty"`
	Sex              *int32  `protobuf:"varint,3,req,name=sex" json:"sex,omitempty"`
	Name             *string `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
	Force            *int64  `protobuf:"varint,5,req,name=force" json:"force,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCPlayerKill) Reset()                    { *m = SCPlayerKill{} }
func (m *SCPlayerKill) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerKill) ProtoMessage()               {}
func (*SCPlayerKill) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{9} }

func (m *SCPlayerKill) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *SCPlayerKill) GetRole() int32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *SCPlayerKill) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *SCPlayerKill) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SCPlayerKill) GetForce() int64 {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return 0
}

type CSPlayerFeiXieTransfer struct {
	MapId            *int32       `protobuf:"varint,1,req,name=mapId" json:"mapId,omitempty"`
	Pos              *DesPosition `protobuf:"bytes,2,req,name=pos" json:"pos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CSPlayerFeiXieTransfer) Reset()                    { *m = CSPlayerFeiXieTransfer{} }
func (m *CSPlayerFeiXieTransfer) String() string            { return proto.CompactTextString(m) }
func (*CSPlayerFeiXieTransfer) ProtoMessage()               {}
func (*CSPlayerFeiXieTransfer) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{10} }

func (m *CSPlayerFeiXieTransfer) GetMapId() int32 {
	if m != nil && m.MapId != nil {
		return *m.MapId
	}
	return 0
}

func (m *CSPlayerFeiXieTransfer) GetPos() *DesPosition {
	if m != nil {
		return m.Pos
	}
	return nil
}

type SCPlayerFeiXieTransfer struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPlayerFeiXieTransfer) Reset()                    { *m = SCPlayerFeiXieTransfer{} }
func (m *SCPlayerFeiXieTransfer) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerFeiXieTransfer) ProtoMessage()               {}
func (*SCPlayerFeiXieTransfer) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{11} }

type SCPlayerRelive struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPlayerRelive) Reset()                    { *m = SCPlayerRelive{} }
func (m *SCPlayerRelive) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerRelive) ProtoMessage()               {}
func (*SCPlayerRelive) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{12} }

type SceneRankPlayerInfo struct {
	PlayerId         *int64  `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	PlayerName       *string `protobuf:"bytes,2,req,name=playerName" json:"playerName,omitempty"`
	Value            *int64  `protobuf:"varint,3,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SceneRankPlayerInfo) Reset()                    { *m = SceneRankPlayerInfo{} }
func (m *SceneRankPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*SceneRankPlayerInfo) ProtoMessage()               {}
func (*SceneRankPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{13} }

func (m *SceneRankPlayerInfo) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *SceneRankPlayerInfo) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *SceneRankPlayerInfo) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type SceneSelfRankInfo struct {
	Rank             *int32 `protobuf:"varint,1,req,name=rank" json:"rank,omitempty"`
	Value            *int64 `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SceneSelfRankInfo) Reset()                    { *m = SceneSelfRankInfo{} }
func (m *SceneSelfRankInfo) String() string            { return proto.CompactTextString(m) }
func (*SceneSelfRankInfo) ProtoMessage()               {}
func (*SceneSelfRankInfo) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{14} }

func (m *SceneSelfRankInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *SceneSelfRankInfo) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type SceneRankInfo struct {
	RankType         *int32                 `protobuf:"varint,1,req,name=rankType" json:"rankType,omitempty"`
	PlayerList       []*SceneRankPlayerInfo `protobuf:"bytes,2,rep,name=playerList" json:"playerList,omitempty"`
	SelfRankInfo     *SceneSelfRankInfo     `protobuf:"bytes,3,req,name=selfRankInfo" json:"selfRankInfo,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *SceneRankInfo) Reset()                    { *m = SceneRankInfo{} }
func (m *SceneRankInfo) String() string            { return proto.CompactTextString(m) }
func (*SceneRankInfo) ProtoMessage()               {}
func (*SceneRankInfo) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{15} }

func (m *SceneRankInfo) GetRankType() int32 {
	if m != nil && m.RankType != nil {
		return *m.RankType
	}
	return 0
}

func (m *SceneRankInfo) GetPlayerList() []*SceneRankPlayerInfo {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

func (m *SceneRankInfo) GetSelfRankInfo() *SceneSelfRankInfo {
	if m != nil {
		return m.SelfRankInfo
	}
	return nil
}

type SCSceneRankChanged struct {
	RankInfo         *SceneRankInfo `protobuf:"bytes,2,req,name=rankInfo" json:"rankInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SCSceneRankChanged) Reset()                    { *m = SCSceneRankChanged{} }
func (m *SCSceneRankChanged) String() string            { return proto.CompactTextString(m) }
func (*SCSceneRankChanged) ProtoMessage()               {}
func (*SCSceneRankChanged) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{16} }

func (m *SCSceneRankChanged) GetRankInfo() *SceneRankInfo {
	if m != nil {
		return m.RankInfo
	}
	return nil
}

type SCPlayerEnterPVP struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPlayerEnterPVP) Reset()                    { *m = SCPlayerEnterPVP{} }
func (m *SCPlayerEnterPVP) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerEnterPVP) ProtoMessage()               {}
func (*SCPlayerEnterPVP) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{17} }

type SCPlayerExitPVP struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SCPlayerExitPVP) Reset()                    { *m = SCPlayerExitPVP{} }
func (m *SCPlayerExitPVP) String() string            { return proto.CompactTextString(m) }
func (*SCPlayerExitPVP) ProtoMessage()               {}
func (*SCPlayerExitPVP) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{18} }

type GeneralCollectInfo struct {
	NcpId            *int64    `protobuf:"varint,1,req,name=ncpId" json:"ncpId,omitempty"`
	Typ              *int32    `protobuf:"varint,2,req,name=typ" json:"typ,omitempty"`
	IsDead           *bool     `protobuf:"varint,3,req,name=isDead" json:"isDead,omitempty"`
	DeadTime         *int64    `protobuf:"varint,4,req,name=deadTime" json:"deadTime,omitempty"`
	Pos              *Position `protobuf:"bytes,5,opt,name=pos" json:"pos,omitempty"`
	BiologyId        *int32    `protobuf:"varint,6,req,name=biologyId" json:"biologyId,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GeneralCollectInfo) Reset()                    { *m = GeneralCollectInfo{} }
func (m *GeneralCollectInfo) String() string            { return proto.CompactTextString(m) }
func (*GeneralCollectInfo) ProtoMessage()               {}
func (*GeneralCollectInfo) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{19} }

func (m *GeneralCollectInfo) GetNcpId() int64 {
	if m != nil && m.NcpId != nil {
		return *m.NcpId
	}
	return 0
}

func (m *GeneralCollectInfo) GetTyp() int32 {
	if m != nil && m.Typ != nil {
		return *m.Typ
	}
	return 0
}

func (m *GeneralCollectInfo) GetIsDead() bool {
	if m != nil && m.IsDead != nil {
		return *m.IsDead
	}
	return false
}

func (m *GeneralCollectInfo) GetDeadTime() int64 {
	if m != nil && m.DeadTime != nil {
		return *m.DeadTime
	}
	return 0
}

func (m *GeneralCollectInfo) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *GeneralCollectInfo) GetBiologyId() int32 {
	if m != nil && m.BiologyId != nil {
		return *m.BiologyId
	}
	return 0
}

func init() {
	proto.RegisterType((*DesPosition)(nil), "ui.DesPosition")
	proto.RegisterType((*CSFuBenExit)(nil), "ui.CSFuBenExit")
	proto.RegisterType((*SCFuBenExit)(nil), "ui.SCFuBenExit")
	proto.RegisterType((*CSGoToNPC)(nil), "ui.CSGoToNPC")
	proto.RegisterType((*SCGoToNPC)(nil), "ui.SCGoToNPC")
	proto.RegisterType((*SCPlayerKilled)(nil), "ui.SCPlayerKilled")
	proto.RegisterType((*SCPlayerAttacked)(nil), "ui.SCPlayerAttacked")
	proto.RegisterType((*SCScenePlayerDataChanged)(nil), "ui.SCScenePlayerDataChanged")
	proto.RegisterType((*SCScenePlayerSkillUse)(nil), "ui.SCScenePlayerSkillUse")
	proto.RegisterType((*SCPlayerKill)(nil), "ui.SCPlayerKill")
	proto.RegisterType((*CSPlayerFeiXieTransfer)(nil), "ui.CSPlayerFeiXieTransfer")
	proto.RegisterType((*SCPlayerFeiXieTransfer)(nil), "ui.SCPlayerFeiXieTransfer")
	proto.RegisterType((*SCPlayerRelive)(nil), "ui.SCPlayerRelive")
	proto.RegisterType((*SceneRankPlayerInfo)(nil), "ui.SceneRankPlayerInfo")
	proto.RegisterType((*SceneSelfRankInfo)(nil), "ui.SceneSelfRankInfo")
	proto.RegisterType((*SceneRankInfo)(nil), "ui.SceneRankInfo")
	proto.RegisterType((*SCSceneRankChanged)(nil), "ui.SCSceneRankChanged")
	proto.RegisterType((*SCPlayerEnterPVP)(nil), "ui.SCPlayerEnterPVP")
	proto.RegisterType((*SCPlayerExitPVP)(nil), "ui.SCPlayerExitPVP")
	proto.RegisterType((*GeneralCollectInfo)(nil), "ui.GeneralCollectInfo")
}

func init() { proto.RegisterFile("scene.proto", fileDescriptor91) }

var fileDescriptor91 = []byte{
	// 554 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x55, 0xec, 0xba, 0xb4, 0xe3, 0xf4, 0x23, 0x8b, 0x5a, 0x4c, 0xc5, 0x21, 0x5a, 0x10, 0x8a,
	0x54, 0x29, 0x42, 0xb9, 0x20, 0x8e, 0xe0, 0xa4, 0x55, 0x00, 0x55, 0x51, 0x1d, 0x50, 0xe0, 0xb6,
	0xd8, 0x93, 0xb2, 0xca, 0x66, 0xd7, 0xf2, 0x6e, 0xaa, 0x44, 0x5c, 0xf8, 0xe9, 0x68, 0xd7, 0x1f,
	0x49, 0xa4, 0x72, 0xf3, 0xcc, 0xce, 0xbc, 0x79, 0xef, 0xcd, 0x18, 0x42, 0x9d, 0xa2, 0xc4, 0x7e,
	0x5e, 0x28, 0xa3, 0x88, 0xb7, 0xe2, 0x57, 0xed, 0x54, 0x2d, 0x97, 0x4a, 0x96, 0x19, 0xfa, 0x1e,
	0xc2, 0x21, 0xea, 0x89, 0xd2, 0xdc, 0x70, 0x25, 0x49, 0x1b, 0x0e, 0x72, 0xa5, 0x67, 0x51, 0xab,
	0xeb, 0xf5, 0xbc, 0x2a, 0xfa, 0x11, 0x79, 0x3b, 0xd1, 0xcf, 0xc8, 0xb7, 0x11, 0x3d, 0x81, 0x30,
	0x4e, 0x6e, 0x56, 0x9f, 0x50, 0x8e, 0xd6, 0xdc, 0xd8, 0x30, 0x89, 0xb7, 0xe1, 0x15, 0x1c, 0xc7,
	0xc9, 0xad, 0x9a, 0xaa, 0xbb, 0x49, 0x4c, 0x4e, 0x20, 0x90, 0x79, 0x3a, 0xce, 0x1c, 0x6a, 0x60,
	0xdf, 0x92, 0xf8, 0x3f, 0x6f, 0x14, 0x4e, 0x93, 0x78, 0x22, 0xd8, 0x06, 0x8b, 0x2f, 0x5c, 0x08,
	0xcc, 0xc8, 0x39, 0x1c, 0x2d, 0xb8, 0x10, 0x77, 0x6c, 0x89, 0xae, 0xe6, 0x98, 0xbe, 0x81, 0xf3,
	0xba, 0xe6, 0xa3, 0x31, 0x2c, 0x5d, 0x94, 0x55, 0xcc, 0x7d, 0x57, 0x48, 0x3e, 0x7d, 0x0b, 0x51,
	0x12, 0x27, 0x56, 0x7b, 0x59, 0x3a, 0x64, 0x86, 0xc5, 0xbf, 0x99, 0x7c, 0xc0, 0x8c, 0x00, 0x78,
	0x26, 0x8f, 0x5a, 0xdd, 0x56, 0xcf, 0xa7, 0x3d, 0xb8, 0xd8, 0xab, 0x4b, 0xec, 0xb4, 0x6f, 0x1a,
	0xc9, 0x19, 0x3c, 0xd3, 0xf6, 0xbb, 0xe1, 0x36, 0x83, 0xf6, 0x2e, 0x37, 0x3b, 0x33, 0x77, 0x51,
	0x3d, 0xd3, 0x3a, 0x54, 0x28, 0x81, 0xce, 0xaf, 0x80, 0x84, 0xe0, 0x6b, 0x5c, 0x3b, 0xbb, 0x02,
	0xfb, 0x24, 0xad, 0x84, 0x03, 0x2b, 0xc1, 0xaa, 0x9e, 0xab, 0x22, 0xc5, 0x28, 0x70, 0x5c, 0x47,
	0x70, 0x19, 0x27, 0x25, 0xf2, 0x0d, 0xf2, 0x19, 0xc7, 0x69, 0xc1, 0xa4, 0x9e, 0x63, 0x61, 0x0b,
	0x97, 0x2c, 0xaf, 0x29, 0x90, 0x57, 0xe0, 0xe7, 0x4a, 0x3b, 0xfc, 0x70, 0x70, 0xd6, 0x5f, 0xf1,
	0xfe, 0xce, 0xf2, 0x68, 0x04, 0x97, 0x35, 0xc1, 0x7d, 0x18, 0x7a, 0xbe, 0xb5, 0xf5, 0x1e, 0x05,
	0x7f, 0x44, 0xfa, 0x19, 0x9e, 0x3b, 0xd1, 0xf7, 0x4c, 0x2e, 0xca, 0x87, 0xb1, 0x9c, 0xab, 0x27,
	0x34, 0x11, 0x80, 0x32, 0xe3, 0x36, 0xe0, 0xd5, 0xf4, 0x1f, 0x99, 0x58, 0xa1, 0xd3, 0xe6, 0xd3,
	0x77, 0xd0, 0x71, 0x58, 0x09, 0x8a, 0xb9, 0xc5, 0x73, 0x48, 0xd6, 0x0b, 0x26, 0x17, 0x15, 0xf1,
	0xa6, 0xc3, 0x73, 0x1d, 0x7f, 0xe0, 0xa4, 0x99, 0x5e, 0xcf, 0xb5, 0xd5, 0xd3, 0x4d, 0x8e, 0x55,
	0xc7, 0x75, 0x3d, 0xf7, 0x2b, 0xd7, 0x26, 0xf2, 0xba, 0x7e, 0x2f, 0x1c, 0xbc, 0xb0, 0x8a, 0x9f,
	0xa2, 0x7d, 0x0d, 0x6d, 0xbd, 0x33, 0xdc, 0xf1, 0x0a, 0x07, 0x17, 0x4d, 0xf9, 0x2e, 0x33, 0xfa,
	0x01, 0x48, 0xb5, 0x71, 0x9b, 0xaa, 0x6f, 0xe2, 0x75, 0xc9, 0xc0, 0xb5, 0x97, 0xfe, 0x76, 0xf6,
	0xa6, 0xb9, 0x56, 0xb2, 0x3d, 0xbd, 0x91, 0x34, 0x58, 0x4c, 0xbe, 0x4f, 0x68, 0x07, 0xce, 0x9a,
	0xdc, 0x9a, 0x1b, 0x9b, 0xfa, 0xdb, 0x02, 0x72, 0x8b, 0x12, 0x0b, 0x26, 0x62, 0x25, 0x04, 0xa6,
	0xc6, 0xb1, 0xb4, 0xb7, 0x9e, 0xe6, 0x8d, 0xb3, 0x21, 0xf8, 0x66, 0x93, 0x57, 0xc7, 0x72, 0x0a,
	0x87, 0x5c, 0x0f, 0x91, 0x65, 0x8e, 0xfb, 0x91, 0x35, 0x24, 0x43, 0x96, 0x4d, 0x79, 0x75, 0x33,
	0x3e, 0x79, 0x59, 0xee, 0x3e, 0xe8, 0xb6, 0x7a, 0xe1, 0xa0, 0x6d, 0xb9, 0x35, 0x7f, 0x6d, 0x07,
	0x8e, 0x7f, 0x71, 0x25, 0xd4, 0xc3, 0x66, 0x9c, 0x45, 0x87, 0x16, 0xef, 0x5f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xbd, 0x3f, 0x66, 0x9b, 0xf7, 0x03, 0x00, 0x00,
}
