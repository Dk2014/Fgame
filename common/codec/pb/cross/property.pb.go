// Code generated by protoc-gen-go. DO NOT EDIT.
// source: property.proto

package cross

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Property struct {
	Key              *int32 `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Value            *int64 `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Property) Reset()                    { *m = Property{} }
func (m *Property) String() string            { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()               {}
func (*Property) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{0} }

func (m *Property) GetKey() int32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *Property) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type PropertyData struct {
	PropertyList     []*Property `protobuf:"bytes,1,rep,name=propertyList" json:"propertyList,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *PropertyData) Reset()                    { *m = PropertyData{} }
func (m *PropertyData) String() string            { return proto.CompactTextString(m) }
func (*PropertyData) ProtoMessage()               {}
func (*PropertyData) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{1} }

func (m *PropertyData) GetPropertyList() []*Property {
	if m != nil {
		return m.PropertyList
	}
	return nil
}

func init() {
	proto.RegisterType((*Property)(nil), "cross.Property")
	proto.RegisterType((*PropertyData)(nil), "cross.PropertyData")
}

func init() { proto.RegisterFile("property.proto", fileDescriptor22) }

var fileDescriptor22 = []byte{
	// 116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0xca, 0x2f,
	0x48, 0x2d, 0x2a, 0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0x2e, 0xca, 0x2f,
	0x2e, 0x56, 0x52, 0xe3, 0xe2, 0x08, 0x80, 0x4a, 0x08, 0x71, 0x73, 0x31, 0x67, 0xa7, 0x56, 0x4a,
	0x30, 0x2a, 0x30, 0x69, 0xb0, 0x0a, 0xf1, 0x72, 0xb1, 0x96, 0x25, 0xe6, 0x94, 0xa6, 0x4a, 0x30,
	0x29, 0x30, 0x69, 0x30, 0x2b, 0x99, 0x72, 0xf1, 0xc0, 0xd4, 0xb9, 0x24, 0x96, 0x24, 0x0a, 0xa9,
	0x72, 0xf1, 0xc0, 0x0c, 0xf4, 0xc9, 0x2c, 0x2e, 0x91, 0x60, 0x54, 0x60, 0xd6, 0xe0, 0x36, 0xe2,
	0xd7, 0x03, 0x9b, 0xaa, 0x07, 0x53, 0x0a, 0x08, 0x00, 0x00, 0xff, 0xff, 0x03, 0x64, 0x74, 0xfa,
	0x76, 0x00, 0x00, 0x00,
}
